## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming registration request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Поле value повинне містити коректну електронну адресу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      email: zbailey@example.net
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming authentication request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Поле value повинне містити коректну електронну адресу.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      remember:
        name: remember
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '|]|{+-'
      remember: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Поле value повинне містити коректну електронну адресу.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Поле value повинне містити коректну електронну адресу.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: architecto
      email: zbailey@example.net
      password: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search across all content types'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/search/autocomplete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Autocomplete search for quick suggestions'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular movies'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/series
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular series'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular people'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular tags'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular selections'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of movies with search, filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - created_at
          - imdb_score
          - first_air_date
          - duration
          - episodes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      kinds:
        name: kinds
        description: ''
        required: false
        example:
          - tv_series
        type: 'string[]'
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      statuses:
        name: statuses
        description: ''
        required: false
        example:
          - released
        type: 'string[]'
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_ids:
        name: studio_ids
        description: 'The <code>id</code> of an existing record in the studios table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      countries:
        name: countries
        description: 'Текст в полі value повинен мати довжину не більшу за 2.'
        required: false
        example:
          - ng
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_score:
        name: min_score
        description: 'Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_score:
        name: max_score
        description: 'Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_year:
        name: min_year
        description: 'Поле value повинне бути не менше 1900. Поле value має бути не більше 2035.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_year:
        name: max_year
        description: 'Поле value повинне бути не менше 1900. Поле value має бути не більше 2035.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_duration:
        name: min_duration
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_duration:
        name: max_duration
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 26
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_episodes_count:
        name: min_episodes_count
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 40
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_episodes_count:
        name: max_episodes_count
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: asc
      kinds:
        - tv_series
      statuses:
        - released
      studio_ids:
        - architecto
      tag_ids:
        - architecto
      person_ids:
        - architecto
      countries:
        - ng
      min_score: 6
      max_score: 7
      min_year: 15
      max_year: 8
      min_duration: 16
      max_duration: 26
      min_episodes_count: 40
      max_episodes_count: 4
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 min year \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 1900. (\u0442\u0430 \u0449\u0435 4 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"min_year":["\u041f\u043e\u043b\u0435 min year \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 1900."],"max_year":["\u041f\u043e\u043b\u0435 max year \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 1900."],"studio_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f studio_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"tag_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f tag_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"person_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f person_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jsfdejp5y1ges71npwm3dq5c","name":"Et eos tempore est.","slug":"et-eos-tempore-est-eilpmj","description":"Corporis dolore sit quod et ipsam minima laudantium. Est doloribus eius laboriosam delectus maiores. Quo nesciunt id molestiae a accusamus. Inventore voluptates maiores ea sit consequatur error. Doloremque repellendus facilis et cupiditate.","backdrop":null,"poster":"https:\/\/via.placeholder.com\/300x450.png\/007788?text=movies+Poster+beatae","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00eedd?text=movies+Movie+Poster+quo","kind":"movie","status":"ongoing","duration":95,"formatted_duration":"1 \u0433\u043e\u0434 35 \u0445\u0432","countries":null,"aliases":null,"first_air_date":"2016-09-16T00:00:00.000000Z","year":"2016","imdb_score":3.91,"is_published":true,"studio":{"id":"01jsfdejay2f4hj11wg87x2a2p","name":"\u0415\u0434\u0435\u043b\u044c\u0432\u0435\u0439\u0441-\u0413\u0440\u0443\u043f","slug":"edelveis-grup","description":"Consequatur architecto perspiciatis cumque ipsum repellat. Sed sint sed ea cum rerum possimus est quos. Aut repudiandae molestiae qui sed vel."},"tags":[{"id":"01jsfdehfegf5ps7fcmdc63d3v","name":"Martial Arts","slug":"martial-arts-eozdxu","description":"Quia dolores sed quia voluptas ut reprehenderit.","image":"https:\/\/via.placeholder.com\/640x480.png\/001166?text=tags+quibusdam","is_genre":false,"aliases":null,"movies_count":1,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"},{"id":"01jsfdehfmvfjk7qjg1pgd0ak4","name":"Post-Apocalyptic 515","slug":"post-apocalyptic-515-40uevw","description":"Omnis pariatur dolore omnis omnis qui repellendus impedit doloremque sed.","image":"https:\/\/via.placeholder.com\/640x480.png\/0033dd?text=tags+ducimus","is_genre":false,"aliases":null,"movies_count":1,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"}],"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z","seo":{"title":"Accusamus aliquam provident molestias.","description":"Libero et occaecati cupiditate ut rerum. Sit deserunt quo odit et consequatur deserunt.","image":"https:\/\/via.placeholder.com\/1200x630.png\/00cc22?text=seo+SEO+Image+sapiente"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/episodes'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes for a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jsfdek4hg161nw4qmn4qc3e0","movie_id":"01jsfdejp5y1ges71npwm3dq5c","number":1,"name":"Aut ex exercitationem.","slug":"aut-ex-exercitationem-h5yfwz","full_name":"Episode 1: Aut ex exercitationem.","description":"Iure dolor eum dicta. Quis necessitatibus fugit quasi molestiae rerum. Pariatur iste impedit blanditiis voluptas necessitatibus porro dolore.","duration":null,"formatted_duration":null,"air_date":"2024-06-13","is_filler":true,"picture_url":null,"created_at":"2025-04-22T18:51:30.000000Z","updated_at":"2025-04-22T18:51:30.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/episodes?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/episodes?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/episodes?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/episodes","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/persons'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get persons associated with a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/tags'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tags associated with a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jsfdehfegf5ps7fcmdc63d3v","name":"Martial Arts","slug":"martial-arts-eozdxu","description":"Quia dolores sed quia voluptas ut reprehenderit.","image":"https:\/\/via.placeholder.com\/640x480.png\/001166?text=tags+quibusdam","is_genre":false,"aliases":null,"movies_count":1,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"},{"id":"01jsfdehfmvfjk7qjg1pgd0ak4","name":"Post-Apocalyptic 515","slug":"post-apocalyptic-515-40uevw","description":"Omnis pariatur dolore omnis omnis qui repellendus impedit doloremque sed.","image":"https:\/\/via.placeholder.com\/640x480.png\/0033dd?text=tags+ducimus","is_genre":false,"aliases":null,"movies_count":1,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/tags?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/tags?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/tags?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/tags","per_page":15,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jsfdejztkez19xp411q9x7fc","user_id":"01jsfdegbnrkcxys0wcpkzxv69","movie_id":"01jsfdejp5y1ges71npwm3dq5c","number":2,"review":"Assumenda necessitatibus neque ducimus vel tempore. Deleniti autem error natus omnis et eveniet. Expedita ipsam et quo blanditiis inventore velit.","created_at":"2025-04-22T18:51:30.000000Z","updated_at":"2025-04-22T18:51:30.000000Z","movie":{"id":"01jsfdejp5y1ges71npwm3dq5c","name":"Et eos tempore est.","slug":"et-eos-tempore-est-eilpmj","description":"Corporis dolore sit quod et ipsam minima laudantium. Est doloribus eius laboriosam delectus maiores. Quo nesciunt id molestiae a accusamus. Inventore voluptates maiores ea sit consequatur error. Doloremque repellendus facilis et cupiditate.","poster":"https:\/\/via.placeholder.com\/300x450.png\/007788?text=movies+Poster+beatae","kind":"movie","status":"ongoing","year":"2016","imdb_score":3.91,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"}},{"id":"01jsfdek2dh8qz1s9288n7qrh2","user_id":"01jsfdegbkg8r4453thb022gsv","movie_id":"01jsfdejp5y1ges71npwm3dq5c","number":2,"review":"","created_at":"2025-04-22T18:51:30.000000Z","updated_at":"2025-04-22T18:51:30.000000Z","movie":{"id":"01jsfdejp5y1ges71npwm3dq5c","name":"Et eos tempore est.","slug":"et-eos-tempore-est-eilpmj","description":"Corporis dolore sit quod et ipsam minima laudantium. Est doloribus eius laboriosam delectus maiores. Quo nesciunt id molestiae a accusamus. Inventore voluptates maiores ea sit consequatur error. Doloremque repellendus facilis et cupiditate.","poster":"https:\/\/via.placeholder.com\/300x450.png\/007788?text=movies+Poster+beatae","kind":"movie","status":"ongoing","year":"2016","imdb_score":3.91,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"}}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/ratings?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/ratings?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/ratings?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/et-eos-tempore-est-eilpmj\/ratings","per_page":15,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/episodes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of episodes with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aired_after:
        name: aired_after
        description: 'Поле value не є датою.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_filler:
        name: include_filler
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      movie_id: architecto
      aired_after: '2025-04-22T19:16:30'
      include_filler: false
      sort: created_at
      direction: asc
      page: 22
      per_page: 7
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","prev":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=21","next":null},"meta":{"current_page":22,"from":null,"last_page":1,"links":[{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=21","label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","label":"1","active":false},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/episodes","per_page":7,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/aired-after/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes aired after a specific date'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      date: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      include_filler:
        name: include_filler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: number
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      include_filler: true
      sort: number
      direction: asc
      page: 16
      per_page: 22
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: aut-ex-exercitationem-h5yfwz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: aut-ex-exercitationem-h5yfwz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jsfdek4hg161nw4qmn4qc3e0","movie_id":"01jsfdejp5y1ges71npwm3dq5c","movie":{"id":"01jsfdejp5y1ges71npwm3dq5c","name":"Et eos tempore est.","slug":"et-eos-tempore-est-eilpmj","description":"Corporis dolore sit quod et ipsam minima laudantium. Est doloribus eius laboriosam delectus maiores. Quo nesciunt id molestiae a accusamus. Inventore voluptates maiores ea sit consequatur error. Doloremque repellendus facilis et cupiditate.","poster":"https:\/\/via.placeholder.com\/300x450.png\/007788?text=movies+Poster+beatae","kind":"movie","status":"ongoing","year":"2016","imdb_score":3.91,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},"number":1,"name":"Aut ex exercitationem.","slug":"aut-ex-exercitationem-h5yfwz","full_name":"Episode 1: Aut ex exercitationem.","description":"Iure dolor eum dicta. Quis necessitatibus fugit quasi molestiae rerum. Pariatur iste impedit blanditiis voluptas necessitatibus porro dolore.","duration":null,"formatted_duration":null,"air_date":"2024-06-13","is_filler":true,"pictures_url":[],"video_players":null,"comments_count":2,"created_at":"2025-04-22T18:51:30.000000Z","updated_at":"2025-04-22T18:51:30.000000Z","seo":{"meta_title":"E1: Aut ex exercitationem. | Aperiam architecto consequatur quidem.","meta_description":"Quia quis ex consequatur esse consequuntur eaque dolorem. Dolor fuga voluptas unde similique. Cupiditate facilis quis expedita est et.","meta_image":"https:\/\/via.placeholder.com\/1200x630.png\/002200?text=episode+Episode+Image+veritatis"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/movie/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes for a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aired_after:
        name: aired_after
        description: 'Поле value не є датою.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_filler:
        name: include_filler
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: number
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      movie_id: architecto
      aired_after: '2025-04-22T19:16:30'
      include_filler: false
      sort: number
      direction: asc
      page: 22
      per_page: 7
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj?page=1","prev":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj?page=21","next":null},"meta":{"current_page":22,"from":null,"last_page":1,"links":[{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj?page=21","label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj?page=1","label":"1","active":false},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/et-eos-tempore-est-eilpmj","per_page":7,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of persons with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - created_at
          - birth_date
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - voice_actor
        type: 'string[]'
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      genders:
        name: genders
        description: ''
        required: false
        example:
          - other
        type: 'string[]'
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_age:
        name: min_age
        description: 'Поле value повинне бути не менше 0. Поле value має бути не більше 150.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_age:
        name: max_age
        description: 'Поле value повинне бути не менше 0. Поле value має бути не більше 150.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      types:
        - voice_actor
      genders:
        - other
      movie_ids:
        - architecto
      min_age: 22
      max_age: 7
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454.","errors":{"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: margarita-iosipivna-antonenko-n3kmj9
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: margarita-iosipivna-antonenko-n3kmj9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/people/{person_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: margarita-iosipivna-antonenko-n3kmj9
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: margarita-iosipivna-antonenko-n3kmj9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/people\/margarita-iosipivna-antonenko-n3kmj9\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/people\/margarita-iosipivna-antonenko-n3kmj9\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/people\/margarita-iosipivna-antonenko-n3kmj9\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/people\/margarita-iosipivna-antonenko-n3kmj9\/movies","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/studios
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of studios with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      has_movies: false
      movie_ids:
        - architecto
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454.","errors":{"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: sunrise-5261
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: sunrise-5261
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jsfdehjg4crk1g6qawpyqp54","name":"Sunrise 5261","slug":"sunrise-5261","description":"Odio vel aut praesentium laborum. Nisi excepturi voluptates dignissimos eum et. Est est laborum quos magnam tempora autem velit omnis.","image":"https:\/\/via.placeholder.com\/400x400.png\/004422?text=studio+ut","aliases":null,"movies_count":0,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of tags with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      is_genre: true
      has_movies: false
      movie_ids:
        - architecto
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454.","errors":{"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: funny-815-h9lw2a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: funny-815-h9lw2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jsfdehdatq66sghx0r465kbk","name":"Funny 815","slug":"funny-815-h9lw2a","description":"Nemo eaque animi cumque cum aut minus aut voluptatem eos laboriosam.","image":"https:\/\/via.placeholder.com\/640x480.png\/006600?text=tags+in","is_genre":false,"aliases":null,"movies_count":1,"created_at":"2025-04-22T18:51:28.000000Z","updated_at":"2025-04-22T18:51:28.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{tag_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: funny-815-h9lw2a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: funny-815-h9lw2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jsfdejqfc5rknv48h4nyvqvr","name":"Aperiam architecto consequatur quidem.","slug":"aperiam-architecto-consequatur-quidem-grcoq5","description":"Repellendus eum qui qui tempora distinctio molestiae nobis. Alias error temporibus odit rerum. Ut modi recusandae doloremque nostrum doloremque.","poster":"https:\/\/via.placeholder.com\/300x450.png\/00cc33?text=movies+Poster+rerum","kind":"tv_series","status":"ongoing","year":"2021","imdb_score":7.82,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/tags\/funny-815-h9lw2a\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/tags\/funny-815-h9lw2a\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/tags\/funny-815-h9lw2a\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/tags\/funny-815-h9lw2a\/movies","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of selections with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: movies_count
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
          - user_lists_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_persons:
        name: has_persons
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: movies_count
      direction: asc
      is_published: false
      user_id: architecto
      has_movies: false
      has_persons: true
      movie_ids:
        - architecto
      person_ids:
        - architecto
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f user id \u043d\u0435 \u0456\u0441\u043d\u0443\u0454. (\u0442\u0430 \u0449\u0435 2 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"user_id":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f user id \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"person_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f person_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: iusto-error-sed-sunt-qv8jnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: iusto-error-sed-sunt-qv8jnj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jsfdekmvhr80wcmmdycqwjf8","name":"Iusto error sed sunt.","slug":"iusto-error-sed-sunt-qv8jnj","description":"Ipsa voluptas ullam veniam iusto. Dignissimos sed distinctio autem quam. Quaerat quia quia nesciunt voluptatibus. Odit voluptatibus aut quo voluptatem ducimus alias voluptates qui.","meta_title":"Iusto error sed sunt. | Netflix","meta_description":"Molestiae quia sint eius non enim dolorem et ad in hic quam.","meta_image":"https:\/\/via.placeholder.com\/1200x630.png\/00ccdd?text=selection+impedit","is_published":false,"user":{"id":"01jsfdegba5zn3050fh7kx4c0w","name":"nina.brovarenko"},"movies_count":9,"user_lists_count":0,"created_at":"2025-04-22T18:51:30.000000Z","updated_at":"2025-04-22T18:51:30.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: iusto-error-sed-sunt-qv8jnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: iusto-error-sed-sunt-qv8jnj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jsfdejp615z9d1e5nfdzkvx9","name":"Facilis doloremque accusantium veniam.","slug":"facilis-doloremque-accusantium-veniam-f45ita","description":"Neque tempora blanditiis reiciendis rerum et ullam recusandae. Nesciunt consequatur eius quo nihil consequatur dolorem vel. Quasi unde non aspernatur.","poster":"https:\/\/via.placeholder.com\/300x450.png\/005500?text=movies+Poster+placeat","kind":"animated_series","status":"anons","year":"2020","imdb_score":4.65,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejpcmnvk26s8vz61t87w","name":"Vero ut.","slug":"vero-ut-nvbq6s","description":"Eius et et ea deleniti eos. Veniam ea molestiae nobis ut maxime quia. Fugiat quae suscipit ipsa fugiat sed id asperiores eum. Ad assumenda molestiae consequatur omnis eum.","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb99?text=movies+Poster+nihil","kind":"tv_series","status":"canceled","year":"2016","imdb_score":7.06,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejpnb9j6wnkk0sh5rs8x","name":"Accusamus necessitatibus enim alias.","slug":"accusamus-necessitatibus-enim-alias-ymqkxp","description":"Repellendus officia omnis eos qui aliquam nihil. A hic dolorum sit enim. Voluptatem inventore nihil saepe nobis natus id doloribus. Sit rem veniam dolores.","poster":"https:\/\/via.placeholder.com\/300x450.png\/0000bb?text=movies+Poster+ratione","kind":"tv_series","status":"ongoing","year":"2021","imdb_score":3.06,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejpqes0w9sk980wrm63q","name":"Cupiditate eos eligendi sunt voluptatem.","slug":"cupiditate-eos-eligendi-sunt-voluptatem-x4dfi5","description":"Voluptatem excepturi ad expedita at totam. Fugit asperiores commodi itaque et. Delectus nemo nihil dicta ut sequi iure. Eveniet voluptatem sit velit voluptatem.","poster":"https:\/\/via.placeholder.com\/300x450.png\/0088ee?text=movies+Poster+beatae","kind":"tv_series","status":"canceled","year":"2016","imdb_score":8.79,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejpvfwvxdagqr5gvkpdz","name":"Quam explicabo sit neque.","slug":"quam-explicabo-sit-neque-8wm00z","description":"Totam minus quisquam eaque dolorum. Quo doloribus id sed optio delectus omnis. Sed explicabo omnis sint natus. Laborum placeat nihil ut nesciunt consectetur et.","poster":"https:\/\/via.placeholder.com\/300x450.png\/002299?text=movies+Poster+cupiditate","kind":"tv_series","status":"canceled","year":"2016","imdb_score":3.7,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejpyes1mdsgcearjw994","name":"Numquam a mollitia excepturi.","slug":"numquam-a-mollitia-excepturi-u5iuzv","description":"Necessitatibus culpa voluptatem voluptatem atque perspiciatis sint expedita. Molestiae autem dolor corrupti et quod incidunt soluta. Ab voluptatum reiciendis dolore molestias omnis.","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccaa?text=movies+Poster+labore","kind":"animated_movie","status":"anons","year":"2022","imdb_score":9.83,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejq0h6gsa7b1jsy9ya42","name":"Fugiat dolorum.","slug":"fugiat-dolorum-gybvfp","description":"Sit sed repellendus ut eum qui debitis tempora explicabo. Quis nam doloremque enim placeat ad ducimus sunt et. Necessitatibus dolorum asperiores ipsa.","poster":"https:\/\/via.placeholder.com\/300x450.png\/00cc77?text=movies+Poster+similique","kind":"movie","status":"anons","year":"2021","imdb_score":8.55,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejqd5k7xqz55darsrt7r","name":"Facere iure voluptate.","slug":"facere-iure-voluptate-bj7qvu","description":"Est facilis ut et cum pariatur. Aut dolor culpa consequatur nesciunt rerum et. Ut corrupti repudiandae quis. Ea consectetur itaque eos.","poster":"https:\/\/via.placeholder.com\/300x450.png\/007788?text=movies+Poster+aut","kind":"movie","status":"canceled","year":"2020","imdb_score":7.31,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"},{"id":"01jsfdejqe87n3by6ysn8d5sg1","name":"Voluptas dolorem officiis quae.","slug":"voluptas-dolorem-officiis-quae-evslvg","description":"Temporibus autem quo assumenda aperiam sit sint et. Consequatur itaque omnis omnis aut quae quam dignissimos. Et distinctio odit qui quo.","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccff?text=movies+Poster+animi","kind":"tv_series","status":"released","year":"2023","imdb_score":7.81,"created_at":"2025-04-22T18:51:29.000000Z","updated_at":"2025-04-22T18:51:29.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/selections\/iusto-error-sed-sunt-qv8jnj\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/selections\/iusto-error-sed-sunt-qv8jnj\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/selections\/iusto-error-sed-sunt-qv8jnj\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/selections\/iusto-error-sed-sunt-qv8jnj\/movies","per_page":15,"to":9,"total":9}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}/persons'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get persons associated with a specific selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: iusto-error-sed-sunt-qv8jnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: iusto-error-sed-sunt-qv8jnj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments/recent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get recent comments'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/roots/{commentable_type}/{commentable_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get root comments for a specific commentable'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentable_type:
        name: commentable_type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: 'The ID of the commentable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentable_type: architecto
      commentable_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Поле value повинне бути не менше 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: likes_count
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: ''
        required: false
        example: App\Models\Episode
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: likes_count
      direction: desc
      is_spoiler: true
      user_id: architecto
      commentable_type: App\Models\Episode
      commentable_id: architecto
      is_root: false
      parent_id: architecto
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f user id \u043d\u0435 \u0456\u0441\u043d\u0443\u0454. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"user_id":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f user id \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"parent_id":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f parent id \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/kinds
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie kinds with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"movie","label":"Movie","color":"danger","icon":"heroicon-o-film","seo":{"meta_title":"Movies Online | Netflix","meta_description":"Watch the best movies online, from classics to the latest releases.","meta_image":"\/images\/seo\/movie.jpg"}},{"value":"tv_series","label":"TV Series","color":"primary","icon":"heroicon-o-tv","seo":{"meta_title":"TV Series Online | Netflix","meta_description":"Explore the best TV series online, from comedies to dramas.","meta_image":"\/images\/seo\/tv-series.jpg"}},{"value":"animated_movie","label":"Animated Movie","color":"success","icon":"heroicon-o-sparkles","seo":{"meta_title":"Animated Movies Online | Netflix","meta_description":"Watch animated movies with captivating graphics and storylines.","meta_image":"\/images\/seo\/animated-movie.jpg"}},{"value":"animated_series","label":"Animated Series","color":"info","icon":"heroicon-o-play","seo":{"meta_title":"Animated Series Online | Netflix","meta_description":"Watch animated series for all age groups online.","meta_image":"\/images\/seo\/animated-series.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/kinds/{kind}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie kind with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      kind:
        name: kind
        description: 'The kind.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      kind: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid kind value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/statuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie statuses with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"anons","label":"Announced","color":"info","icon":"heroicon-o-megaphone","seo":{"meta_title":"Announced Movies and Series | Netflix","meta_description":"Movies and series that are coming soon","meta_image":"\/images\/seo\/status-anons.jpg"}},{"value":"ongoing","label":"Ongoing","color":"success","icon":"heroicon-o-play","seo":{"meta_title":"Ongoing Movies and Series | Netflix","meta_description":"Movies and series that are currently airing","meta_image":"\/images\/seo\/status-ongoing.jpg"}},{"value":"released","label":"Released","color":"primary","icon":"heroicon-o-check-badge","seo":{"meta_title":"Released Movies and Series | Netflix","meta_description":"Movies and series that have been completed","meta_image":"\/images\/seo\/status-released.jpg"}},{"value":"canceled","label":"Canceled","color":"danger","icon":"heroicon-o-x-circle","seo":{"meta_title":"Canceled Movies and Series | Netflix","meta_description":"Movies and series that have been canceled","meta_image":"\/images\/seo\/status-canceled.jpg"}},{"value":"rumored","label":"Rumored","color":"gray","icon":"heroicon-o-chat-bubble-left-ellipsis","seo":{"meta_title":"Rumored Movies and Series | Netflix","meta_description":"Movies and series that are rumored to be in development","meta_image":"\/images\/seo\/status-rumored.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/statuses/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie status with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid status value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/person-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all person types with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"actor","label":"\u0410\u043a\u0442\u043e\u0440","color":"primary","icon":"heroicon-o-user","seo":{"meta_title":"\u0410\u043a\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u0410\u043a\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u0437\u043d\u0456\u043c\u0430\u044e\u0442\u044c\u0441\u044f \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-actor.jpg"}},{"value":"character","label":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436","color":"info","icon":"heroicon-o-user-circle","seo":{"meta_title":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456 | Netflix","meta_description":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-character.jpg"}},{"value":"director","label":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440","color":"danger","icon":"heroicon-o-video-camera","seo":{"meta_title":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-director.jpg"}},{"value":"producer","label":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440","color":"success","icon":"heroicon-o-currency-dollar","seo":{"meta_title":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0444\u0456\u043d\u0430\u043d\u0441\u0443\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-producer.jpg"}},{"value":"writer","label":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442","color":"warning","icon":"heroicon-o-document-text","seo":{"meta_title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442\u0438 | Netflix","meta_description":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442\u0438, \u044f\u043a\u0456 \u043f\u0438\u0448\u0443\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u0457 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-writer.jpg"}},{"value":"editor","label":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440","color":"gray","icon":"heroicon-o-scissors","seo":{"meta_title":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440\u0438 | Netflix","meta_description":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440\u0438, \u044f\u043a\u0456 \u043c\u043e\u043d\u0442\u0443\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-editor.jpg"}},{"value":"cinematographer","label":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440","color":"info","icon":"heroicon-o-camera","seo":{"meta_title":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u0437\u043d\u0456\u043c\u0430\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-cinematographer.jpg"}},{"value":"composer","label":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440","color":"primary","icon":"heroicon-o-musical-note","seo":{"meta_title":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u043f\u0438\u0448\u0443\u0442\u044c \u043c\u0443\u0437\u0438\u043a\u0443 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-composer.jpg"}},{"value":"art_director","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a","color":"success","icon":"heroicon-o-paint-brush","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0438\u043b\u044c \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-art-director.jpg"}},{"value":"sound_designer","label":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440","color":"warning","icon":"heroicon-o-speaker-wave","seo":{"meta_title":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0437\u0432\u0443\u043a\u043e\u0432\u0435 \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u043d\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-sound-designer.jpg"}},{"value":"costume_designer","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445","color":"info","icon":"heroicon-o-speaker-wave","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u043a\u043e\u0441\u0442\u044e\u043c\u0438 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-costume-designer.jpg"}},{"value":"makeup_artist","label":"\u0413\u0440\u0438\u043c\u0435\u0440","color":"primary","icon":"heroicon-o-face-smile","seo":{"meta_title":"\u0413\u0440\u0438\u043c\u0435\u0440\u0438 | Netflix","meta_description":"\u0413\u0440\u0438\u043c\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0433\u0440\u0438\u043c \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-makeup-artist.jpg"}},{"value":"voice_actor","label":"\u0410\u043a\u0442\u043e\u0440 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f","color":"success","icon":"heroicon-o-microphone","seo":{"meta_title":"\u0410\u043a\u0442\u043e\u0440\u0438 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f | Netflix","meta_description":"\u0410\u043a\u0442\u043e\u0440\u0438 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u043e\u0437\u0432\u0443\u0447\u0443\u044e\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456\u0432 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-voice-actor.jpg"}},{"value":"stunt_performer","label":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440","color":"danger","icon":"heroicon-o-bolt","seo":{"meta_title":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440\u0438 | Netflix","meta_description":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440\u0438, \u044f\u043a\u0456 \u0432\u0438\u043a\u043e\u043d\u0443\u044e\u0442\u044c \u0442\u0440\u044e\u043a\u0438 \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-stunt-performer.jpg"}},{"value":"assistant_director","label":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430","color":"warning","icon":"heroicon-o-user-plus","seo":{"meta_title":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430 | Netflix","meta_description":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430, \u044f\u043a\u0456 \u0434\u043e\u043f\u043e\u043c\u0430\u0433\u0430\u044e\u0442\u044c \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430\u043c \u0443 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-assistant-director.jpg"}},{"value":"producer_assistant","label":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430","color":"gray","icon":"heroicon-o-user-plus","seo":{"meta_title":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430 | Netflix","meta_description":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430, \u044f\u043a\u0456 \u0434\u043e\u043f\u043e\u043c\u0430\u0433\u0430\u044e\u0442\u044c \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430\u043c \u0443 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-producer-assistant.jpg"}},{"value":"script_supervisor","label":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e","color":"info","icon":"heroicon-o-clipboard-document-check","seo":{"meta_title":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e | Netflix","meta_description":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e, \u044f\u043a\u0456 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044e\u044e\u0442\u044c \u0434\u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-script-supervisor.jpg"}},{"value":"production_designer","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a","color":"primary","icon":"heroicon-o-paint-brush","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0438\u043b\u044c \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-production-designer.jpg"}},{"value":"visual_effects_supervisor","label":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432","color":"success","icon":"heroicon-o-sparkles","seo":{"meta_title":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432 | Netflix","meta_description":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0456 \u0435\u0444\u0435\u043a\u0442\u0438 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-visual-effects-supervisor.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/person-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific person type with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid person type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/user-list-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all user list types with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"favorite","label":"\u0423\u043b\u044e\u0431\u043b\u0435\u043d\u0435","color":"danger","icon":"heroicon-o-heart","seo":{"meta_title":"\u0423\u043b\u044e\u0431\u043b\u0435\u043d\u0435 | Netflix","meta_description":"\u0412\u0430\u0448\u0456 \u0443\u043b\u044e\u0431\u043b\u0435\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/list-favorite.jpg"}},{"value":"not_watching","label":"\u041d\u0435 \u0434\u0438\u0432\u043b\u044e\u0441\u044f","color":"gray","icon":"heroicon-o-x-mark","seo":{"meta_title":"\u041d\u0435 \u0434\u0438\u0432\u043b\u044e\u0441\u044f | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043d\u0435 \u0434\u0438\u0432\u0438\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-not-watching.jpg"}},{"value":"watching","label":"\u0414\u0438\u0432\u043b\u044e\u0441\u044f","color":"success","icon":"heroicon-o-play","seo":{"meta_title":"\u0414\u0438\u0432\u043b\u044e\u0441\u044f | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u0437\u0430\u0440\u0430\u0437 \u0434\u0438\u0432\u0438\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-watching.jpg"}},{"value":"planned","label":"\u0412 \u043f\u043b\u0430\u043d\u0430\u0445","color":"info","icon":"heroicon-o-clock","seo":{"meta_title":"\u0412 \u043f\u043b\u0430\u043d\u0430\u0445 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u043b\u0430\u043d\u0443\u0454\u0442\u0435 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c","meta_image":"\/images\/seo\/list-planned.jpg"}},{"value":"stopped","label":"\u0417\u0430\u043a\u0438\u043d\u0443\u0432","color":"warning","icon":"heroicon-o-stop","seo":{"meta_title":"\u0417\u0430\u043a\u0438\u043d\u0443\u0432 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043b\u0438 \u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c","meta_image":"\/images\/seo\/list-stopped.jpg"}},{"value":"rewatching","label":"\u041f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u044e\u0441\u044c","color":"primary","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u044e\u0441\u044c | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u0454\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-rewatching.jpg"}},{"value":"watched","label":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u0442\u043e","color":"success","icon":"heroicon-o-check","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u0442\u043e | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u0432\u0436\u0435 \u043f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u043b\u0438","meta_image":"\/images\/seo\/list-watched.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/user-list-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific user list type with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid user list type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/video-qualities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all video qualities with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"sd","label":"SD","color":"gray","icon":"heroicon-o-eye","seo":{"meta_title":"SD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (SD)","meta_image":"\/images\/seo\/quality-sd.jpg"}},{"value":"hd","label":"HD","color":"info","icon":"heroicon-o-eye","seo":{"meta_title":"HD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 \u0432\u0438\u0441\u043e\u043a\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (HD)","meta_image":"\/images\/seo\/quality-hd.jpg"}},{"value":"full_hd","label":"Full HD","color":"success","icon":"heroicon-o-eye","seo":{"meta_title":"Full HD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 Full HD \u044f\u043a\u043e\u0441\u0442\u0456","meta_image":"\/images\/seo\/quality-full-hd.jpg"}},{"value":"uhd","label":"UHD (4K)","color":"primary","icon":"heroicon-o-eye","seo":{"meta_title":"UHD (4K) \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 \u043d\u0430\u0434\u0432\u0438\u0441\u043e\u043a\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (UHD\/4K)","meta_image":"\/images\/seo\/quality-uhd.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/video-qualities/{quality}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific video quality with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      quality:
        name: quality
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      quality: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid video quality value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/genders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all genders with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"male","label":"Male","color":"info","icon":"heroicon-o-user","seo":{"meta_title":"Male Gender | Netflix","meta_description":"Content for male audience","meta_image":"\/images\/seo\/gender-male.jpg"}},{"value":"female","label":"Female","color":"pink","icon":"heroicon-o-user","seo":{"meta_title":"Female Gender | Netflix","meta_description":"Content for female audience","meta_image":"\/images\/seo\/gender-female.jpg"}},{"value":"other","label":"Other","color":"gray","icon":"heroicon-o-user","seo":{"meta_title":"Other Gender | Netflix","meta_description":"Content for everyone","meta_image":"\/images\/seo\/gender-other.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/genders/{gender}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific gender with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gender:
        name: gender
        description: 'The gender.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gender: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid gender value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/comment-report-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all comment report types with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"insult","label":"\u041e\u0431\u0440\u0430\u0437\u0430","color":"danger","icon":"heroicon-o-face-frown","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043e\u0431\u0440\u0430\u0437\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043e\u0431\u0440\u0430\u0437\u043b\u0438\u0432\u0456 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456","meta_image":"\/images\/seo\/report-insult.jpg"}},{"value":"flood_offtop_meaningless","label":"\u0424\u043b\u0443\u0434\/\u041e\u0444\u0444\u0442\u043e\u043f\/\u0411\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456\u0441\u0442\u044c","color":"gray","icon":"heroicon-o-chat-bubble-oval-left-ellipsis","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0444\u043b\u0443\u0434\/\u043e\u0444\u0444\u0442\u043e\u043f | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0444\u043b\u0443\u0434, \u043e\u0444\u0444\u0442\u043e\u043f \u0442\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456","meta_image":"\/images\/seo\/report-flood.jpg"}},{"value":"ad_spam","label":"\u0420\u0435\u043a\u043b\u0430\u043c\u0430\/\u0421\u043f\u0430\u043c","color":"warning","icon":"heroicon-o-megaphone","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u0443\/\u0441\u043f\u0430\u043c | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u0443 \u0442\u0430 \u0441\u043f\u0430\u043c \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-spam.jpg"}},{"value":"spoiler","label":"\u0421\u043f\u043e\u0439\u043b\u0435\u0440","color":"info","icon":"heroicon-o-eye-slash","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u0438 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-spoiler.jpg"}},{"value":"provocation_conflict","label":"\u041f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u044f\/\u041a\u043e\u043d\u0444\u043b\u0456\u043a\u0442","color":"danger","icon":"heroicon-o-fire","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u0457 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u0457 \u0442\u0430 \u043a\u043e\u043d\u0444\u043b\u0456\u043a\u0442\u0438 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-provocation.jpg"}},{"value":"inappropriate_language","label":"\u041d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0430 \u043b\u0435\u043a\u0441\u0438\u043a\u0430","color":"warning","icon":"heroicon-o-no-symbol","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443 \u043b\u0435\u043a\u0441\u0438\u043a\u0443 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443 \u043b\u0435\u043a\u0441\u0438\u043a\u0443 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-language.jpg"}},{"value":"forbidden_unnecessary_content","label":"\u0417\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439\/\u041d\u0435\u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442","color":"danger","icon":"heroicon-o-shield-exclamation","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439 \u0442\u0430 \u043d\u0435\u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-forbidden.jpg"}},{"value":"meaningless_empty_topic","label":"\u0411\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0430\/\u041f\u043e\u0440\u043e\u0436\u043d\u044f \u0442\u0435\u043c\u0430","color":"gray","icon":"heroicon-o-document-text","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u0442\u0435\u043c\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u0442\u0430 \u043f\u043e\u0440\u043e\u0436\u043d\u0456 \u0442\u0435\u043c\u0438","meta_image":"\/images\/seo\/report-meaningless.jpg"}},{"value":"duplicate_topic","label":"\u0414\u0443\u0431\u043b\u0456\u043a\u0430\u0442 \u0442\u0435\u043c\u0438","color":"primary","icon":"heroicon-o-document-duplicate","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0434\u0443\u0431\u043b\u0456\u043a\u0430\u0442\u0438 \u0442\u0435\u043c | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0434\u0443\u0431\u043b\u0456\u043a\u0430\u0442\u0438 \u0442\u0435\u043c","meta_image":"\/images\/seo\/report-duplicate.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/comment-report-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific comment report type with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid comment report type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/movie-relate-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie relate types with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"season","label":"\u0421\u0435\u0437\u043e\u043d","color":"info","icon":"heroicon-o-calendar","seo":{"meta_title":"\u0421\u0435\u0437\u043e\u043d\u0438 | Netflix","meta_description":"\u0421\u0435\u0437\u043e\u043d\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-season.jpg"}},{"value":"source","label":"\u0414\u0436\u0435\u0440\u0435\u043b\u043e","color":"gray","icon":"heroicon-o-book-open","seo":{"meta_title":"\u0414\u0436\u0435\u0440\u0435\u043b\u0430 | Netflix","meta_description":"\u0414\u0436\u0435\u0440\u0435\u043b\u0430 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-source.jpg"}},{"value":"sequel","label":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f","color":"success","icon":"heroicon-o-arrow-right","seo":{"meta_title":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f | Netflix","meta_description":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-sequel.jpg"}},{"value":"side_story","label":"\u041f\u043e\u0431\u0456\u0447\u043d\u0430 \u0456\u0441\u0442\u043e\u0440\u0456\u044f","color":"primary","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u043e\u0431\u0456\u0447\u043d\u0456 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 | Netflix","meta_description":"\u041f\u043e\u0431\u0456\u0447\u043d\u0456 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-side-story.jpg"}},{"value":"summary","label":"\u041f\u0456\u0434\u0441\u0443\u043c\u043e\u043a","color":"warning","icon":"heroicon-o-document-text","seo":{"meta_title":"\u041f\u0456\u0434\u0441\u0443\u043c\u043a\u0438 | Netflix","meta_description":"\u041f\u0456\u0434\u0441\u0443\u043c\u043a\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-summary.jpg"}},{"value":"other","label":"\u0406\u043d\u0448\u0435","color":"gray","icon":"heroicon-o-ellipsis-horizontal","seo":{"meta_title":"\u0406\u043d\u0448\u0456 \u0437\u0432''\u044f\u0437\u043a\u0438 | Netflix","meta_description":"\u0406\u043d\u0448\u0456 \u0437\u0432''\u044f\u0437\u043a\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-other.jpg"}},{"value":"adaptation","label":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u044f","color":"orange","icon":"heroicon-o-film","seo":{"meta_title":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u0457 | Netflix","meta_description":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-adaptation.jpg"}},{"value":"alternative","label":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0430","color":"pink","icon":"heroicon-o-arrows-right-left","seo":{"meta_title":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0438 | Netflix","meta_description":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u0456 \u0432\u0435\u0440\u0441\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-alternative.jpg"}},{"value":"prequel","label":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u044f","color":"danger","icon":"heroicon-o-arrow-left","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u0457 | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-prequel.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/movie-relate-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie relate type with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid movie relate type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/payment-statuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all payment statuses with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"pending","label":"\u0412 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456","color":"warning","icon":"heroicon-o-clock","seo":{"meta_title":"\u041f\u043b\u0430\u0442\u0456\u0436 \u0432 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456 | Netflix","meta_description":"\u0412\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0432 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f","meta_image":"\/images\/seo\/payment-pending.jpg"}},{"value":"success","label":"\u0423\u0441\u043f\u0456\u0448\u043d\u043e","color":"success","icon":"heroicon-o-check-circle","seo":{"meta_title":"\u0423\u0441\u043f\u0456\u0448\u043d\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u0412\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0443\u0441\u043f\u0456\u0448\u043d\u043e \u043e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e","meta_image":"\/images\/seo\/payment-success.jpg"}},{"value":"failed","label":"\u041d\u0435\u0432\u0434\u0430\u043b\u043e","color":"danger","icon":"heroicon-o-x-circle","seo":{"meta_title":"\u041d\u0435\u0432\u0434\u0430\u043b\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u0412\u0438\u043d\u0438\u043a\u043b\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u0440\u043e\u0431\u0446\u0456 \u0432\u0430\u0448\u043e\u0433\u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0443","meta_image":"\/images\/seo\/payment-failed.jpg"}},{"value":"refunded","label":"\u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u043e","color":"info","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u041a\u043e\u0448\u0442\u0438 \u0437\u0430 \u0432\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0431\u0443\u043b\u043e \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u043e","meta_image":"\/images\/seo\/payment-refunded.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/payment-statuses/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific payment status with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid payment status value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/api-source-names
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all API source names with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"tmdb","label":"TMDB","color":"success","icon":"heroicon-o-film","seo":{"meta_title":"TMDB API | Netflix","meta_description":"Data from The Movie Database API","meta_image":"\/images\/seo\/api-tmdb.jpg"}},{"value":"shiki","label":"Shikimori","color":"primary","icon":"heroicon-o-sun","seo":{"meta_title":"Shikimori API | Netflix","meta_description":"Data from Shikimori API","meta_image":"\/images\/seo\/api-shiki.jpg"}},{"value":"imdb","label":"IMDB","color":"warning","icon":"heroicon-o-star","seo":{"meta_title":"IMDB API | Netflix","meta_description":"Data from Internet Movie Database API","meta_image":"\/images\/seo\/api-imdb.jpg"}},{"value":"anilist","label":"AniList","color":"info","icon":"heroicon-o-book-open","seo":{"meta_title":"AniList API | Netflix","meta_description":"Data from AniList API","meta_image":"\/images\/seo\/api-anilist.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/api-source-names/{source}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific API source name with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      source:
        name: source
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      source: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid API source name value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/attachment-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all attachment types with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: en
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"trailer","label":"Trailer","color":"danger","icon":"heroicon-o-film","seo":{"meta_title":"enums.attachment_type.meta_title.trailer","meta_description":"enums.attachment_type.meta_description.trailer","meta_image":"enums.attachment_type.meta_image.trailer"}},{"value":"teaser","label":"Teaser","color":"warning","icon":"heroicon-o-eye","seo":{"meta_title":"enums.attachment_type.meta_title.teaser","meta_description":"enums.attachment_type.meta_description.teaser","meta_image":"enums.attachment_type.meta_image.teaser"}},{"value":"behind_the_scenes","label":"Behind the Scenes","color":"info","icon":"heroicon-o-camera","seo":{"meta_title":"enums.attachment_type.meta_title.behind_the_scenes","meta_description":"enums.attachment_type.meta_description.behind_the_scenes","meta_image":"enums.attachment_type.meta_image.behind_the_scenes"}},{"value":"interview","label":"Interview","color":"success","icon":"heroicon-o-microphone","seo":{"meta_title":"enums.attachment_type.meta_title.interview","meta_description":"enums.attachment_type.meta_description.interview","meta_image":"enums.attachment_type.meta_image.interview"}},{"value":"clip","label":"Clip","color":"primary","icon":"heroicon-o-play","seo":{"meta_title":"enums.attachment_type.meta_title.clip","meta_description":"enums.attachment_type.meta_description.clip","meta_image":"enums.attachment_type.meta_image.clip"}},{"value":"deleted_scene","label":"Deleted Scene","color":"gray","icon":"heroicon-o-trash","seo":{"meta_title":"enums.attachment_type.meta_title.deleted_scene","meta_description":"enums.attachment_type.meta_description.deleted_scene","meta_image":"enums.attachment_type.meta_image.deleted_scene"}},{"value":"blooper","label":"Blooper","color":"pink","icon":"heroicon-o-face-smile","seo":{"meta_title":"enums.attachment_type.meta_title.blooper","meta_description":"enums.attachment_type.meta_description.blooper","meta_image":"enums.attachment_type.meta_image.blooper"}},{"value":"featurette","label":"Featurette","color":"orange","icon":"heroicon-o-star","seo":{"meta_title":"enums.attachment_type.meta_title.featurette","meta_description":"enums.attachment_type.meta_description.featurette","meta_image":"enums.attachment_type.meta_image.featurette"}},{"value":"picture","label":"Picture","color":"indigo","icon":"heroicon-o-photo","seo":{"meta_title":"enums.attachment_type.meta_title.picture","meta_description":"enums.attachment_type.meta_description.picture","meta_image":"enums.attachment_type.meta_image.picture"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/attachment-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific attachment type with SEO data'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: ''
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid attachment type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/verify-email/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Mark the authenticated user's email address as verified."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      hash: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/email/verification-notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy an authenticated session.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recommendations
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommended movies.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/user-lists'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user lists for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/subscriptions'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscriptions for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-lists
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of user lists with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - stopped
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: ''
        required: false
        example: App\Models\Selection
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      user_id: architecto
      types:
        - stopped
      listable_type: App\Models\Selection
      listable_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user-lists
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: favorite
        type: string
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: ''
        required: true
        example: App\Models\Selection
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: favorite
      listable_type: App\Models\Selection
      listable_id: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-lists/{userList_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userList_id:
        name: userList_id
        description: 'The ID of the userList.'
        required: true
        example: 01jsfdekwc8jxnk62k96h03ckz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userList_id: 01jsfdekwc8jxnk62k96h03ckz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user-lists/{userList_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userList_id:
        name: userList_id
        description: 'The ID of the userList.'
        required: true
        example: 01jsfdekwc8jxnk62k96h03ckz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userList_id: 01jsfdekwc8jxnk62k96h03ckz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-lists/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user lists for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - rewatching
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: ''
        required: false
        example: App\Models\Selection
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: asc
      user_id: architecto
      types:
        - rewatching
      listable_type: App\Models\Selection
      listable_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-lists/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user lists by type'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: updated_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - stopped
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: ''
        required: false
        example: App\Models\Person
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: updated_at
      direction: asc
      user_id: architecto
      types:
        - stopped
      listable_type: App\Models\Person
      listable_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of ratings with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: asc
      user_id: architecto
      movie_id: architecto
      min_rating: 2
      max_rating: 7
      has_review: false
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Must be at least 1. Must not be greater than 10.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'Must not be greater than 2000 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: architecto
      number: 2
      review: g
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jsfdejwbcwpjn8jndhfqqbs2
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jsfdejwbcwpjn8jndhfqqbs2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jsfdejwbcwpjn8jndhfqqbs2
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jsfdejwbcwpjn8jndhfqqbs2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      number:
        name: number
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'Must not be greater than 2000 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      number: 6
      review: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jsfdejwbcwpjn8jndhfqqbs2
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jsfdejwbcwpjn8jndhfqqbs2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: number
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: number
      direction: asc
      user_id: architecto
      movie_id: architecto
      min_rating: 2
      max_rating: 7
      has_review: true
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/movie/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      user_id: architecto
      movie_id: architecto
      min_rating: 2
      max_rating: 7
      has_review: true
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comments with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: ''
        required: false
        example: App\Models\Episode
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      is_spoiler: true
      user_id: architecto
      commentable_type: App\Models\Episode
      commentable_id: architecto
      is_root: false
      parent_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: ''
        required: true
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
      is_spoiler: false
      parent_id: architecto
      commentable_type: App\Models\Movie
      commentable_id: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: b
      is_spoiler: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: ''
        required: false
        example: App\Models\Selection
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      is_spoiler: true
      user_id: architecto
      commentable_type: App\Models\Selection
      commentable_id: architecto
      is_root: false
      parent_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{comment_id}/replies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get replies to a specific comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: likes_count
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: ''
        required: false
        example: App\Models\Episode
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: likes_count
      direction: desc
      is_spoiler: true
      user_id: architecto
      commentable_type: App\Models\Episode
      commentable_id: architecto
      is_root: false
      parent_id: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comment-likes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comment likes with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      is_liked: false
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comment-likes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      is_liked: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/comment/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get likes for a specific comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      is_liked: false
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get likes by a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      is_liked: false
      page: 22
      per_page: 7
      sort: created_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jsfdeneg5vt5eeme1ynn9xfg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jsfdeneg5vt5eeme1ynn9xfg
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jsfdeneg5vt5eeme1ynn9xfg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jsfdeneg5vt5eeme1ynn9xfg
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_liked:
        name: is_liked
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      is_liked: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jsfdeneg5vt5eeme1ynn9xfg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jsfdeneg5vt5eeme1ynn9xfg
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comment-reports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      body:
        name: body
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      type: architecto
      body: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-reports/comment/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get reports for a specific comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jsfdemhx9prcyx9k95kv04sv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jsfdemhx9prcyx9k95kv04sv
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      type: architecto
      is_viewed: false
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tariffs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of tariffs with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 100 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: false
        example: ngz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_price:
        name: min_price
        description: 'Must be at least 0.'
        required: false
        example: 77
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_price:
        name: max_price
        description: 'Must be at least 0.'
        required: false
        example: 8
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Must be at least 1.'
        required: false
        example: 43
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
          - name
          - price
          - duration_days
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      is_active: false
      currency: ngz
      min_price: 77
      max_price: 8
      duration_days: 43
      page: 16
      per_page: 1
      sort: created_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of user subscriptions with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>end_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: updated_at
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      is_active: false
      auto_renew: false
      start_date_from: '2025-04-22T19:16:30'
      start_date_to: '2061-10-09'
      end_date_from: '2025-04-22T19:16:30'
      end_date_to: '2061-10-09'
      page: 67
      per_page: 16
      sort: updated_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user-subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user subscription'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
        required: true
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      start_date: '2025-04-22T19:16:30'
      end_date: '2061-10-09'
      is_active: true
      auto_renew: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-subscriptions/{userSubscription_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user subscription'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userSubscription_id:
        name: userSubscription_id
        description: 'The ID of the userSubscription.'
        required: true
        example: 01jsfdesvk709jejrs2pry9eqb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userSubscription_id: 01jsfdesvk709jejrs2pry9eqb
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-subscriptions/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscriptions for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>end_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: start_date
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      is_active: false
      auto_renew: true
      start_date_from: '2025-04-22T19:16:30'
      start_date_to: '2061-10-09'
      end_date_from: '2025-04-22T19:16:30'
      end_date_to: '2061-10-09'
      page: 67
      per_page: 16
      sort: start_date
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-subscriptions/active
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get active subscriptions for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>end_date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      is_active: true
      auto_renew: false
      start_date_from: '2025-04-22T19:16:30'
      start_date_to: '2061-10-09'
      end_date_from: '2025-04-22T19:16:30'
      end_date_to: '2061-10-09'
      page: 67
      per_page: 16
      sort: created_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of payments with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Must not be greater than 50 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_amount:
        name: min_amount
        description: 'Must be at least 0.'
        required: false
        example: 84
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_amount:
        name: max_amount
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: false
        example: miy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: updated_at
        type: string
        enumValues:
          - created_at
          - updated_at
          - amount
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      status: architecto
      payment_method: 'n'
      min_amount: 84
      max_amount: 12
      currency: miy
      date_from: '2025-04-22T19:16:30'
      date_to: '2061-10-09'
      page: 67
      per_page: 16
      sort: updated_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created payment and create a subscription if payment is successful'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Must be at least 0.'
        required: true
        example: 39
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: true
        example: gzm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Must not be greater than 50 characters.'
        required: true
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_id:
        name: transaction_id
        description: 'Must not be greater than 128 characters.'
        required: false
        example: 'y'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      liqpay_data:
        name: liqpay_data
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      amount: 39
      currency: gzm
      payment_method: i
      transaction_id: 'y'
      status: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/payments/{payment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific payment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      payment_id:
        name: payment_id
        description: 'The ID of the payment.'
        required: true
        example: 01jsfdesxpy030hfkh6ec4stp3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      payment_id: 01jsfdesxpy030hfkh6ec4stp3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/payments/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get payments for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Must not be greater than 50 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_amount:
        name: min_amount
        description: 'Must be at least 0.'
        required: false
        example: 84
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_amount:
        name: max_amount
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: false
        example: miy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>date_from</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
          - amount
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: architecto
      tariff_id: architecto
      status: architecto
      payment_method: 'n'
      min_amount: 84
      max_amount: 12
      currency: miy
      date_from: '2025-04-22T19:16:30'
      date_to: '2061-10-09'
      page: 67
      per_page: 16
      sort: created_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of users with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - email
          - created_at
          - last_seen_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      roles:
        name: roles
        description: ''
        required: false
        example:
          - admin
        type: 'string[]'
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      genders:
        name: genders
        description: ''
        required: false
        example:
          - other
        type: 'string[]'
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_verified:
        name: is_verified
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_seen_after:
        name: last_seen_after
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_seen_before:
        name: last_seen_before
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_after:
        name: created_after
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_before:
        name: created_before
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: b
      page: 22
      per_page: 7
      sort: created_at
      direction: desc
      roles:
        - admin
      genders:
        - other
      is_banned: false
      is_verified: false
      last_seen_after: '2025-04-22T19:16:30'
      last_seen_before: '2025-04-22T19:16:30'
      created_after: '2025-04-22T19:16:30'
      created_before: '2025-04-22T19:16:30'
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: moderator
        type: string
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'Sunt nihil accusantium harum mollitia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allow_adult:
        name: allow_adult
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_next:
        name: is_auto_next
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_play:
        name: is_auto_play
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_skip_intro:
        name: is_auto_skip_intro
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_private_favorites:
        name: is_private_favorites
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      email: zbailey@example.net
      password: '|]|{+-'
      role: moderator
      gender: male
      description: 'Sunt nihil accusantium harum mollitia.'
      birthday: '2025-04-22T19:16:30'
      allow_adult: true
      is_auto_next: false
      is_auto_play: true
      is_auto_skip_intro: false
      is_private_favorites: false
      is_banned: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/users/{user_id}/ban'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ban the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: b
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/users/{user_id}/unban'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unban the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jsfdegb5qy1hk228f8f6ws7c
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jsfdegb5qy1hk228f8f6ws7c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: b
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: ''
        required: true
        example: animated_series
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: ongoing
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: 'The <code>id</code> of an existing record in the studios table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Must not be greater than 2 characters.'
        required: false
        example:
          - ng
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - z
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Must be a valid date. Must be a date after or equal to <code>first_air_date</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Must not be greater than 2048 characters.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Must be at least 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
      kind: animated_series
      status: ongoing
      studio_id: architecto
      countries:
        - ng
      aliases:
        - z
      first_air_date: '2025-04-22T19:16:30'
      last_air_date: '2061-10-09'
      duration: 67
      imdb_score: 6
      is_published: false
      similars:
        - architecto
      tag_ids:
        - architecto
      slug: 'n'
      meta_title: g
      meta_description: z
      attachments:
        -
          type: architecto
          url: 'http://bailey.com/'
          title: m
          duration: 35
      related:
        -
          movie_id: architecto
          type: architecto
      api_sources:
        -
          source: architecto
          id: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: ''
        required: false
        example: tv_series
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: released
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: 'The <code>id</code> of an existing record in the studios table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Must not be greater than 2 characters.'
        required: false
        example:
          - ng
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - z
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Must be a valid date. Must be a date after or equal to <code>first_air_date</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Must not be greater than 2048 characters.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Must be at least 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
      kind: tv_series
      status: released
      studio_id: architecto
      countries:
        - ng
      aliases:
        - z
      first_air_date: '2025-04-22T19:16:30'
      last_air_date: '2061-10-09'
      duration: 67
      imdb_score: 6
      is_published: true
      similars:
        - architecto
      tag_ids:
        - architecto
      slug: 'n'
      meta_title: g
      meta_description: z
      attachments:
        -
          type: architecto
          url: 'http://bailey.com/'
          title: m
          duration: 35
      related:
        -
          movie_id: architecto
          type: architecto
      api_sources:
        -
          source: architecto
          id: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update specific fields of the movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: ''
        required: false
        example: animated_series
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: anons
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: 'The <code>id</code> of an existing record in the studios table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Must not be greater than 2 characters.'
        required: false
        example:
          - ng
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - z
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Must be a valid date. Must be a date after or equal to <code>first_air_date</code>.'
        required: false
        example: '2061-10-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Must be at least 1.'
        required: false
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Must be at least 0. Must not be greater than 10.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Must not be greater than 2048 characters.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Must be at least 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
      kind: animated_series
      status: anons
      studio_id: architecto
      countries:
        - ng
      aliases:
        - z
      first_air_date: '2025-04-22T19:16:30'
      last_air_date: '2061-10-09'
      duration: 67
      imdb_score: 6
      is_published: true
      similars:
        - architecto
      tag_ids:
        - architecto
      slug: 'n'
      meta_title: g
      meta_description: z
      attachments:
        -
          type: architecto
          url: 'http://bailey.com/'
          title: m
          duration: 35
      related:
        -
          movie_id: architecto
          type: architecto
      api_sources:
        -
          source: architecto
          id: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: et-eos-tempore-est-eilpmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: et-eos-tempore-est-eilpmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/episodes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Must be at least 1.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      air_date:
        name: air_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_filler:
        name: is_filler
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pictures:
        name: pictures
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      video_players:
        name: video_players
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: d
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].name':
        name: 'video_players[].name'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - kodik
          - aloha
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].url':
        name: 'video_players[].url'
        description: 'Must not be greater than 2048 characters.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].file_url':
        name: 'video_players[].file_url'
        description: 'Must not be greater than 2048 characters.'
        required: false
        example: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].dubbing':
        name: 'video_players[].dubbing'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].quality':
        name: 'video_players[].quality'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - sd
          - hd
          - full_hd
          - uhd
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].locale_code':
        name: 'video_players[].locale_code'
        description: 'Must not be greater than 10 characters.'
        required: false
        example: ngzmiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: architecto
      number: 22
      name: g
      description: 'Eius et animi quos velit et.'
      duration: 16
      air_date: '2025-04-22T19:16:30'
      is_filler: true
      slug: d
      meta_title: l
      meta_description: j
      video_players:
        -
          name: architecto
          url: 'http://bailey.com/'
          file_url: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
          dubbing: k
          quality: architecto
          locale_code: ngzmiy
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: aut-ex-exercitationem-h5yfwz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: aut-ex-exercitationem-h5yfwz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      air_date:
        name: air_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-22T19:16:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_filler:
        name: is_filler
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pictures:
        name: pictures
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      video_players:
        name: video_players
        description: ''
        required: false
        example: null
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: d
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].name':
        name: 'video_players[].name'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - kodik
          - aloha
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].url':
        name: 'video_players[].url'
        description: 'Must not be greater than 2048 characters.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].file_url':
        name: 'video_players[].file_url'
        description: 'Must not be greater than 2048 characters.'
        required: false
        example: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].dubbing':
        name: 'video_players[].dubbing'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].quality':
        name: 'video_players[].quality'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - sd
          - hd
          - full_hd
          - uhd
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].locale_code':
        name: 'video_players[].locale_code'
        description: 'Must not be greater than 10 characters.'
        required: false
        example: ngzmiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: architecto
      number: 22
      name: g
      description: 'Eius et animi quos velit et.'
      duration: 16
      air_date: '2025-04-22T19:16:30'
      is_filler: false
      slug: d
      meta_title: l
      meta_description: j
      video_players:
        -
          name: architecto
          url: 'http://bailey.com/'
          file_url: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
          dubbing: k
          quality: architecto
          locale_code: ngzmiy
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: aut-ex-exercitationem-h5yfwz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: aut-ex-exercitationem-h5yfwz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: character
        type: string
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      original_name:
        name: original_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date. Must be a date before or equal to <code>today</code>.'
        required: false
        example: '2021-05-16'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthplace:
        name: birthplace
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      type: character
      original_name: 'n'
      gender: female
      description: 'Eius et animi quos velit et.'
      birthday: '2021-05-16'
      birthplace: 'n'
      slug: g
      meta_title: z
      meta_description: m
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: margarita-iosipivna-antonenko-n3kmj9
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: margarita-iosipivna-antonenko-n3kmj9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: sound_designer
        type: string
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      original_name:
        name: original_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date. Must be a date before or equal to <code>today</code>.'
        required: false
        example: '2021-05-16'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthplace:
        name: birthplace
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      type: sound_designer
      original_name: 'n'
      gender: female
      description: 'Eius et animi quos velit et.'
      birthday: '2021-05-16'
      birthplace: 'n'
      slug: g
      meta_title: z
      meta_description: m
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: margarita-iosipivna-antonenko-n3kmj9
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: margarita-iosipivna-antonenko-n3kmj9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/studios
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 512 characters.'
        required: true
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - d
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 192 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      aliases:
        - d
      slug: l
      meta_title: j
      meta_description: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: sunrise-5261
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: sunrise-5261
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 512 characters.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - d
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 192 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      aliases:
        - d
      slug: l
      meta_title: j
      meta_description: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: sunrise-5261
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: sunrise-5261
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 512 characters.'
        required: true
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - d
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 192 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      is_genre: false
      aliases:
        - d
      slug: l
      meta_title: j
      meta_description: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: funny-815-h9lw2a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: funny-815-h9lw2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 512 characters.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - d
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 192 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      is_genre: true
      aliases:
        - d
      slug: l
      meta_title: j
      meta_description: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: funny-815-h9lw2a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: funny-815-h9lw2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      user_id: architecto
      is_published: true
      movie_ids:
        - architecto
      person_ids:
        - architecto
      slug: 'n'
      meta_title: g
      meta_description: z
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: iusto-error-sed-sunt-qv8jnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: iusto-error-sed-sunt-qv8jnj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Et animi quos velit et fugiat.'
      user_id: architecto
      is_published: false
      movie_ids:
        - architecto
      person_ids:
        - architecto
      slug: 'n'
      meta_title: g
      meta_description: z
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: iusto-error-sed-sunt-qv8jnj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: iusto-error-sed-sunt-qv8jnj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/comment-reports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comment reports with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: updated_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      type: architecto
      is_viewed: true
      page: 22
      per_page: 7
      sort: updated_at
      direction: desc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/comment-reports/unviewed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get unviewed reports'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'The <code>id</code> of an existing record in the comments table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: updated_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: architecto
      user_id: architecto
      type: architecto
      is_viewed: false
      page: 22
      per_page: 7
      sort: updated_at
      direction: asc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jsfdeskr3tr75zy68tmtjyhz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jsfdeskr3tr75zy68tmtjyhz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jsfdeskr3tr75zy68tmtjyhz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jsfdeskr3tr75zy68tmtjyhz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_viewed:
        name: is_viewed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: false
        example: architecto
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      body:
        name: body
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      is_viewed: true
      type: architecto
      body: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jsfdeskr3tr75zy68tmtjyhz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jsfdeskr3tr75zy68tmtjyhz
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tariffs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 128 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Must be at least 0.'
        required: true
        example: 60
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: true
        example: dlj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Must be at least 1.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      features:
        name: features
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - i
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: true
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 376 characters.'
        required: false
        example: w
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'Must not be greater than 2048 characters. Must be a valid URL.'
        required: false
        example: 'http://cormier.com/omnis-nostrum-aut-adipisci-quidem-nostrum-qui-commodi'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
      price: 60
      currency: dlj
      duration_days: 2
      features:
        - i
      is_active: false
      slug: k
      meta_title: h
      meta_description: w
      meta_image: 'http://cormier.com/omnis-nostrum-aut-adipisci-quidem-nostrum-qui-commodi'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 128 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Must be at least 0.'
        required: false
        example: 60
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Must be 3 characters.'
        required: false
        example: dlj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Must be at least 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      features:
        name: features
        description: 'Must not be greater than 255 characters.'
        required: false
        example:
          - i
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Must not be greater than 128 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_title:
        name: meta_title
        description: 'Must not be greater than 128 characters.'
        required: false
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'Must not be greater than 376 characters.'
        required: false
        example: w
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'Must not be greater than 2048 characters. Must be a valid URL.'
        required: false
        example: 'http://cormier.com/omnis-nostrum-aut-adipisci-quidem-nostrum-qui-commodi'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
      price: 60
      currency: dlj
      duration_days: 2
      features:
        - i
      is_active: false
      slug: k
      meta_title: h
      meta_description: w
      meta_image: 'http://cormier.com/omnis-nostrum-aut-adipisci-quidem-nostrum-qui-commodi'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      days:
        name: days
        description: 'Must be at least 1. Must not be greater than 365.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      days: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/content
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get content statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      days:
        name: days
        description: 'Must be at least 1. Must not be greater than 365.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      days: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscription statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      days:
        name: days
        description: 'Must be at least 1. Must not be greater than 365.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      days: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get payment statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      days:
        name: days
        description: 'Must be at least 1. Must not be greater than 365.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      days: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
