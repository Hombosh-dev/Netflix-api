name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming registration request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Ім'я користувача. Текст в полі value повинен мати довжину не більшу за 255."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Електронна пошта користувача (має бути унікальною). Поле value повинне містити коректну електронну адресу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Пароль користувача.'
        required: true
        example: StrongPassword123!
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: StrongPassword123!
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming authentication request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Поле value повинне містити коректну електронну адресу.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      remember:
        name: remember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '|]|{+-'
      remember: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Електронна пошта користувача, для якого потрібно відновити пароль. Поле value повинне містити коректну електронну адресу.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'Токен для відновлення пароля, отриманий електронною поштою.'
        required: true
        example: a1b2c3d4e5f6g7h8i9j0
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Електронна пошта користувача, для якого відновлюється пароль. Поле value повинне містити коректну електронну адресу.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Новий пароль користувача.'
        required: true
        example: NewStrongPassword123!
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      token: a1b2c3d4e5f6g7h8i9j0
      email: user@example.com
      password: NewStrongPassword123!
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/search
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Search across all content types'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Пошуковий запит. Текст у полі value повинен містити не менше 1 символів.'
        required: true
        example: Матриця
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: 'Типи контенту для пошуку, розділені комами (movies,people,studios,tags,selections).'
        required: false
        example: 'movies,people'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: Матриця
      types: 'movies,people'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"movies":[],"people":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/search/autocomplete
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Autocomplete search for quick suggestions'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      q:
        name: q
        description: 'Пошуковий запит для автодоповнення. Текст у полі value повинен містити не менше 1 символів.'
        required: true
        example: Матр
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      q: Матр
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular movies'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzbcg2sbaqsqb7mpsgsf","name":"Accusamus vero beatae veniam.","slug":"accusamus-vero-beatae-veniam-ypuvcq","description":"Aliquam id ut in. Laborum rerum doloremque eos suscipit tenetur. Aliquid fuga placeat quasi alias saepe perferendis omnis. Omnis ipsa doloribus officia ipsa modi enim id.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/003300?text=movies+Movie+Poster+quos","poster":"https:\/\/via.placeholder.com\/300x450.png\/0022ee?text=movies+Poster+nihil","kind":"movie","status":"anons","release_year":"2023","imdb_score":9,"aliases":["aut","qui","id"],"countries":["FR","US"],"average_rating":5.8,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzaghapb996wyrpdq1pj","name":"Omnis provident mollitia.","slug":"omnis-provident-mollitia-znx52p","description":"In rerum tenetur sunt id ducimus. At fuga nostrum ipsa maxime consequuntur natus repudiandae. Quam corporis qui itaque unde adipisci ipsam nam aperiam.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0055ee?text=movies+Movie+Poster+rem","poster":"https:\/\/via.placeholder.com\/300x450.png\/004488?text=movies+Poster+omnis","kind":"animated_movie","status":"rumored","release_year":"2019","imdb_score":8.27,"aliases":["expedita","at","expedita"],"countries":["FR"],"average_rating":2.3,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbb5dcz0zmj6y7mqg94","name":"Voluptatibus est facilis.","slug":"voluptatibus-est-facilis-t4uybl","description":"Facilis dolor repellendus exercitationem eos consequuntur. Placeat quia ut aspernatur sit porro aut. Aperiam occaecati quo qui cumque ipsum. Eius impedit ut a illum qui.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/000044?text=movies+Movie+Poster+dignissimos","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccee?text=movies+Poster+qui","kind":"animated_movie","status":"rumored","release_year":"2016","imdb_score":8.09,"aliases":["sit","accusamus","qui"],"countries":["UA","DE","GB"],"average_rating":10,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbe90kx3jrtn85fem5c","name":"Quam alias ducimus doloribus rem.","slug":"quam-alias-ducimus-doloribus-rem-xejfmc","description":"Dolorem rerum eius ipsa alias et et sunt. Quis et id vel ut occaecati sit praesentium. Aut voluptatem recusandae est at impedit voluptate repellat. Nostrum omnis facere sapiente illo.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0055dd?text=movies+Movie+Poster+quisquam","poster":"https:\/\/via.placeholder.com\/300x450.png\/002222?text=movies+Poster+amet","kind":"animated_movie","status":"canceled","release_year":"2021","imdb_score":7.56,"aliases":["tempore","assumenda","voluptatum"],"countries":["US","KR"],"average_rating":6.8,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzadvtgkp9eam795n6x8","name":"Enim mollitia quae aut.","slug":"enim-mollitia-quae-aut-llukhu","description":"Enim nisi rem inventore consequatur. Iure ab accusantium aut. Consectetur aliquam nobis voluptatem veritatis est.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/000099?text=movies+Movie+Poster+magni","poster":"https:\/\/via.placeholder.com\/300x450.png\/0055ff?text=movies+Poster+ea","kind":"animated_movie","status":"released","release_year":"2018","imdb_score":6.9,"aliases":["facere","et","aut"],"countries":["GB","UA"],"average_rating":3.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzae4rh5y6zxx8m92qt3","name":"Qui eveniet autem aliquid.","slug":"qui-eveniet-autem-aliquid-jnzxks","description":"Repellat rerum non rerum ipsum a veritatis. Placeat corrupti eum expedita vero. Sunt ipsum incidunt dignissimos laudantium sapiente non. Quo sunt deleniti quam qui aliquid.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0011cc?text=movies+Movie+Poster+voluptatibus","poster":"https:\/\/via.placeholder.com\/300x450.png\/0055aa?text=movies+Poster+dolorum","kind":"movie","status":"released","release_year":"2017","imdb_score":4.19,"aliases":["ipsum","exercitationem","in"],"countries":["UA","JP"],"average_rating":4.3,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb0d5yv57nsw6sse9az","name":"Pariatur non ea voluptates.","slug":"pariatur-non-ea-voluptates-fhbr2q","description":"Et corrupti et tenetur nam minus quo est. Voluptas et quisquam nihil velit dolores alias repudiandae. Assumenda laboriosam nostrum tempore quos aut accusamus officia consectetur.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/008899?text=movies+Movie+Poster+at","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ddaa?text=movies+Poster+quam","kind":"animated_movie","status":"released","release_year":"2019","imdb_score":3.47,"aliases":["voluptatem","eligendi","ab"],"countries":["UA","GB","KR"],"average_rating":7.3,"main_genre":"Music","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzay6rvtkg6akrwycmx4","name":"Alias adipisci.","slug":"alias-adipisci-oiekis","description":"Eaque facilis quaerat cumque delectus. Veritatis eveniet provident reiciendis et est earum repellat. Dolorem impedit sed dolore ut.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00dd00?text=movies+Movie+Poster+consequuntur","poster":"https:\/\/via.placeholder.com\/300x450.png\/003344?text=movies+Poster+deleniti","kind":"animated_movie","status":"rumored","release_year":"2023","imdb_score":3.19,"aliases":["quo","qui","eaque"],"countries":["JP","FR","DE"],"average_rating":7.5,"main_genre":"Science Fiction","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbd26sabenkmc18b6nm","name":"Labore qui sed adipisci.","slug":"labore-qui-sed-adipisci-bbocy3","description":"Recusandae numquam ut recusandae quam. Dolorem omnis quam quo delectus asperiores dolor et. Quasi voluptate ut sunt recusandae autem similique distinctio. Magni quas et eaque non.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0000cc?text=movies+Movie+Poster+sunt","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ff00?text=movies+Poster+tempora","kind":"movie","status":"ongoing","release_year":"2024","imdb_score":2.38,"aliases":["dignissimos","explicabo","ab"],"countries":["KR","DE"],"average_rating":6.3,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/series
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular series'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzakqg2qc0zhqkafvzb5","name":"Commodi exercitationem sed.","slug":"commodi-exercitationem-sed-mq0ndl","description":"Ut sed consequatur fugiat natus occaecati. Ex eaque repudiandae repellat sit sint laboriosam maxime. Ullam quasi magnam dolorum nobis doloremque sit. Quam provident ad quo quis exercitationem quis modi.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/009944?text=movies+Movie+Poster+culpa","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccdd?text=movies+Poster+adipisci","kind":"tv_series","status":"canceled","release_year":"2016","imdb_score":9.41,"aliases":["animi","aut","distinctio"],"countries":["DE"],"episodes_count":null,"average_rating":5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb8xkhqg40xp9gt01p2","name":"Animi blanditiis fuga.","slug":"animi-blanditiis-fuga-nwkpeq","description":"Et unde laudantium et et. Voluptates voluptatem nisi eveniet qui et omnis. Atque quis consequatur aperiam cumque voluptatem et.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/001100?text=movies+Movie+Poster+eligendi","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ff33?text=movies+Poster+consectetur","kind":"animated_series","status":"released","release_year":"2021","imdb_score":9.13,"aliases":["quae","odit","aut"],"countries":["UA"],"episodes_count":5,"average_rating":5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzaxme15bfwcrev71nae","name":"Excepturi ad ut iste.","slug":"excepturi-ad-ut-iste-4ffa7m","description":"Et molestias at aut repudiandae. Et autem neque modi et aut beatae rem vero. Qui aut occaecati rem doloribus. Aspernatur et corrupti ut explicabo quia enim repudiandae.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00ee22?text=movies+Movie+Poster+voluptas","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb44?text=movies+Poster+maiores","kind":"tv_series","status":"rumored","release_year":"2015","imdb_score":9.06,"aliases":["cumque","nemo","nostrum"],"countries":["KR","UA","GB"],"episodes_count":3,"average_rating":2.3,"main_genre":"Documentary","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzap5bzc16f8enx5mvw3","name":"Modi modi quo perspiciatis.","slug":"modi-modi-quo-perspiciatis-wuuins","description":"Totam laboriosam soluta maiores. Voluptas ipsam autem laboriosam eum unde nam animi reiciendis. Repudiandae eos aut odio ipsum. Temporibus labore deserunt vel repudiandae corporis molestiae praesentium delectus.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00aaff?text=movies+Movie+Poster+exercitationem","poster":"https:\/\/via.placeholder.com\/300x450.png\/000088?text=movies+Poster+consequatur","kind":"animated_series","status":"ongoing","release_year":"2018","imdb_score":8.51,"aliases":["dolor","est","quos"],"countries":["UA","DE"],"episodes_count":41,"average_rating":4.4,"main_genre":"Martial Arts","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb9rcepv6zw6d78qbcb","name":"Atque beatae quas.","slug":"atque-beatae-quas-4nvqlp","description":"Perspiciatis consequuntur maxime aut sit et voluptatibus nihil. Aspernatur explicabo itaque quam sunt. Sint ab cumque atque et quia. Id dolorum natus praesentium omnis magni quod eaque.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00ccee?text=movies+Movie+Poster+esse","poster":"https:\/\/via.placeholder.com\/300x450.png\/007799?text=movies+Poster+quaerat","kind":"animated_series","status":"ongoing","release_year":"2017","imdb_score":8.11,"aliases":["amet","nobis","quasi"],"countries":["JP","UA"],"episodes_count":2,"average_rating":5.6,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbats2y6dhrrmyq0g4p","name":"Id animi qui.","slug":"id-animi-qui-8kvkka","description":"Nam quibusdam iste eos asperiores. Maiores in et quia qui modi animi. Incidunt quia blanditiis at omnis.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00aa77?text=movies+Movie+Poster+deleniti","poster":"https:\/\/via.placeholder.com\/300x450.png\/001133?text=movies+Poster+aut","kind":"tv_series","status":"released","release_year":"2019","imdb_score":7.55,"aliases":["velit","nisi","adipisci"],"countries":["GB","US"],"episodes_count":null,"average_rating":6.3,"main_genre":"Based on Book","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb7199vkxwv817t0j9f","name":"Molestiae qui dolore.","slug":"molestiae-qui-dolore-osrlnf","description":"Non officia nihil natus. Eum rerum animi fuga est beatae. Ut possimus neque vel.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00eecc?text=movies+Movie+Poster+sapiente","poster":"https:\/\/via.placeholder.com\/300x450.png\/006688?text=movies+Poster+expedita","kind":"animated_series","status":"anons","release_year":"2020","imdb_score":7.02,"aliases":["officiis","officiis","delectus"],"countries":["FR","UA","JP"],"episodes_count":null,"average_rating":8,"main_genre":"Documentary","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb3hmppzaw7errx536f","name":"Rem asperiores doloremque.","slug":"rem-asperiores-doloremque-wzoabc","description":"Aspernatur quisquam vel aut quos. Eaque quidem aut qui esse laudantium sequi. Atque sed vel recusandae dignissimos vero. Voluptatum sit laudantium quasi molestiae nihil voluptas.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00aa99?text=movies+Movie+Poster+qui","poster":"https:\/\/via.placeholder.com\/300x450.png\/00aa88?text=movies+Poster+consectetur","kind":"tv_series","status":"rumored","release_year":"2015","imdb_score":6.67,"aliases":["error","harum","dolorem"],"countries":["JP"],"episodes_count":50,"average_rating":4.8,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb5cfq6gv1sg8dz8kf5","name":"Placeat quam assumenda animi.","slug":"placeat-quam-assumenda-animi-nb0qo8","description":"Rem consequuntur minima animi corrupti. Voluptates magnam non excepturi. Quia in laudantium et consequuntur inventore harum. Facilis quasi eligendi eos officiis.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/006611?text=movies+Movie+Poster+tenetur","poster":"https:\/\/via.placeholder.com\/300x450.png\/000088?text=movies+Poster+qui","kind":"animated_series","status":"rumored","release_year":"2018","imdb_score":5.91,"aliases":["ipsum","ex","sunt"],"countries":["JP","GB"],"episodes_count":16,"average_rating":5.5,"main_genre":"Action","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzabjy961y5xgr1dyemr","name":"Voluptatem inventore officiis.","slug":"voluptatem-inventore-officiis-hpru4d","description":"Ea dolorum est sapiente qui et velit iste. Est vel ipsa ea quaerat quisquam sit accusantium. Nemo numquam ad est vitae. Sed fugiat impedit unde et. In delectus quis fugiat libero.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0022ff?text=movies+Movie+Poster+maiores","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ddcc?text=movies+Poster+eos","kind":"animated_series","status":"canceled","release_year":"2019","imdb_score":5.47,"aliases":["iste","ducimus","voluptatem"],"countries":["US"],"episodes_count":null,"average_rating":4.5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzarrzfzm4mfrjmkvt76","name":"Nostrum sed quia dignissimos.","slug":"nostrum-sed-quia-dignissimos-0hnfzs","description":"Tempora molestias enim quisquam at. Et a est aut qui consequatur. Asperiores a qui earum quos sapiente incidunt numquam eaque.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0022aa?text=movies+Movie+Poster+est","poster":"https:\/\/via.placeholder.com\/300x450.png\/008800?text=movies+Poster+perferendis","kind":"animated_series","status":"canceled","release_year":"2016","imdb_score":4.19,"aliases":["quibusdam","ex","nihil"],"countries":["FR","DE"],"episodes_count":null,"average_rating":3.5,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzah5e99w7wf3qk5vx2m","name":"Voluptatem deleniti laudantium commodi.","slug":"voluptatem-deleniti-laudantium-commodi-gc15c2","description":"Est architecto praesentium omnis alias. Fugiat dolores voluptatem nisi iure corrupti. Voluptatibus est repellat quaerat deserunt natus. Saepe autem dolorum placeat incidunt culpa.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/003311?text=movies+Movie+Poster+sit","poster":"https:\/\/via.placeholder.com\/300x450.png\/0000bb?text=movies+Poster+aliquam","kind":"animated_series","status":"ongoing","release_year":"2019","imdb_score":3.52,"aliases":["quisquam","distinctio","et"],"countries":["JP"],"episodes_count":null,"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb4kh4cfxxrzmk5pkyy","name":"Quas libero similique voluptatem.","slug":"quas-libero-similique-voluptatem-zbv5gl","description":"Itaque placeat fugit quas sint quasi voluptas eos. Quo repellendus assumenda consectetur dolor tempore non. Consequuntur ipsam tenetur consequuntur blanditiis reprehenderit.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/002200?text=movies+Movie+Poster+distinctio","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ffcc?text=movies+Poster+magni","kind":"tv_series","status":"anons","release_year":"2017","imdb_score":3.49,"aliases":["repudiandae","labore","non"],"countries":["UA","DE"],"episodes_count":null,"average_rating":4.3,"main_genre":"Based on Book","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzaqgxm83mgzfrp2s739","name":"Blanditiis quam dicta.","slug":"blanditiis-quam-dicta-8rnu3h","description":"Corporis et provident consectetur in soluta nam et. Delectus eligendi suscipit et et quas illo ad. Ut magnam placeat sapiente dolor beatae sed. Est occaecati rerum adipisci eligendi est.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0055cc?text=movies+Movie+Poster+nostrum","poster":"https:\/\/via.placeholder.com\/300x450.png\/00aaff?text=movies+Poster+sed","kind":"tv_series","status":"released","release_year":"2023","imdb_score":3.1,"aliases":["repellat","necessitatibus","consequatur"],"countries":["DE","UA"],"episodes_count":5,"average_rating":4.3,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb6d4xg9f3ytmrfkt20","name":"Id nostrum et non.","slug":"id-nostrum-et-non-iwylox","description":"Enim sint sed id omnis aut magni exercitationem. Reiciendis possimus nesciunt quia tempora porro quisquam excepturi. Et porro dolorem ipsum ut. Omnis voluptas dolorum vero minus amet ipsum.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0033aa?text=movies+Movie+Poster+at","poster":"https:\/\/via.placeholder.com\/300x450.png\/000011?text=movies+Poster+magnam","kind":"tv_series","status":"rumored","release_year":"2020","imdb_score":2.81,"aliases":["porro","praesentium","ut"],"countries":["JP"],"episodes_count":null,"average_rating":6.7,"main_genre":"Documentary","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzas24nvkvsq0ne1vzbh","name":"At quibusdam aperiam delectus.","slug":"at-quibusdam-aperiam-delectus-cdkhew","description":"Ad et autem nesciunt quam. Iure ut ratione voluptatibus. Mollitia maiores enim architecto nihil praesentium excepturi. Consequatur libero laborum in veniam quas exercitationem.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0033aa?text=movies+Movie+Poster+qui","poster":"https:\/\/via.placeholder.com\/300x450.png\/008822?text=movies+Poster+et","kind":"tv_series","status":"rumored","release_year":"2022","imdb_score":1.77,"aliases":["eos","minima","dolor"],"countries":["US","DE"],"episodes_count":null,"average_rating":8,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzatk96rsxxv3p76dxv0","name":"Fugiat voluptatem soluta aut praesentium.","slug":"fugiat-voluptatem-soluta-aut-praesentium-5qj4sc","description":"Vero tempora molestias nemo sed tenetur ad. Beatae quis unde consequatur libero quos. Quod aut non assumenda fuga commodi est officia perspiciatis.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/005500?text=movies+Movie+Poster+accusantium","poster":"https:\/\/via.placeholder.com\/300x450.png\/0033cc?text=movies+Poster+sit","kind":"animated_series","status":"rumored","release_year":"2020","imdb_score":1.45,"aliases":["iusto","voluptatibus","vel"],"countries":["DE","US"],"episodes_count":null,"average_rating":7,"main_genre":"Science Fiction","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular people'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynz3jx17vkjqey21q8a4w","name":"\u041f\u0430\u043d\u0430\u0441\u044e\u043a \u0406\u0440\u0438\u043d\u0430 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0457\u0432\u043d\u0430","slug":"panasiuk-irina-anatoliyivna-p9jbku","biography":"Veniam voluptatem quia eos autem aliquam nostrum ipsa dolor tempore sed et quis asperiores est quisquam.","image":null,"type":"actor","gender":"male","birth_date":"1956-10-01T00:00:00.000000Z","death_date":null,"movies_count":27,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz4p82t1r92b47jm7x2y","name":"\u041c\u0435\u043b\u044c\u043d\u0438\u0447\u0435\u043d\u043a\u043e \u0422\u0430\u043c\u0430\u0440\u0430 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0457\u0432\u043d\u0430","slug":"melnicenko-tamara-anatoliyivna-teirci","biography":"Molestiae voluptates omnis et provident ea ipsa et aut delectus iure cum numquam veniam est quia qui eum sint minus sed.","image":"https:\/\/via.placeholder.com\/640x480.png\/0099cc?text=people+quas","type":"actor","gender":"female","birth_date":null,"death_date":null,"movies_count":27,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz56gctgx8wq7mmc48c9","name":"\u041d\u0430\u0434\u0456\u044f \u041c\u0438\u043a\u043e\u043b\u0430\u0457\u0432\u043d\u0430 \u0420\u043e\u043c\u0430\u043d\u0447\u0435\u043d\u043a\u043e","slug":"nadiia-mikolayivna-romancenko-tficof","biography":"Fugiat cumque rerum quia veniam libero repudiandae adipisci atque et modi distinctio quasi laboriosam et et ut quo.","image":"https:\/\/via.placeholder.com\/640x480.png\/005577?text=people+similique","type":"actor","gender":"other","birth_date":"1983-04-06T00:00:00.000000Z","death_date":null,"movies_count":18,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5pranjma4k0d2m2n72","name":"\u0406\u0433\u043e\u0440 \u0419\u043e\u0441\u0438\u043f\u043e\u0432\u0438\u0447 \u041a\u0440\u0430\u043c\u0430\u0440\u0447\u0443\u043a","slug":"igor-iosipovic-kramarcuk-yvk089","biography":"Eveniet omnis nam architecto numquam at doloribus odio corrupti velit ab iste aut ullam ut cupiditate.","image":"https:\/\/via.placeholder.com\/640x480.png\/0011cc?text=people+architecto","type":"actor","gender":"male","birth_date":"1953-02-13T00:00:00.000000Z","death_date":null,"movies_count":16,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz6bqadzx4wbbnyabws0","name":"\u0428\u0435\u0432\u0447\u0443\u043a \u0412\u0430\u0441\u0438\u043b\u044c \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0439\u043e\u0432\u0438\u0447","slug":"sevcuk-vasil-anatoliiovic-gztas8","biography":"Numquam quos consequatur quos placeat non similique blanditiis rerum nesciunt voluptas doloribus cum.","image":"https:\/\/via.placeholder.com\/640x480.png\/00aa44?text=people+et","type":"actor","gender":"other","birth_date":"1965-06-22T00:00:00.000000Z","death_date":null,"movies_count":14,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5291tebe20dp693x7m","name":"\u041c\u0438\u0440\u043e\u0441\u043b\u0430\u0432 \u041c\u0438\u043a\u043e\u043b\u0430\u0439\u043e\u0432\u0438\u0447 \u041a\u0440\u0430\u0432\u0447\u0435\u043d\u043a\u043e","slug":"miroslav-mikolaiovic-kravcenko-vfmoeb","biography":"Rem autem adipisci molestias eius eos quia facilis accusantium aut est dolorem non voluptas temporibus est.","image":null,"type":"director","gender":"male","birth_date":"1987-03-21T00:00:00.000000Z","death_date":null,"movies_count":6,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5nav5g5pc6jx0tmtgk","name":"\u0406\u0440\u0438\u043d\u0430 \u041e\u043b\u0435\u043a\u0441\u0456\u0457\u0432\u043d\u0430 \u0410\u043d\u0442\u043e\u043d\u0435\u043d\u043a\u043e","slug":"irina-oleksiyivna-antonenko-2vk9sl","biography":"Sed voluptas sed est cum nemo enim illo aut voluptas in quia harum dolor quia.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ccdd?text=people+fugiat","type":"director","gender":"male","birth_date":"1954-12-22T00:00:00.000000Z","death_date":null,"movies_count":6,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5xd71d7xn8ttczypgs","name":"\u042f\u0440\u043e\u0441\u043b\u0430\u0432\u0430 \u0412\u0430\u0441\u0438\u043b\u0456\u0432\u043d\u0430 \u041f\u0430\u0432\u043b\u044e\u043a","slug":"iaroslava-vasilivna-pavliuk-bc9max","biography":"Blanditiis qui et illum nihil blanditiis occaecati voluptas aut quod quia blanditiis qui labore voluptas soluta maxime et totam ea.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ffee?text=people+voluptas","type":"director","gender":"female","birth_date":"1947-11-02T00:00:00.000000Z","death_date":null,"movies_count":4,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5wrk3ts8s94td74z2n","name":"\u0421\u0435\u0440\u0433\u0456\u0439 \u0406\u0432\u0430\u043d\u043e\u0432\u0438\u0447 \u0428\u0435\u0432\u0447\u0443\u043a","slug":"sergii-ivanovic-sevcuk-y8tstc","biography":"Et odit sit dolores sed ut enim totam accusamus eum ad laboriosam quis quos.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ff44?text=people+incidunt","type":"director","gender":"male","birth_date":null,"death_date":null,"movies_count":4,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz477xd12vr3bzrxm5p7","name":"\u0406\u0433\u043e\u0440 \u0406\u0432\u0430\u043d\u043e\u0432\u0438\u0447 \u041f\u0435\u0442\u0440\u0435\u043d\u043a\u043e","slug":"igor-ivanovic-petrenko-v44kzm","biography":"Et sit ea in eius harum modi ullam dolor in et commodi quia ex nihil provident sed molestiae.","image":"https:\/\/via.placeholder.com\/640x480.png\/0033bb?text=people+laborum","type":"director","gender":null,"birth_date":"1984-11-05T00:00:00.000000Z","death_date":null,"movies_count":4,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz58a5f0b6angk4gmbwx","name":"\u041a\u0440\u0430\u043c\u0430\u0440\u0435\u043d\u043a\u043e \u0413\u0435\u043d\u043d\u0430\u0434\u0456\u0439 \u0404\u0432\u0433\u0435\u043d\u0456\u0439\u043e\u0432\u0438\u0447","slug":"kramarenko-gennadii-jevgeniiovic-fckgce","biography":"Possimus cum aspernatur velit sit nihil recusandae delectus mollitia sunt sit ea neque autem culpa nesciunt.","image":null,"type":"director","gender":"female","birth_date":null,"death_date":null,"movies_count":3,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3xskywt0rtdy5e94f9","name":"\u041f\u043e\u043d\u043e\u043c\u0430\u0440\u0435\u043d\u043a\u043e \u0410\u0440\u0442\u0443\u0440 \u0412\u0430\u0441\u0438\u043b\u044c\u043e\u0432\u0438\u0447","slug":"ponomarenko-artur-vasilyovic-zhyqct","biography":"Nostrum itaque temporibus facere laborum fugiat praesentium aliquam assumenda placeat facere perspiciatis omnis culpa ea ea eum vitae at laboriosam.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ee77?text=people+est","type":"cinematographer","gender":null,"birth_date":null,"death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3q8tjxvwmwgq25qxm5","name":"\u0414\u043c\u0438\u0442\u0440\u043e \u0422\u0430\u0440\u0430\u0441\u043e\u0432\u0438\u0447 \u041c\u0435\u043b\u044c\u043d\u0438\u0447\u0435\u043d\u043a\u043e","slug":"dmitro-tarasovic-melnicenko-t7uxlv","biography":"Voluptas sunt rem odio unde incidunt iste dolores aut ex veniam quod ducimus.","image":"https:\/\/via.placeholder.com\/640x480.png\/00dd66?text=people+neque","type":"writer","gender":"other","birth_date":"1998-11-21T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3y305ysdqf8kk131gr","name":"\u041d\u0430\u0442\u0430\u0448\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u0456\u0432\u043d\u0430 \u041a\u0440\u0430\u043c\u0430\u0440\u0447\u0443\u043a","slug":"natasa-mixailivna-kramarcuk-fdjadg","biography":"Iusto aut fuga qui rerum quo nulla sequi adipisci occaecati possimus.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ee66?text=people+corporis","type":"character","gender":"male","birth_date":"1960-03-05T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3xskywt0rtdy5e94f8","name":"\u0420\u0430\u0457\u0441\u0430 \u041f\u0435\u0442\u0440\u0456\u0432\u043d\u0430 \u0422\u0430\u0440\u0430\u0449\u0443\u043a","slug":"rayisa-petrivna-tarashhuk-nqdie8","biography":"Est ratione aut aliquid laudantium libero amet vel esse vel vitae ab eum ea voluptas perspiciatis cupiditate perspiciatis animi.","image":"https:\/\/via.placeholder.com\/640x480.png\/007733?text=people+dolorem","type":"makeup_artist","gender":"male","birth_date":"2003-03-17T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3wax8z7zkzs5krcb06","name":"\u0410\u043d\u0434\u0440\u0456\u0439 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0439\u043e\u0432\u0438\u0447 \u0421\u0435\u0440\u0435\u0434\u0430","slug":"andrii-anatoliiovic-sereda-2yyel3","biography":"Itaque delectus est corporis fugit quis reiciendis autem sed debitis beatae mollitia quo sit voluptatibus repudiandae.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ee55?text=people+voluptatibus","type":"stunt_performer","gender":null,"birth_date":"1960-03-31T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3pj3tvz6kfydtn5aj6","name":"\u0414\u0456\u0430\u043d\u0430 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0457\u0432\u043d\u0430 \u0411\u0440\u043e\u0432\u0430\u0440\u0447\u0443\u043a","slug":"diana-anatoliyivna-brovarcuk-uqxpgv","biography":"Id sint sed perferendis in laboriosam officiis animi autem suscipit qui fuga accusamus porro optio et.","image":"https:\/\/via.placeholder.com\/640x480.png\/008844?text=people+consequatur","type":"composer","gender":"female","birth_date":"1957-05-30T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3vfv4ft59457b1wh1e","name":"\u0420\u0430\u0457\u0441\u0430 \u0421\u0435\u0440\u0433\u0456\u0457\u0432\u043d\u0430 \u041a\u0440\u0430\u043c\u0430\u0440\u0447\u0443\u043a","slug":"rayisa-sergiyivna-kramarcuk-byn33w","biography":"Reiciendis aut reprehenderit impedit ut ut modi quia eaque dicta ipsa non ea qui et provident et et ut.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ff11?text=people+amet","type":"production_designer","gender":"female","birth_date":"1965-04-14T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz43q3s3w5pkjr438g4d","name":"\u0404\u043b\u0438\u0437\u0430\u0432\u0435\u0442\u0430 \u0420\u043e\u043c\u0430\u043d\u0456\u0432\u043d\u0430 \u0410\u043d\u0442\u043e\u043d\u0435\u043d\u043a\u043e","slug":"jelizaveta-romanivna-antonenko-tlbhjy","biography":"Consequatur voluptatem praesentium qui et consectetur quos dolor maxime nostrum eos molestiae.","image":"https:\/\/via.placeholder.com\/640x480.png\/00ff77?text=people+magni","type":"costume_designer","gender":"female","birth_date":"1957-07-14T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz3tz1mxqwbm98rwgwcz","name":"\u041c\u0456\u0440\u043e\u0448\u043d\u0438\u0447\u0435\u043d\u043a\u043e \u0412\u0430\u043b\u0435\u0440\u0456\u044f \u041c\u0438\u0445\u0430\u0439\u043b\u0456\u0432\u043d\u0430","slug":"mirosnicenko-valeriia-mixailivna-jdxt03","biography":"Non explicabo unde qui mollitia omnis sequi suscipit nemo et.","image":"https:\/\/via.placeholder.com\/640x480.png\/006677?text=people+nesciunt","type":"composer","gender":null,"birth_date":"1973-10-05T00:00:00.000000Z","death_date":null,"movies_count":0,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular tags'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzyny1wpmvvx8bns62cmag7","name":"Horror","slug":"horror-jqzw0w","description":"Et minima alias illo sed atque ipsam natus quas tenetur non odit corrupti omnis.","image":null,"is_genre":true,"aliases":[],"movies_count":4,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny288b36awa9xczb0h9g","name":"aut a076b1","slug":"aut-a076b1-ulqtny","description":"Et vero accusantium iure velit debitis dolor quia a placeat fugiat ad.","image":"https:\/\/via.placeholder.com\/640x480.png\/0077dd?text=tags+neque","is_genre":false,"aliases":["ipsa","repudiandae","et","perferendis","nihil"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny2q6rm2zqjcfy70y7bh","name":"Inspirational","slug":"inspirational-zprzoz","description":"Sit in voluptatibus accusantium distinctio quidem temporibus facere sit expedita.","image":"https:\/\/via.placeholder.com\/640x480.png\/00eebb?text=tags+aut","is_genre":false,"aliases":["distinctio","sequi","rerum","nemo","error"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1wpmvvx8bns62cmag6","name":"Surreal","slug":"surreal-b0me1i","description":"Ut commodi laborum illo ut quod ullam est qui veniam deleniti at maxime neque nihil.","image":"https:\/\/via.placeholder.com\/640x480.png\/00dd44?text=tags+molestiae","is_genre":false,"aliases":["tempore","cum"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1se2tfhd5681b580d8","name":"Thought-Provoking","slug":"thought-provoking-rbn5ri","description":"Nulla error reiciendis laborum nam repellat facilis nesciunt facilis voluptatem dignissimos molestias dolor qui.","image":"https:\/\/via.placeholder.com\/640x480.png\/0033dd?text=tags+possimus","is_genre":false,"aliases":["non","ut","cupiditate","assumenda"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny3pyfsa26t0pdp5s1ws","name":"Horror 621","slug":"horror-621-zwlheb","description":"Ut praesentium qui eos voluptas illo quis odit voluptates.","image":"https:\/\/via.placeholder.com\/640x480.png\/00cc88?text=tags+tempora","is_genre":false,"aliases":[],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1rshp47wtnv1941x26","name":"Thought-Provoking","slug":"thought-provoking-6moqwf","description":"Aliquam earum aut accusamus non assumenda excepturi eos.","image":"https:\/\/via.placeholder.com\/640x480.png\/0022cc?text=tags+amet","is_genre":false,"aliases":["saepe","sit"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1t1jgv679f3nzc4ax8","name":"Documentary","slug":"documentary-fc3067","description":"Inventore doloribus et rerum sunt expedita aut delectus voluptatem non velit.","image":"https:\/\/via.placeholder.com\/640x480.png\/003311?text=tags+similique","is_genre":true,"aliases":["officia","sunt"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1kghk7hbbws51yn2hg","name":"Based on Book 381","slug":"based-on-book-381-7dacre","description":"Qui qui iste repudiandae in enim assumenda aut similique sunt eum porro suscipit quo dignissimos.","image":null,"is_genre":false,"aliases":["odio","aut","vero","quaerat","cupiditate"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1c6a6x1dmbrseced10","name":"Dystopian","slug":"dystopian-v6ompn","description":"Dolor provident beatae aut enim temporibus in magni debitis eos maiores deserunt qui.","image":null,"is_genre":false,"aliases":["iste","nulla","excepturi","consequatur"],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny17m0jxb56dt8jtf310","name":"doloremque 25e7a6","slug":"doloremque-25e7a6-yofxil","description":"Dolor explicabo quae delectus et libero enim veritatis corrupti possimus.","image":"https:\/\/via.placeholder.com\/640x480.png\/00dd77?text=tags+id","is_genre":false,"aliases":[],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny18bs11fstjr9cmf956","name":"illum ba88ce","slug":"illum-ba88ce-bommc2","description":"Dolor voluptatem inventore dolore et animi sit fuga assumenda dignissimos commodi non.","image":"https:\/\/via.placeholder.com\/640x480.png\/003366?text=tags+asperiores","is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1rshp47wtnv1941x27","name":"Science Fiction","slug":"science-fiction-xcts6g","description":"Qui velit nisi eveniet tempora doloremque qui rerum aut possimus et numquam qui.","image":"https:\/\/via.placeholder.com\/640x480.png\/0066aa?text=tags+nulla","is_genre":true,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1fh7rgy73gqbd1nc06","name":"Feel-Good","slug":"feel-good-3hgsxt","description":"Eveniet omnis quibusdam quam delectus quia accusamus voluptate.","image":"https:\/\/via.placeholder.com\/640x480.png\/00cc00?text=tags+excepturi","is_genre":false,"aliases":["maxime","similique","velit"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1demvpt08hs8xekkkp","name":"Surreal","slug":"surreal-gvfjvq","description":"Qui repellat quia error placeat similique quia.","image":"https:\/\/via.placeholder.com\/640x480.png\/005533?text=tags+repudiandae","is_genre":false,"aliases":["officia","sit","omnis","sed"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny15gpbw5bgcamd62bsy","name":"Cult Classic 854","slug":"cult-classic-854-a6osft","description":"Facilis tempore voluptatem a eveniet earum vel et et.","image":"https:\/\/via.placeholder.com\/640x480.png\/003322?text=tags+natus","is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1ba5wbjnsefxxpd8hs","name":"Scary","slug":"scary-mixp8u","description":"Enim nemo veritatis quibusdam voluptas fugit necessitatibus nihil quibusdam commodi deserunt ipsam.","image":"https:\/\/via.placeholder.com\/640x480.png\/007799?text=tags+autem","is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny25htht3cqvvhtdhdjn","name":"Anime 898","slug":"anime-898-khdzj5","description":"Quia facere dolores illo reiciendis repudiandae at rerum in eveniet natus asperiores.","image":"https:\/\/via.placeholder.com\/640x480.png\/002211?text=tags+aspernatur","is_genre":false,"aliases":["qui","facilis","aliquam"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1hbf9jh890agy06430","name":"Heist","slug":"heist-s2v4nw","description":"Assumenda dolorum officiis et nisi sapiente quia aspernatur.","image":null,"is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny1xn1h2tvq8gyfydnfa","name":"Nostalgic","slug":"nostalgic-lc67bz","description":"Omnis quibusdam quo aut ullam qui saepe sed sunt voluptatem.","image":"https:\/\/via.placeholder.com\/640x480.png\/007744?text=tags+officiis","is_genre":false,"aliases":["sit","sapiente","illum"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/popular/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get popular selections'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of movies with search, filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації фільмів. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (name, created_at, imdb_score, first_air_date, duration, episodes_count).'
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - created_at
          - imdb_score
          - first_air_date
          - duration
          - episodes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      kinds:
        name: kinds
        description: ''
        required: false
        example:
          - movie
        type: 'string[]'
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      statuses:
        name: statuses
        description: ''
        required: false
        example:
          - released
        type: 'string[]'
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_ids:
        name: studio_ids
        description: 'The <code>id</code> of an existing record in the studios table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      countries:
        name: countries
        description: 'Текст в полі value повинен мати довжину не більшу за 2.'
        required: false
        example:
          - ng
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_score:
        name: min_score
        description: 'Мінімальний рейтинг IMDb для фільтрації. Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 1.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_score:
        name: max_score
        description: 'Максимальний рейтинг IMDb для фільтрації. Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 10.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_year:
        name: min_year
        description: 'Мінімальний рік випуску для фільтрації. Поле value повинне бути не менше 1900. Поле value має бути не більше 2035.'
        required: false
        example: 2000
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_year:
        name: max_year
        description: 'Максимальний рік випуску для фільтрації. Поле value повинне бути не менше 1900. Поле value має бути не більше 2035.'
        required: false
        example: 2023
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_duration:
        name: min_duration
        description: 'Мінімальна тривалість у хвилинах для фільтрації. Поле value повинне бути не менше 1.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_duration:
        name: max_duration
        description: 'Максимальна тривалість у хвилинах для фільтрації. Поле value повинне бути не менше 1.'
        required: false
        example: 180
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_episodes_count:
        name: min_episodes_count
        description: 'Мінімальна кількість епізодів для фільтрації (для серіалів). Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_episodes_count:
        name: max_episodes_count
        description: 'Максимальна кількість епізодів для фільтрації (для серіалів). Поле value повинне бути не менше 1.'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      kinds:
        - movie
      statuses:
        - released
      studio_ids:
        - architecto
      tag_ids:
        - architecto
      person_ids:
        - architecto
      countries:
        - ng
      min_score: 1.0
      max_score: 10.0
      min_year: 2000
      max_year: 2023
      min_duration: 10
      max_duration: 180
      min_episodes_count: 1
      max_episodes_count: 24
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 3 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"studio_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f studio_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"tag_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f tag_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"person_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f person_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","backdrop":null,"poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","kind":"movie","status":"anons","duration":132,"formatted_duration":"2 \u0433\u043e\u0434 12 \u0445\u0432","countries":["UA"],"aliases":["laborum","aut","libero"],"first_air_date":"2023-09-18T00:00:00.000000Z","year":"2023","imdb_score":4.64,"is_published":true,"studio":{"id":"01jtzynz0an2kmg2z3kw7csqek","name":"\u0406\u043d\u0444\u043e\u043a\u043e\u043c-\u0414\u0438\u0437\u0430\u0439\u043d","slug":"infokom-dizain-734n7o","description":"Voluptatibus repudiandae voluptatibus est excepturi eos. Reprehenderit sit optio autem maxime. Recusandae laboriosam ipsam dolore quia et. Iusto dolor rerum asperiores fugit id."},"tags":[{"id":"01jtzyny15gpbw5bgcamd62bsy","name":"Cult Classic 854","slug":"cult-classic-854-a6osft","description":"Facilis tempore voluptatem a eveniet earum vel et et.","image":"https:\/\/via.placeholder.com\/640x480.png\/003322?text=tags+natus","is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny2a60r3yee0qc2pfbsk","name":"Adventure 314","slug":"adventure-314-b6besf","description":"Quos corporis amet ipsa atque saepe laboriosam aut itaque commodi iusto sit.","image":"https:\/\/via.placeholder.com\/640x480.png\/00dd66?text=tags+adipisci","is_genre":false,"aliases":["omnis"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny3pyfsa26t0pdp5s1ws","name":"Horror 621","slug":"horror-621-zwlheb","description":"Ut praesentium qui eos voluptas illo quis odit voluptates.","image":"https:\/\/via.placeholder.com\/640x480.png\/00cc88?text=tags+tempora","is_genre":false,"aliases":[],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"}],"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","seo":{"title":"Nam quo et velit aliquid quisquam corrupti.","description":"Voluptas est tenetur eos quia dolor. In laborum aperiam fuga id ea quibusdam. Dolorem est ut maiores aut eum eius qui.","image":"https:\/\/via.placeholder.com\/1200x630.png\/003344?text=seo+SEO+Image+ut"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/episodes'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes for a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzsc08ena0qm8ttv3vcb","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":1,"name":"Quidem sunt aliquam id.","slug":"quidem-sunt-aliquam-id-hgwstn","full_name":"Episode 1: Quidem sunt aliquam id.","description":"Enim ipsa expedita quas sunt placeat voluptas libero. Aut voluptatem porro sequi voluptas ex. Et consectetur molestiae autem et architecto provident nisi.","duration":null,"formatted_duration":null,"air_date":"2022-06-09","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/episodes?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/episodes?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/episodes?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/episodes","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/persons'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get persons associated with a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynz3jx17vkjqey21q8a4w","name":"\u041f\u0430\u043d\u0430\u0441\u044e\u043a \u0406\u0440\u0438\u043d\u0430 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0457\u0432\u043d\u0430","slug":"panasiuk-irina-anatoliyivna-p9jbku","image":null,"birth_date":"1956-10-01","death_date":null,"biography":"Veniam voluptatem quia eos autem aliquam nostrum ipsa dolor tempore sed et quis asperiores est quisquam.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz4p82t1r92b47jm7x2y","name":"\u041c\u0435\u043b\u044c\u043d\u0438\u0447\u0435\u043d\u043a\u043e \u0422\u0430\u043c\u0430\u0440\u0430 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0457\u0432\u043d\u0430","slug":"melnicenko-tamara-anatoliyivna-teirci","image":"https:\/\/via.placeholder.com\/640x480.png\/0099cc?text=people+quas","birth_date":null,"death_date":null,"biography":"Molestiae voluptates omnis et provident ea ipsa et aut delectus iure cum numquam veniam est quia qui eum sint minus sed.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5wrk3ts8s94td74z2n","name":"\u0421\u0435\u0440\u0433\u0456\u0439 \u0406\u0432\u0430\u043d\u043e\u0432\u0438\u0447 \u0428\u0435\u0432\u0447\u0443\u043a","slug":"sergii-ivanovic-sevcuk-y8tstc","image":"https:\/\/via.placeholder.com\/640x480.png\/00ff44?text=people+incidunt","birth_date":null,"death_date":null,"biography":"Et odit sit dolores sed ut enim totam accusamus eum ad laboriosam quis quos.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/persons?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/persons?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/persons?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/persons","per_page":15,"to":3,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/tags'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tags associated with a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzyny15gpbw5bgcamd62bsy","name":"Cult Classic 854","slug":"cult-classic-854-a6osft","description":"Facilis tempore voluptatem a eveniet earum vel et et.","image":"https:\/\/via.placeholder.com\/640x480.png\/003322?text=tags+natus","is_genre":false,"aliases":[],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny2a60r3yee0qc2pfbsk","name":"Adventure 314","slug":"adventure-314-b6besf","description":"Quos corporis amet ipsa atque saepe laboriosam aut itaque commodi iusto sit.","image":"https:\/\/via.placeholder.com\/640x480.png\/00dd66?text=tags+adipisci","is_genre":false,"aliases":["omnis"],"movies_count":2,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"},{"id":"01jtzyny3pyfsa26t0pdp5s1ws","name":"Horror 621","slug":"horror-621-zwlheb","description":"Ut praesentium qui eos voluptas illo quis odit voluptates.","image":"https:\/\/via.placeholder.com\/640x480.png\/00cc88?text=tags+tempora","is_genre":false,"aliases":[],"movies_count":3,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/tags?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/tags?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/tags?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/tags","per_page":15,"to":3,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzjgrvsnpe1eaydgfmtq","user_id":"01jtzynwwkxhgcjp32w6fjx3wd","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":9,"review":"","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}},{"id":"01jtzynzjk33ke1sqdd5wekwd5","user_id":"01jtzynxhgbynqvpjkxhffg3ag","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":7,"review":"Vel quia et ut iure numquam sunt et. Est tempore molestiae iure ut. Nemo qui mollitia quaerat aspernatur.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}},{"id":"01jtzynzjynxwb9vycnyk2k1ne","user_id":"01jtzynwwym68b7n5d1td1venq","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":3,"review":"Quis sunt illo necessitatibus ab beatae dolorum. Laborum libero occaecati dolor molestias commodi. Quasi et rerum numquam.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}},{"id":"01jtzynzkayf8s1dv5z0d4mcgy","user_id":"01jtzynwx2jcbgfac9m84n18jt","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":2,"review":"Eveniet quaerat molestiae voluptate. At illo explicabo aut nihil. Deserunt incidunt et hic consequatur consequatur autem.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}},{"id":"01jtzynzky2xbgrs6r3gxq358v","user_id":"01jtzynwwch7z0r7h2yq60qzzh","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":3,"review":"","created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}},{"id":"01jtzynznsj42hnvz4t5q0p23c","user_id":"01jtzynwx9qdw1psknw47v6446","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":10,"review":"","created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/ratings?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/ratings?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/ratings?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/ratings","per_page":15,"to":6,"total":6}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/movies/{movie_slug}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzyp12fb2k0by6vv4j1dh1e","body":"Praesentium qui hic possimus doloribus sint voluptate aut. Aut sed distinctio soluta at.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp12gtvhah17gs291qh1m","body":"Quibusdam placeat quam eaque rerum est est ut. Facilis non nulla ex nostrum. Consequatur necessitatibus nesciunt repudiandae quis mollitia similique aut. Dolor explicabo aut iste voluptatem illum eum.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp12hm4vwe2r9gc5yhtsn","body":"Ducimus aut qui enim autem ad et. Dolores in debitis consequatur dolor velit nemo voluptas. Maiores magni provident quis qui et beatae. Itaque qui et iusto nostrum nesciunt et sit.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp12j635xfkehe9my75wa","body":"Perferendis unde corporis molestiae qui quia ut architecto. Qui quia aspernatur dolor sunt qui aut.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/comments?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/comments?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/comments?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/movies\/omnis-id-quaerat-soluta-oiduow\/comments","per_page":15,"to":4,"total":4}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/episodes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of episodes with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      movie_id:
        name: movie_id
        description: 'ID фільму або серіалу, для якого потрібно отримати епізоди.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aired_after:
        name: aired_after
        description: 'Фільтр для отримання епізодів, які вийшли після вказаної дати. Поле value не є датою.'
        required: false
        example: '2001-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_filler:
        name: include_filler
        description: 'Чи включати філлерні епізоди (епізоди, які не впливають на основний сюжет).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (number - за номером епізоду, air_date - за датою виходу, created_at - за датою створення).'
        required: false
        example: air_date
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      aired_after: '2001-01-01'
      include_filler: false
      sort: air_date
      direction: desc
      page: 1
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/episodes","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/aired-after/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes aired after a specific date'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: 'The date in YYYY-MM-DD format.'
        required: true
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      date: '2024-01-01'
    queryParameters:
      include_filler:
        name: include_filler
        description: 'Чи включати філлерні епізоди (епізоди, які не впливають на основний сюжет).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (number - за номером епізоду, air_date - за датою виходу, created_at - за датою створення).'
        required: false
        example: air_date
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      include_filler: false
      sort: air_date
      direction: desc
      page: 1
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzxb17gdknptafrgdxme","movie_id":"01jtzynzaxme15bfwcrev71nae","number":18,"name":"Molestiae aut natus in.","slug":"molestiae-aut-natus-in-o7rdph","full_name":"Episode 18: Molestiae aut natus in.","description":"Facere et ullam rerum natus. Odit harum dicta vitae vitae officiis et totam eveniet. Esse error blanditiis vitae eligendi rem quibusdam. Sed illum voluptas nulla eum.","duration":null,"formatted_duration":null,"air_date":"2026-04-23","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzttfpm79kddtg3pkw5c","movie_id":"01jtzynzaqgxm83mgzfrp2s739","number":20,"name":"Consectetur cum.","slug":"consectetur-cum-o08iio","full_name":"Episode 20: Consectetur cum.","description":"Expedita autem non dolor quia ut. Nostrum a perspiciatis libero quas recusandae. Ratione omnis alias quis deserunt eveniet consequatur. Magni asperiores rerum quaerat reiciendis.","duration":null,"formatted_duration":null,"air_date":"2026-04-22","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzy98pvvdzt09pbfkfb6","movie_id":"01jtzynzaxme15bfwcrev71nae","number":1,"name":"Temporibus illum doloremque.","slug":"temporibus-illum-doloremque-x7q7n0","full_name":"Episode 1: Temporibus illum doloremque.","description":"Molestiae voluptatum consequatur sequi velit dolorem omnis repudiandae. Vitae aut repellendus eius quia. Consequatur et non quae qui tempora explicabo consequatur. Maxime minus officia voluptatem magnam voluptas ratione.","duration":null,"formatted_duration":null,"air_date":"2026-04-11","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynztcw1mmk5js9c07q0n9","movie_id":"01jtzynzakqg2qc0zhqkafvzb5","number":8,"name":"Deleniti ex aliquam quod.","slug":"deleniti-ex-aliquam-quod-gz30vk","full_name":"Episode 8: Deleniti ex aliquam quod.","description":"Nihil eum eveniet qui et exercitationem quod expedita. Ut quod explicabo dicta consectetur sit. Aliquam non molestiae quaerat. Quis non qui accusamus illum sequi illo.","duration":null,"formatted_duration":null,"air_date":"2026-03-03","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzw1978b4w028rx85pa8","movie_id":"01jtzynzas24nvkvsq0ne1vzbh","number":9,"name":"Asperiores a dolorum et.","slug":"asperiores-a-dolorum-et-fk2ck1","full_name":"Episode 9: Asperiores a dolorum et.","description":"Mollitia quibusdam deleniti optio dolores quibusdam ipsum. Minus repudiandae est praesentium numquam. Eum nihil accusamus voluptas.","duration":null,"formatted_duration":null,"air_date":"2026-02-01","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzyp01g08ekndwekb3wjh3x","movie_id":"01jtzynzb4kh4cfxxrzmk5pkyy","number":9,"name":"Possimus id et et.","slug":"possimus-id-et-et-nrtfgf","full_name":"Episode 9: Possimus id et et.","description":"Et exercitationem aut quia qui quod quibusdam. Assumenda dolorum et fuga similique beatae autem non. Nisi sequi consequatur qui aut. Quasi omnis magni reprehenderit qui provident incidunt alias.","duration":null,"formatted_duration":null,"air_date":"2025-12-31","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzzs8ayejdydac1gv1tc","movie_id":"01jtzynzb3hmppzaw7errx536f","number":24,"name":"Modi deserunt perferendis libero.","slug":"modi-deserunt-perferendis-libero-xeeoz7","full_name":"Episode 24: Modi deserunt perferendis libero.","description":"Voluptas tempora perferendis quis alias. Magnam fuga aspernatur asperiores nesciunt officiis quaerat non. Consequatur omnis nesciunt ut rerum quia.","duration":null,"formatted_duration":null,"air_date":"2025-12-12","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzxrjdm1jqvnqtga5bw0","movie_id":"01jtzynzaxme15bfwcrev71nae","number":6,"name":"Repellat a neque molestiae.","slug":"repellat-a-neque-molestiae-go0cm2","full_name":"Episode 6: Repellat a neque molestiae.","description":"Tenetur provident animi explicabo aut est. Est eos eligendi soluta dicta beatae quo accusamus. Quis ut incidunt non enim possimus quidem.","duration":null,"formatted_duration":null,"air_date":"2025-12-12","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynztj7ee7xkx9ynpj6m7g","movie_id":"01jtzynzakqg2qc0zhqkafvzb5","number":1,"name":"Eum consequatur in repudiandae nam.","slug":"eum-consequatur-in-repudiandae-nam-77dlr8","full_name":"Episode 1: Eum consequatur in repudiandae nam.","description":"Harum earum saepe aut alias odio molestiae fugit. Facere ex quam accusamus quam vero delectus quo.","duration":null,"formatted_duration":null,"air_date":"2025-09-29","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzwtqnpf4xh0qmmagxav","movie_id":"01jtzynzaxme15bfwcrev71nae","number":21,"name":"Accusantium libero aliquid doloremque.","slug":"accusantium-libero-aliquid-doloremque-wkyb0q","full_name":"Episode 21: Accusantium libero aliquid doloremque.","description":"Cumque cum tempora ut enim suscipit ipsam qui qui. In ducimus autem quam necessitatibus provident. Aspernatur ipsum possimus voluptas maiores aliquid. Incidunt explicabo accusantium quasi ut quis.","duration":null,"formatted_duration":null,"air_date":"2025-09-24","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzv7pzmj0c1pr7z8pr2t","movie_id":"01jtzynzas24nvkvsq0ne1vzbh","number":24,"name":"Perspiciatis earum culpa.","slug":"perspiciatis-earum-culpa-qhybka","full_name":"Episode 24: Perspiciatis earum culpa.","description":"Est amet explicabo aut expedita sit. Et quasi ut magni nobis ad quo dolor. Ipsam et et a dolorum et iure velit sed. Repellat eum rem veniam.","duration":null,"formatted_duration":null,"air_date":"2025-09-03","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzzyvcs34wvv3rt4t9e5","movie_id":"01jtzynzb3hmppzaw7errx536f","number":4,"name":"Consequatur voluptate.","slug":"consequatur-voluptate-zqneqy","full_name":"Episode 4: Consequatur voluptate.","description":"Rerum ipsam adipisci quia non aut eaque. Doloribus id minus explicabo tenetur molestias ut. Suscipit ad minus quo omnis voluptas. Iste dignissimos architecto consequuntur eos dolore.","duration":null,"formatted_duration":null,"air_date":"2025-05-17","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzsjpk3dfzsvxqsqxmf9","movie_id":"01jtzynzae4rh5y6zxx8m92qt3","number":1,"name":"Non ducimus sequi.","slug":"non-ducimus-sequi-hiycpu","full_name":"Episode 1: Non ducimus sequi.","description":"Fuga iste ea nulla odio nisi. Quas sed esse reiciendis vitae. Aut voluptatibus enim fugiat ut voluptatem inventore facilis.","duration":null,"formatted_duration":null,"air_date":"2025-05-05","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzzkpk3qv32s4mc9vf7f","movie_id":"01jtzynzb3hmppzaw7errx536f","number":12,"name":"Harum ut nulla.","slug":"harum-ut-nulla-fffs6j","full_name":"Episode 12: Harum ut nulla.","description":"Quae tenetur error ratione possimus. Aperiam in repudiandae qui sint magni sit. Neque dolores aperiam est quisquam est voluptate quia.","duration":null,"formatted_duration":null,"air_date":"2025-03-09","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzyp01qmjb1a34peehe5p3r","movie_id":"01jtzynzb4kh4cfxxrzmk5pkyy","number":23,"name":"Est et.","slug":"est-et-wqymwl","full_name":"Episode 23: Est et.","description":"Doloribus id occaecati in quod fugit accusamus praesentium. Nobis eum temporibus unde rerum. Quae tempora quaerat libero sint et.","duration":null,"formatted_duration":null,"air_date":"2024-10-17","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=2","prev":null,"next":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=2"},"meta":{"current_page":1,"from":1,"last_page":2,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=1","label":"1","active":true},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=2","label":"2","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01?page=2","label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/episodes\/aired-after\/2024-01-01","per_page":15,"to":15,"total":22}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific episode'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: quidem-sunt-aliquam-id-hgwstn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: quidem-sunt-aliquam-id-hgwstn
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzynzsc08ena0qm8ttv3vcb","movie_id":"01jtzynza8g6wpnaddm53y3wyy","movie":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},"number":1,"name":"Quidem sunt aliquam id.","slug":"quidem-sunt-aliquam-id-hgwstn","full_name":"Episode 1: Quidem sunt aliquam id.","description":"Enim ipsa expedita quas sunt placeat voluptas libero. Aut voluptatem porro sequi voluptas ex. Et consectetur molestiae autem et architecto provident nisi.","duration":null,"formatted_duration":null,"air_date":"2022-06-09","is_filler":false,"pictures_url":["\/storage\/https:\/\/via.placeholder.com\/1280x720.png\/00aadd?text=episode+Episode+Screenshot+vel","\/storage\/https:\/\/via.placeholder.com\/1280x720.png\/00dd66?text=episode+Episode+Screenshot+perferendis","\/storage\/https:\/\/via.placeholder.com\/1280x720.png\/001100?text=episode+Episode+Screenshot+repellat"],"video_players":[{"name":"kodik","url":"http:\/\/www.romancenko.net.ua\/","file_url":"https:\/\/pavluk.org\/dolor-a-vero-quo-dolorum-dolorem-adipisci.html\/video.mp4","dubbing":"\u0421\u0443\u0431\u0442\u0438\u0442\u0440\u0438","quality":"full_hd","locale_code":"pl"}],"comments_count":5,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z","seo":{"meta_title":"E1: Quidem sunt aliquam id. | Id nostrum et non.","meta_description":"Labore sit quasi dolorum in molestiae quis. Dolorum id eius et sit magni accusantium corrupti. Consequatur ipsa consequatur nulla deleniti.","meta_image":"https:\/\/via.placeholder.com\/1200x630.png\/000011?text=episode+Episode+Image+pariatur"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/episodes/movie/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get episodes for a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters:
      movie_id:
        name: movie_id
        description: 'ID фільму або серіалу, для якого потрібно отримати епізоди.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aired_after:
        name: aired_after
        description: 'Фільтр для отримання епізодів, які вийшли після вказаної дати. Поле value не є датою.'
        required: false
        example: '2001-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_filler:
        name: include_filler
        description: 'Чи включати філлерні епізоди (епізоди, які не впливають на основний сюжет).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (number - за номером епізоду, air_date - за датою виходу, created_at - за датою створення).'
        required: false
        example: air_date
        type: string
        enumValues:
          - number
          - air_date
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      aired_after: '2001-01-01'
      include_filler: false
      sort: air_date
      direction: desc
      page: 1
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzsc08ena0qm8ttv3vcb","movie_id":"01jtzynza8g6wpnaddm53y3wyy","number":1,"name":"Quidem sunt aliquam id.","slug":"quidem-sunt-aliquam-id-hgwstn","full_name":"Episode 1: Quidem sunt aliquam id.","description":"Enim ipsa expedita quas sunt placeat voluptas libero. Aut voluptatem porro sequi voluptas ex. Et consectetur molestiae autem et architecto provident nisi.","duration":null,"formatted_duration":null,"air_date":"2022-06-09","is_filler":false,"picture_url":null,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/omnis-id-quaerat-soluta-oiduow?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/omnis-id-quaerat-soluta-oiduow?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/omnis-id-quaerat-soluta-oiduow?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/episodes\/movie\/omnis-id-quaerat-soluta-oiduow","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of persons with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації персон за іменем. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (name - за іменем, created_at - за датою створення, birth_date - за датою народження, movies_count - за кількістю фільмів).'
        required: false
        example: name
        type: string
        enumValues:
          - name
          - created_at
          - birth_date
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - makeup_artist
        type: 'string[]'
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      genders:
        name: genders
        description: ''
        required: false
        example:
          - female
        type: 'string[]'
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_age:
        name: min_age
        description: 'Мінімальний вік персони. Поле value повинне бути не менше 0. Поле value має бути не більше 150.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_age:
        name: max_age
        description: 'Максимальний вік персони. Поле value повинне бути не менше 0. Поле value має бути не більше 150.'
        required: false
        example: 60
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: name
      direction: asc
      types:
        - makeup_artist
      genders:
        - female
      movie_ids:
        - architecto
      min_age: 16
      max_age: 60
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific person'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: denis-jevgenovic-brovarenko-0u81ve
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: denis-jevgenovic-brovarenko-0u81ve
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzynz3f612vhkascjgej15x","name":"\u0414\u0435\u043d\u0438\u0441 \u0404\u0432\u0433\u0435\u043d\u043e\u0432\u0438\u0447 \u0411\u0440\u043e\u0432\u0430\u0440\u0435\u043d\u043a\u043e","slug":"denis-jevgenovic-brovarenko-0u81ve","image":"https:\/\/via.placeholder.com\/640x480.png\/002255?text=people+unde","birth_date":"1980-07-27","death_date":null,"biography":"Cum non voluptatem magnam iste suscipit quis soluta et esse ea explicabo aut aspernatur vel voluptates consequuntur.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/people/{person_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific person'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: denis-jevgenovic-brovarenko-0u81ve
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: denis-jevgenovic-brovarenko-0u81ve
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/people\/denis-jevgenovic-brovarenko-0u81ve\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/people\/denis-jevgenovic-brovarenko-0u81ve\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/people\/denis-jevgenovic-brovarenko-0u81ve\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/people\/denis-jevgenovic-brovarenko-0u81ve\/movies","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/studios
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of studios with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації студій за назвою. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Warner Bros'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (name - за назвою, created_at - за датою створення, movies_count - за кількістю фільмів).'
        required: false
        example: name
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: 'Фільтр для відображення тільки студій, які мають фільми.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: 'Warner Bros'
      page: 1
      per_page: 15
      sort: name
      direction: asc
      has_movies: false
      movie_ids:
        - architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454.","errors":{"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific studio'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: laika-1649-ahsumy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: laika-1649-ahsumy
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyny56th5nzpqf339a5hsa","name":"Laika 1649","slug":"laika-1649-ahsumy","description":"Dolor natus blanditiis necessitatibus quod consequatur facilis. Quia quidem fugit et. Similique hic a et consequuntur. Expedita minus autem aut dolorem.","image":"https:\/\/via.placeholder.com\/400x400.png\/00ffdd?text=studio+quasi","aliases":[],"movies_count":0,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of tags with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації тегів за назвою. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: Драма
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (name - за назвою, created_at - за датою створення, movies_count - за кількістю фільмів).'
        required: false
        example: name
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: 'Фільтр для відображення тільки тегів, які є жанрами.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: 'Фільтр для відображення тільки тегів, які мають фільми.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: Драма
      page: 1
      per_page: 15
      sort: name
      direction: asc
      is_genre: false
      has_movies: false
      movie_ids:
        - architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454.","errors":{"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: parody-197-rwdbt3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: parody-197-rwdbt3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyny101400wyg7m7nr09bh","name":"Parody 197","slug":"parody-197-rwdbt3","description":"Est eveniet laudantium quibusdam tempore necessitatibus facilis sint.","image":"https:\/\/via.placeholder.com\/640x480.png\/006622?text=tags+placeat","is_genre":false,"aliases":[],"movies_count":1,"created_at":"2025-05-11T15:16:09.000000Z","updated_at":"2025-05-11T15:16:09.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tags/{tag_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: parody-197-rwdbt3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: parody-197-rwdbt3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzaxme15bfwcrev71nae","name":"Excepturi ad ut iste.","slug":"excepturi-ad-ut-iste-4ffa7m","description":"Et molestias at aut repudiandae. Et autem neque modi et aut beatae rem vero. Qui aut occaecati rem doloribus. Aspernatur et corrupti ut explicabo quia enim repudiandae.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00ee22?text=movies+Movie+Poster+voluptas","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb44?text=movies+Poster+maiores","kind":"tv_series","status":"rumored","release_year":"2015","imdb_score":9.06,"aliases":["cumque","nemo","nostrum"],"countries":["KR","UA","GB"],"episodes_count":3,"average_rating":2.3,"main_genre":"Documentary","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/tags\/parody-197-rwdbt3\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/tags\/parody-197-rwdbt3\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/tags\/parody-197-rwdbt3\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/tags\/parody-197-rwdbt3\/movies","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of selections with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації добірок за назвою. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (name - за назвою, created_at - за датою створення, movies_count - за кількістю фільмів, user_lists_count - за кількістю списків користувачів).'
        required: false
        example: name
        type: string
        enumValues:
          - name
          - created_at
          - movies_count
          - user_lists_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: 'Фільтр для відображення тільки опублікованих добірок.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Фільтр за ID користувача, який створив добірку. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_movies:
        name: has_movies
        description: 'Фільтр для відображення тільки добірок, які мають фільми.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_persons:
        name: has_persons
        description: 'Фільтр для відображення тільки добірок, які мають персон.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: name
      direction: asc
      is_published: false
      user_id: ''
      has_movies: false
      has_persons: false
      movie_ids:
        - architecto
      person_ids:
        - architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 3 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"movie_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f movie_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."],"person_ids.0":["\u0417\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u043e\u043b\u044f person_ids.0 \u043d\u0435 \u0456\u0441\u043d\u0443\u0454."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific selection'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: tempore-voluptates-dolorem-ut-waobdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: tempore-voluptates-dolorem-ut-waobdu
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyp058hk75dmsdxrkadkb9","name":"Tempore voluptates dolorem ut.","slug":"tempore-voluptates-dolorem-ut-waobdu","description":"Aut quibusdam rerum esse exercitationem aliquid modi nostrum. Nobis est accusantium provident eaque amet ipsa. Consequatur sed in et tempora ipsa voluptas odio aut. Consequatur laudantium in id magnam.","meta_title":"Tempore voluptates dolorem ut. | Netflix","meta_description":"Facilis sint rem soluta assumenda rerum sit ut aut.","meta_image":"https:\/\/via.placeholder.com\/1200x630.png\/005555?text=selection+inventore","is_published":false,"user":{"id":"01jtzynww0da7ybsp8m063acmc","name":"kravcuk.anna"},"movies_count":10,"user_lists_count":0,"created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}/movies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get movies associated with a specific selection'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: tempore-voluptates-dolorem-ut-waobdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: tempore-voluptates-dolorem-ut-waobdu
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzabjy961y5xgr1dyemr","name":"Voluptatem inventore officiis.","slug":"voluptatem-inventore-officiis-hpru4d","description":"Ea dolorum est sapiente qui et velit iste. Est vel ipsa ea quaerat quisquam sit accusantium. Nemo numquam ad est vitae. Sed fugiat impedit unde et. In delectus quis fugiat libero.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0022ff?text=movies+Movie+Poster+maiores","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ddcc?text=movies+Poster+eos","kind":"animated_series","status":"canceled","release_year":"2019","imdb_score":5.47,"aliases":["iste","ducimus","voluptatem"],"countries":["US"],"episodes_count":null,"average_rating":4.5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzaghapb996wyrpdq1pj","name":"Omnis provident mollitia.","slug":"omnis-provident-mollitia-znx52p","description":"In rerum tenetur sunt id ducimus. At fuga nostrum ipsa maxime consequuntur natus repudiandae. Quam corporis qui itaque unde adipisci ipsam nam aperiam.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0055ee?text=movies+Movie+Poster+rem","poster":"https:\/\/via.placeholder.com\/300x450.png\/004488?text=movies+Poster+omnis","kind":"animated_movie","status":"rumored","release_year":"2019","imdb_score":8.27,"aliases":["expedita","at","expedita"],"countries":["FR"],"average_rating":2.3,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzah5e99w7wf3qk5vx2m","name":"Voluptatem deleniti laudantium commodi.","slug":"voluptatem-deleniti-laudantium-commodi-gc15c2","description":"Est architecto praesentium omnis alias. Fugiat dolores voluptatem nisi iure corrupti. Voluptatibus est repellat quaerat deserunt natus. Saepe autem dolorum placeat incidunt culpa.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/003311?text=movies+Movie+Poster+sit","poster":"https:\/\/via.placeholder.com\/300x450.png\/0000bb?text=movies+Poster+aliquam","kind":"animated_series","status":"ongoing","release_year":"2019","imdb_score":3.52,"aliases":["quisquam","distinctio","et"],"countries":["JP"],"episodes_count":null,"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzakqg2qc0zhqkafvzb5","name":"Commodi exercitationem sed.","slug":"commodi-exercitationem-sed-mq0ndl","description":"Ut sed consequatur fugiat natus occaecati. Ex eaque repudiandae repellat sit sint laboriosam maxime. Ullam quasi magnam dolorum nobis doloremque sit. Quam provident ad quo quis exercitationem quis modi.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/009944?text=movies+Movie+Poster+culpa","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccdd?text=movies+Poster+adipisci","kind":"tv_series","status":"canceled","release_year":"2016","imdb_score":9.41,"aliases":["animi","aut","distinctio"],"countries":["DE"],"episodes_count":null,"average_rating":5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzap5bzc16f8enx5mvw3","name":"Modi modi quo perspiciatis.","slug":"modi-modi-quo-perspiciatis-wuuins","description":"Totam laboriosam soluta maiores. Voluptas ipsam autem laboriosam eum unde nam animi reiciendis. Repudiandae eos aut odio ipsum. Temporibus labore deserunt vel repudiandae corporis molestiae praesentium delectus.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00aaff?text=movies+Movie+Poster+exercitationem","poster":"https:\/\/via.placeholder.com\/300x450.png\/000088?text=movies+Poster+consequatur","kind":"animated_series","status":"ongoing","release_year":"2018","imdb_score":8.51,"aliases":["dolor","est","quos"],"countries":["UA","DE"],"episodes_count":41,"average_rating":4.4,"main_genre":"Martial Arts","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzarrzfzm4mfrjmkvt76","name":"Nostrum sed quia dignissimos.","slug":"nostrum-sed-quia-dignissimos-0hnfzs","description":"Tempora molestias enim quisquam at. Et a est aut qui consequatur. Asperiores a qui earum quos sapiente incidunt numquam eaque.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0022aa?text=movies+Movie+Poster+est","poster":"https:\/\/via.placeholder.com\/300x450.png\/008800?text=movies+Poster+perferendis","kind":"animated_series","status":"canceled","release_year":"2016","imdb_score":4.19,"aliases":["quibusdam","ex","nihil"],"countries":["FR","DE"],"episodes_count":null,"average_rating":3.5,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzaxme15bfwcrev71nae","name":"Excepturi ad ut iste.","slug":"excepturi-ad-ut-iste-4ffa7m","description":"Et molestias at aut repudiandae. Et autem neque modi et aut beatae rem vero. Qui aut occaecati rem doloribus. Aspernatur et corrupti ut explicabo quia enim repudiandae.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00ee22?text=movies+Movie+Poster+voluptas","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb44?text=movies+Poster+maiores","kind":"tv_series","status":"rumored","release_year":"2015","imdb_score":9.06,"aliases":["cumque","nemo","nostrum"],"countries":["KR","UA","GB"],"episodes_count":3,"average_rating":2.3,"main_genre":"Documentary","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzb8xkhqg40xp9gt01p2","name":"Animi blanditiis fuga.","slug":"animi-blanditiis-fuga-nwkpeq","description":"Et unde laudantium et et. Voluptates voluptatem nisi eveniet qui et omnis. Atque quis consequatur aperiam cumque voluptatem et.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/001100?text=movies+Movie+Poster+eligendi","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ff33?text=movies+Poster+consectetur","kind":"animated_series","status":"released","release_year":"2021","imdb_score":9.13,"aliases":["quae","odit","aut"],"countries":["UA"],"episodes_count":5,"average_rating":5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbats2y6dhrrmyq0g4p","name":"Id animi qui.","slug":"id-animi-qui-8kvkka","description":"Nam quibusdam iste eos asperiores. Maiores in et quia qui modi animi. Incidunt quia blanditiis at omnis.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/00aa77?text=movies+Movie+Poster+deleniti","poster":"https:\/\/via.placeholder.com\/300x450.png\/001133?text=movies+Poster+aut","kind":"tv_series","status":"released","release_year":"2019","imdb_score":7.55,"aliases":["velit","nisi","adipisci"],"countries":["GB","US"],"episodes_count":null,"average_rating":6.3,"main_genre":"Based on Book","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzbb5dcz0zmj6y7mqg94","name":"Voluptatibus est facilis.","slug":"voluptatibus-est-facilis-t4uybl","description":"Facilis dolor repellendus exercitationem eos consequuntur. Placeat quia ut aspernatur sit porro aut. Aperiam occaecati quo qui cumque ipsum. Eius impedit ut a illum qui.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/000044?text=movies+Movie+Poster+dignissimos","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccee?text=movies+Poster+qui","kind":"animated_movie","status":"rumored","release_year":"2016","imdb_score":8.09,"aliases":["sit","accusamus","qui"],"countries":["UA","DE","GB"],"average_rating":10,"main_genre":"Horror","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/movies?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/movies?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/movies?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/movies","per_page":15,"to":10,"total":10}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/selections/{selection_slug}/persons'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get persons associated with a specific selection'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: tempore-voluptates-dolorem-ut-waobdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: tempore-voluptates-dolorem-ut-waobdu
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynz4c1fjrnzvjt21p4xgx","name":"\u0414\u043c\u0438\u0442\u0440\u043e \u0420\u043e\u043c\u0430\u043d\u043e\u0432\u0438\u0447 \u0412\u0430\u0441\u0438\u043b\u044c\u0454\u0432","slug":"dmitro-romanovic-vasiljev-9na6gr","image":"https:\/\/via.placeholder.com\/640x480.png\/002244?text=people+et","birth_date":"1993-07-06","death_date":null,"biography":"Magni porro provident modi enim qui blanditiis culpa cupiditate consequatur velit qui.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz4m7wqkvfx7z74ts2b3","name":"\u0414\u043c\u0438\u0442\u0440\u043e \u041c\u0438\u043a\u043e\u043b\u0430\u0439\u043e\u0432\u0438\u0447 \u0420\u043e\u043c\u0430\u043d\u0447\u0435\u043d\u043a\u043e","slug":"dmitro-mikolaiovic-romancenko-fqyojh","image":"https:\/\/via.placeholder.com\/640x480.png\/00ddaa?text=people+sit","birth_date":"1961-09-28","death_date":null,"biography":"Reprehenderit qui asperiores aut est laboriosam ducimus rem sunt repudiandae assumenda delectus aut placeat id delectus voluptatem similique omnis odio.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5mrp1kcykrnb6eqcrx","name":"\u041b\u0438\u0441\u0435\u043d\u043a\u043e \u041b\u0430\u0440\u0438\u0441\u0430 \u0424\u0435\u0434\u043e\u0440\u0456\u0432\u043d\u0430","slug":"lisenko-larisa-fedorivna-hggsue","image":"https:\/\/via.placeholder.com\/640x480.png\/0077ff?text=people+fuga","birth_date":"1980-04-03","death_date":null,"biography":"Ipsam et a dolorum sunt id non itaque quos ipsam quod veritatis quia quia a dolor ut aut.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5nav5g5pc6jx0tmtgj","name":"\u0411\u043e\u0440\u0438\u0441 \u0411\u043e\u0440\u0438\u0441\u043e\u0432\u0438\u0447 \u041c\u0438\u043a\u0438\u0442\u044e\u043a","slug":"boris-borisovic-mikitiuk-fuer4i","image":"https:\/\/via.placeholder.com\/640x480.png\/0088aa?text=people+qui","birth_date":"1984-06-28","death_date":null,"biography":"Sit beatae architecto molestiae minima at tempora tempore et unde molestiae quas vel itaque.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz5v8nwmxts2z32dawcq","name":"\u041f\u043e\u043d\u043e\u043c\u0430\u0440\u0447\u0443\u043a \u0410\u043d\u0442\u043e\u043d \u0412\u043e\u043b\u043e\u0434\u0438\u043c\u0438\u0440\u043e\u0432\u0438\u0447","slug":"ponomarcuk-anton-volodimirovic-grfcei","image":"https:\/\/via.placeholder.com\/640x480.png\/002255?text=people+architecto","birth_date":"1971-12-29","death_date":null,"biography":"At vel quis laborum consectetur illo quaerat nostrum commodi qui suscipit at omnis non voluptas inventore.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynz655ket9z525y9n0nx0","name":"\u041a\u0440\u0430\u043c\u0430\u0440\u0447\u0443\u043a \u0404\u0432\u0433\u0435\u043d\u0456\u0439 \u0412\u0430\u0441\u0438\u043b\u044c\u043e\u0432\u0438\u0447","slug":"kramarcuk-jevgenii-vasilyovic-yhvble","image":"https:\/\/via.placeholder.com\/640x480.png\/00aa22?text=people+facere","birth_date":null,"death_date":null,"biography":"Tenetur vitae expedita velit rerum corrupti tempore rerum deleniti quae.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/persons?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/persons?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/persons?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/selections\/tempore-voluptates-dolorem-ut-waobdu\/persons","per_page":15,"to":6,"total":6}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzynww0da7ybsp8m063acmc","name":"kravcuk.anna","email":"maksim55@example.net","role":"user","gender":"other","avatar":"https:\/\/via.placeholder.com\/300x300.png\/006611?text=people+dolores","backdrop":null,"description":"Consectetur sint tempore cupiditate ipsa in doloribus. Nobis quas nulla et modi numquam.","birthday":"2006-03-22","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-04-28T05:54:52.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":19,"is_online":false,"formatted_last_seen":"28.04.2025 05:54"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/user-lists'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user lists for a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації списків користувача. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї списки потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - watching
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: "Тип об'єкта для фільтрації списків."
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: "ID об'єкта для фільтрації списків."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      user_id: ''
      types:
        - watching
      listable_type: App\Models\Movie
      listable_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 2 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"listable_id":["\u041f\u043e\u043b\u0435 listable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/ratings'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzynzj80s0jm8zvq8wqw41z","user_id":"01jtzynww0da7ybsp8m063acmc","movie_id":"01jtzynzbe90kx3jrtn85fem5c","number":3,"review":"","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},{"id":"01jtzynzmjpj7xv1psfq6sjrx0","user_id":"01jtzynww0da7ybsp8m063acmc","movie_id":"01jtzynzb9rcepv6zw6d78qbcb","number":7,"review":"Quod aut inventore in tempora. Ut nihil nobis esse in mollitia optio voluptas velit.","created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"},{"id":"01jtzynzr14h3bweqce24sphxd","user_id":"01jtzynww0da7ybsp8m063acmc","movie_id":"01jtzynzakqg2qc0zhqkafvzb5","number":6,"review":"Voluptatem omnis voluptatem necessitatibus blanditiis harum dolores modi vitae. Quaerat numquam nesciunt eos dolore maiores enim aut. Illum sequi et et dignissimos consequatur possimus.","created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/ratings?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/ratings?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/ratings?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/ratings","per_page":15,"to":3,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jtzyp15zywtk5jdqnzrcsexw","body":"Aliquid molestiae vitae et omnis corporis. Itaque laudantium ut recusandae sequi dolor sed. Velit modi possimus ut consequuntur.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzay6rvtkg6akrwycmx4","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp160jxkb9x8xe26q89gj","body":"Dolor quia voluptas velit est. Suscipit aut quaerat culpa. Voluptas quidem facere expedita autem aut autem ut.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzay6rvtkg6akrwycmx4","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp160jxkb9x8xe26q89gk","body":"Perspiciatis est autem voluptatibus natus. Rerum laudantium iusto non rerum enim animi. Eos distinctio excepturi dicta.","is_spoiler":true,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzay6rvtkg6akrwycmx4","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp161djr3tgyehxq3r3wm","body":"Ex laborum sint et quis voluptas ratione praesentium officia. Impedit corrupti dicta qui. Atque illo quaerat aut eos et eum modi. Quo blanditiis cupiditate sit.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzay6rvtkg6akrwycmx4","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp16y7yv0hg92grfepyrw","body":"Ullam et et quo. Recusandae est placeat esse molestiae aperiam. Ut omnis repudiandae ea ut earum perferendis quia illum. Ab quos molestiae aspernatur. Molestias consequatur tenetur officia corrupti doloribus ullam.","is_spoiler":true,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzb5cfq6gv1sg8dz8kf5","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp179r8zyga5pgdf43raw","body":"Doloremque nostrum asperiores ut rerum corrupti voluptatem repellat. Rerum et tempore ut ea nobis.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzb8xkhqg40xp9gt01p2","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp19f19m8325cpffhpkcy","body":"Aspernatur ab rerum nostrum sint doloribus ratione reiciendis. Delectus sed error nam quo voluptatem a. Consequatur velit ipsam maxime. Consectetur nulla delectus quia perspiciatis hic.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzynzttfpm79kddtg3pkw5c","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp19gct0wp1rrk0hw9tcm","body":"Beatae incidunt rerum in enim distinctio consequatur quidem. Quasi ex reprehenderit voluptatibus. Minus eos fugit veritatis rerum.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzynzttfpm79kddtg3pkw5c","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},{"id":"01jtzyp1mem63h74s5sfdwhtgr","body":"Voluptas magnam perferendis nihil aliquam architecto consectetur eligendi laboriosam. Vero iure est animi modi sit molestiae.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Selection","commentable_id":"01jtzyp05g2sjea4j4f9kfsypg","commentable_type_label":"\u041f\u0456\u0434\u0431\u0456\u0440\u043a\u0430","created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1mghka2zfqwef9q3cbr","body":"Animi ab atque praesentium consectetur earum dicta. Deserunt qui quo ut quae neque asperiores pariatur sit.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Selection","commentable_id":"01jtzyp05g2sjea4j4f9kfsypg","commentable_type_label":"\u041f\u0456\u0434\u0431\u0456\u0440\u043a\u0430","created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1r5x1wtchb3z2a9yh14","body":"Nihil ex odio ullam excepturi fugit. Laboriosam tempora tempora sunt repellendus. Ex qui qui non aperiam sint id a. Quia saepe magni dolor enim dolorem ea est.","is_spoiler":false,"is_reply":true,"parent_id":"01jtzyp16g5y0cg2e64r7kj8bx","user_id":"01jtzynww0da7ybsp8m063acmc","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzb3hmppzaw7errx536f","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"}],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/comments?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/comments?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/comments?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/users\/01jtzynww0da7ybsp8m063acmc\/comments","per_page":15,"to":11,"total":11}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-lists
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of user lists with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації списків користувача. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї списки потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - not_watching
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: "Тип об'єкта для фільтрації списків."
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: "ID об'єкта для фільтрації списків."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      user_id: ''
      types:
        - not_watching
      listable_type: App\Models\Movie
      listable_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 2 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"listable_id":["\u041f\u043e\u043b\u0435 listable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-lists/{userList_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user list'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userList_id:
        name: userList_id
        description: 'The ID of the userList.'
        required: true
        example: 01jtzyp0cwct50984sxvzeagjr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userList_id: 01jtzyp0cwct50984sxvzeagjr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyp0cwct50984sxvzeagjr","user_id":"01jtzynww0da7ybsp8m063acmc","type":"favorite","listable_type":"App\\Models\\Movie","listable_id":"01jtzynzbcg2sbaqsqb7mpsgsf","created_at":"2025-05-11T15:16:11.000000Z","updated_at":"2025-05-11T15:16:11.000000Z","user":{"id":"01jtzynww0da7ybsp8m063acmc","name":"kravcuk.anna","email":"maksim55@example.net","role":"user","gender":"other","avatar":"https:\/\/via.placeholder.com\/300x300.png\/006611?text=people+dolores","backdrop":null,"description":"Consectetur sint tempore cupiditate ipsa in doloribus. Nobis quas nulla et modi numquam.","birthday":"2006-03-22","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-04-28T05:54:52.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":19,"is_online":false,"formatted_last_seen":"28.04.2025 05:54"},"listable":{"id":"01jtzynzbcg2sbaqsqb7mpsgsf","name":"Accusamus vero beatae veniam.","slug":"accusamus-vero-beatae-veniam-ypuvcq","description":"Aliquam id ut in. Laborum rerum doloremque eos suscipit tenetur. Aliquid fuga placeat quasi alias saepe perferendis omnis. Omnis ipsa doloribus officia ipsa modi enim id.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/003300?text=movies+Movie+Poster+quos","poster":"https:\/\/via.placeholder.com\/300x450.png\/0022ee?text=movies+Poster+nihil","kind":"movie","status":"anons","release_year":"2023","imdb_score":9,"aliases":["aut","qui","id"],"countries":["FR","US"],"average_rating":5.8,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-lists/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user lists by type'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of user list.'
        required: true
        example: 'favorite, watching'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'favorite, watching'
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації списків користувача. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї списки потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      types:
        name: types
        description: ''
        required: false
        example:
          - stopped
        type: 'string[]'
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: "Тип об'єкта для фільтрації списків."
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: "ID об'єкта для фільтрації списків."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      user_id: ''
      types:
        - stopped
      listable_type: App\Models\Movie
      listable_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 2 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"listable_id":["\u041f\u043e\u043b\u0435 listable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of ratings with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації рейтингів. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Чудовий фільм'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: number
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї рейтинги потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'ID фільму, для якого потрібно отримати рейтинги. The <code>id</code> of an existing record in the movies table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Мінімальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Максимальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: 'Фільтрувати рейтинги з відгуками.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: 'Чудовий фільм'
      page: 1
      per_page: 15
      sort: number
      direction: desc
      user_id: ''
      movie_id: ''
      min_rating: 1
      max_rating: 10
      has_review: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"movie_id":["\u041f\u043e\u043b\u0435 movie id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific rating'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jtzynzhj72x1a5wzkwctfz1x
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jtzynzhj72x1a5wzkwctfz1x
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzynzhj72x1a5wzkwctfz1x","user_id":"01jtzynww8kpwpcv52yhje5r5j","movie_id":"01jtzynzakqg2qc0zhqkafvzb5","number":6,"review":"Maxime ut vitae reiciendis non aut quia. Voluptas illo explicabo consequatur.","created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z","user":{"id":"01jtzynww8kpwpcv52yhje5r5j","name":"oleg.sevcenko","email":"vasilenko.viktor@example.com","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/007700?text=people+neque","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/00eecc?text=abstract+suscipit","description":null,"birthday":"1986-11-27","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-05-03T09:20:28.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":38,"is_online":false,"formatted_last_seen":"03.05.2025 09:20"},"movie":{"id":"01jtzynzakqg2qc0zhqkafvzb5","name":"Commodi exercitationem sed.","slug":"commodi-exercitationem-sed-mq0ndl","description":"Ut sed consequatur fugiat natus occaecati. Ex eaque repudiandae repellat sit sint laboriosam maxime. Ullam quasi magnam dolorum nobis doloremque sit. Quam provident ad quo quis exercitationem quis modi.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/009944?text=movies+Movie+Poster+culpa","poster":"https:\/\/via.placeholder.com\/300x450.png\/00ccdd?text=movies+Poster+adipisci","kind":"tv_series","status":"canceled","release_year":"2016","imdb_score":9.41,"aliases":["animi","aut","distinctio"],"countries":["DE"],"episodes_count":null,"average_rating":5,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації рейтингів. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Чудовий фільм'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: number
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї рейтинги потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'ID фільму, для якого потрібно отримати рейтинги. The <code>id</code> of an existing record in the movies table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Мінімальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Максимальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: 'Фільтрувати рейтинги з відгуками.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: 'Чудовий фільм'
      page: 1
      per_page: 15
      sort: number
      direction: desc
      user_id: ''
      movie_id: ''
      min_rating: 1
      max_rating: 10
      has_review: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"movie_id":["\u041f\u043e\u043b\u0435 movie id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/ratings/movie/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get ratings for a specific movie'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації рейтингів. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Чудовий фільм'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: number
        type: string
        enumValues:
          - number
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, чиї рейтинги потрібно отримати. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_id:
        name: movie_id
        description: 'ID фільму, для якого потрібно отримати рейтинги. The <code>id</code> of an existing record in the movies table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Мінімальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_rating:
        name: max_rating
        description: 'Максимальний рейтинг для фільтрації. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      has_review:
        name: has_review
        description: 'Фільтрувати рейтинги з відгуками.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: 'Чудовий фільм'
      page: 1
      per_page: 15
      sort: number
      direction: desc
      user_id: ''
      movie_id: ''
      min_rating: 1
      max_rating: 10
      has_review: false
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"movie_id":["\u041f\u043e\u043b\u0435 movie id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comment-likes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comment likes with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації лайків. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації лайків. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: 'Фільтрувати за типом лайка (true - лайк, false - дизлайк).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: ''
      user_id: ''
      is_liked: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 comment id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"comment_id":["\u041f\u043e\u043b\u0435 comment id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment like'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jtzyp1s8bwhfx5p2fzsyymmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jtzyp1s8bwhfx5p2fzsyymmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyp1s8bwhfx5p2fzsyymmj","user_id":"01jtzynwxvtkwx1z28pfvf04vj","comment_id":"01jtzyp12fb2k0by6vv4j1dh1e","is_liked":true,"user":{"id":"01jtzynwxvtkwx1z28pfvf04vj","name":"anna80","email":"larisa.bodnarenko@example.org","role":"user","gender":"female","avatar":null,"backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/004411?text=abstract+autem","description":null,"birthday":"2002-08-20","allow_adult":false,"is_auto_next":true,"is_auto_play":false,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-04-17T08:21:49.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":22,"is_online":false,"formatted_last_seen":"17.04.2025 08:21"},"comment":{"id":"01jtzyp12fb2k0by6vv4j1dh1e","body":"Praesentium qui hic possimus doloribus sint voluptate aut. Aut sed distinctio soluta at.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/comment/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get likes for a specific comment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації лайків. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації лайків. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: 'Фільтрувати за типом лайка (true - лайк, false - дизлайк).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: ''
      user_id: ''
      is_liked: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 comment id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 1 \u043f\u043e\u043c\u0438\u043b\u043a\u0430)","errors":{"comment_id":["\u041f\u043e\u043b\u0435 comment id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/tariffs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of tariffs with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації тарифів. Текст в полі value повинен мати довжину не більшу за 100.'
        required: false
        example: Преміум
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Фільтрувати за статусом активності.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Фільтрувати за валютою. Текст у полі value повинен містити 3 символів.'
        required: false
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_price:
        name: min_price
        description: 'Мінімальна ціна для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_price:
        name: max_price
        description: 'Максимальна ціна для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 500.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Тривалість тарифу в днях для фільтрації. Поле value повинне бути не менше 1.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: price
        type: string
        enumValues:
          - created_at
          - updated_at
          - name
          - price
          - duration_days
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: Преміум
      is_active: false
      currency: UAH
      min_price: 100.0
      max_price: 500.0
      duration_days: 30
      page: 1
      per_page: 15
      sort: price
      direction: asc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"https:\/\/netflix-api.test\/api\/v1\/tariffs?page=1","last":"https:\/\/netflix-api.test\/api\/v1\/tariffs?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; \u041d\u0430\u0437\u0430\u0434","active":false},{"url":"https:\/\/netflix-api.test\/api\/v1\/tariffs?page=1","label":"1","active":true},{"url":null,"label":"\u0414\u0430\u043b\u0456 &raquo;","active":false}],"path":"https:\/\/netflix-api.test\/api\/v1\/tariffs","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific tariff'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyp57xq538fqmm6bg1p00m","name":"\u0411\u0430\u0437\u043e\u0432\u0438\u0439","description":"\u0411\u0430\u0437\u043e\u0432\u0438\u0439 \u0442\u0430\u0440\u0438\u0444 \u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c \u0434\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0443 \u0432 HD \u044f\u043a\u043e\u0441\u0442\u0456.","price":"99.00","currency":"UAH","duration_days":30,"features":["HD \u044f\u043a\u0456\u0441\u0442\u044c","\u0414\u043e\u0441\u0442\u0443\u043f \u0434\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0443","\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u0441\u0442\u0440\u043e\u0457"],"is_active":true,"slug":"basic","meta_title":"\u0411\u0430\u0437\u043e\u0432\u0438\u0439 \u0442\u0430\u0440\u0438\u0444 | Netflix","meta_description":"\u0411\u0430\u0437\u043e\u0432\u0438\u0439 \u0442\u0430\u0440\u0438\u0444 \u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c \u0434\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0443 \u0432 HD \u044f\u043a\u043e\u0441\u0442\u0456.","meta_image":"https:\/\/via.placeholder.com\/1200x630.png\/006600?text=tempora","user_subscriptions_count":4,"created_at":"2025-05-11T15:16:16.000000Z","updated_at":"2025-05-11T15:16:16.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments/recent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get recent comments'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01jv04wft1px9jdwh76hcmtvzr","body":"\u041e\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0439 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440: \u0444\u0456\u043b\u044c\u043c \u0434\u0456\u0439\u0441\u043d\u043e \u0447\u0443\u0434\u043e\u0432\u0438\u0439, \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e \u0432\u0441\u0456\u043c!","is_spoiler":true,"is_reply":false,"parent_id":null,"user_id":"01jtzynxhgbynqvpjkxhffg3ag","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynzas24nvkvsq0ne1vzbh","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","likes_count":0,"user":{"id":"01jtzynxhgbynqvpjkxhffg3ag","name":"admin","email":"admin@gmail.com","role":"admin","gender":"male","avatar":"https:\/\/via.placeholder.com\/300x300.png\/002200?text=people+occaecati","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/00dd99?text=abstract+odit","description":"Eos expedita eos et eaque. Recusandae eum rem aut animi necessitatibus exercitationem. Quibusdam non nihil ut perspiciatis aut.","birthday":null,"allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:08.000000Z","last_seen_at":"2025-05-03T22:39:29.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","is_online":false,"formatted_last_seen":"03.05.2025 22:39"},"created_at":"2025-05-11T17:04:35.000000Z","updated_at":"2025-05-11T17:05:23.000000Z"},{"id":"01jtzyp1jxg2p3e33vb1v3r0e3","body":"Iusto numquam sit omnis est aut ullam unde. Atque labore ullam nulla.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwxgbskzj6h3q72qmdsg","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03ps5enm87dzq9h3med","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":19,"user":{"id":"01jtzynwxgbskzj6h3q72qmdsg","name":"panasuk.svitlana","email":"sbrovarcuk@example.net","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/00ddaa?text=people+dignissimos","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/005500?text=abstract+odio","description":null,"birthday":"1976-06-17","allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-05-01T16:48:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":48,"is_online":false,"formatted_last_seen":"01.05.2025 16:48"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1j8k37dyaneka1vmx3p","body":"Vero autem incidunt veniam nam deserunt. Illum magni aut ut at iste ut deserunt. Repellendus est libero quo et officia laborum est.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww8kpwpcv52yhje5r5j","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp032fzqe5d7kfz2gxc4b","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":19,"user":{"id":"01jtzynww8kpwpcv52yhje5r5j","name":"oleg.sevcenko","email":"vasilenko.viktor@example.com","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/007700?text=people+neque","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/00eecc?text=abstract+suscipit","description":null,"birthday":"1986-11-27","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-05-03T09:20:28.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":38,"is_online":false,"formatted_last_seen":"03.05.2025 09:20"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jswq2nqjcvg4r4ymts","body":"Minus quam soluta assumenda consequatur odio. Nostrum reiciendis quia non voluptatem.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwxgbskzj6h3q72qmdsg","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03ps5enm87dzq9h3med","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":18,"user":{"id":"01jtzynwxgbskzj6h3q72qmdsg","name":"panasuk.svitlana","email":"sbrovarcuk@example.net","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/00ddaa?text=people+dignissimos","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/005500?text=abstract+odio","description":null,"birthday":"1976-06-17","allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-05-01T16:48:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":48,"is_online":false,"formatted_last_seen":"01.05.2025 16:48"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jvf2xxkwyk3p3y3gtw","body":"Maxime voluptatem aspernatur reiciendis eum quas. Voluptatum atque debitis corporis aperiam qui est neque.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwxgbskzj6h3q72qmdsg","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03ps5enm87dzq9h3med","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":8,"user":{"id":"01jtzynwxgbskzj6h3q72qmdsg","name":"panasuk.svitlana","email":"sbrovarcuk@example.net","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/00ddaa?text=people+dignissimos","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/005500?text=abstract+odio","description":null,"birthday":"1976-06-17","allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-05-01T16:48:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":48,"is_online":false,"formatted_last_seen":"01.05.2025 16:48"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jw77t1n0g5b6shm9kt","body":"Consequuntur sint blanditiis modi quia eaque tempore tempore. Incidunt ut quia aperiam sit non excepturi dolore.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwxgbskzj6h3q72qmdsg","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03ps5enm87dzq9h3med","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":15,"user":{"id":"01jtzynwxgbskzj6h3q72qmdsg","name":"panasuk.svitlana","email":"sbrovarcuk@example.net","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/00ddaa?text=people+dignissimos","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/005500?text=abstract+odio","description":null,"birthday":"1976-06-17","allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-05-01T16:48:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":48,"is_online":false,"formatted_last_seen":"01.05.2025 16:48"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jfzd4g512hd8v82cnc","body":"Sit ea perspiciatis accusamus magni deserunt veritatis ducimus. Suscipit libero quibusdam eum cum tempora. Occaecati amet qui provident vel est. Ipsum voluptatem omnis autem voluptatem porro officiis.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww8kpwpcv52yhje5r5j","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03fzf577att4q93tsjv","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":13,"user":{"id":"01jtzynww8kpwpcv52yhje5r5j","name":"oleg.sevcenko","email":"vasilenko.viktor@example.com","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/007700?text=people+neque","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/00eecc?text=abstract+suscipit","description":null,"birthday":"1986-11-27","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-05-03T09:20:28.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":38,"is_online":false,"formatted_last_seen":"03.05.2025 09:20"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jb0xywrn0g0wdt53v2","body":"Placeat quasi voluptas quia illo. Illum nobis repellat autem consequatur omnis dignissimos perspiciatis voluptas. Rerum voluptatem id odio sit deserunt qui ut. Amet assumenda dolorum deserunt.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwwym68b7n5d1td1venq","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp0389bncdr90846yaw9x","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":19,"user":{"id":"01jtzynwwym68b7n5d1td1venq","name":"sinkarenko.lev","email":"alla77@example.net","role":"user","gender":"other","avatar":"https:\/\/via.placeholder.com\/300x300.png\/007788?text=people+sunt","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/004466?text=abstract+voluptatibus","description":null,"birthday":"1991-02-10","allow_adult":false,"is_auto_next":false,"is_auto_play":true,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:06.000000Z","last_seen_at":null,"created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":34},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jgy4d5zfgdzxrdv4sv","body":"Est magni voluptatem illo doloremque aut harum dolorem. Ut eum sit voluptas modi veritatis ad.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww8kpwpcv52yhje5r5j","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03fzf577att4q93tsjv","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":14,"user":{"id":"01jtzynww8kpwpcv52yhje5r5j","name":"oleg.sevcenko","email":"vasilenko.viktor@example.com","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/007700?text=people+neque","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/00eecc?text=abstract+suscipit","description":null,"birthday":"1986-11-27","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":true,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-05-03T09:20:28.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":38,"is_online":false,"formatted_last_seen":"03.05.2025 09:20"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"},{"id":"01jtzyp1jtyjee9vn9b9m53arj","body":"Accusamus sint fugit fuga laboriosam totam. Alias quam est molestiae enim velit minima eaque.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynwxgbskzj6h3q72qmdsg","commentable_type":"App\\Models\\Episode","commentable_id":"01jtzyp03ps5enm87dzq9h3med","commentable_type_label":"\u0415\u043f\u0456\u0437\u043e\u0434","likes_count":16,"user":{"id":"01jtzynwxgbskzj6h3q72qmdsg","name":"panasuk.svitlana","email":"sbrovarcuk@example.net","role":"user","gender":null,"avatar":"https:\/\/via.placeholder.com\/300x300.png\/00ddaa?text=people+dignissimos","backdrop":"https:\/\/via.placeholder.com\/1920x1080.png\/005500?text=abstract+odio","description":null,"birthday":"1976-06-17","allow_adult":true,"is_auto_next":false,"is_auto_play":false,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:07.000000Z","last_seen_at":"2025-05-01T16:48:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":48,"is_online":false,"formatted_last_seen":"01.05.2025 16:48"},"created_at":"2025-05-11T15:16:13.000000Z","updated_at":"2025-05-11T15:16:13.000000Z"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/roots/{commentable_type}/{commentable_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get root comments for a specific commentable'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentable_type:
        name: commentable_type
        description: 'The type of the commentable.'
        required: true
        example: 'movie, episode, selection'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: 'The ID of the commentable.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      commentable_type: 'movie, episode, selection'
      commentable_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації коментарів за текстом. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (created_at - за датою створення, likes_count - за кількістю вподобань).'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Фільтр для відображення тільки коментарів з поміткою про спойлер.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Фільтр за ID користувача, який залишив коментар. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: 'Тип об''єкта, до якого відноситься коментар (App\Models\Movie, App\Models\Episode, App\Models\Selection).'
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: "ID об'єкта, до якого відноситься коментар."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: 'Фільтр для відображення тільки кореневих коментарів (не відповідей).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Фільтр за ID батьківського коментаря (для відображення відповідей). The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      is_spoiler: false
      user_id: ''
      commentable_type: App\Models\Movie
      commentable_id: ''
      is_root: false
      parent_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 3 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"commentable_id":["\u041f\u043e\u043b\u0435 commentable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"parent_id":["\u041f\u043e\u043b\u0435 parent id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comments with filtering, sorting and pagination'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації коментарів за текстом. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (created_at - за датою створення, likes_count - за кількістю вподобань).'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Фільтр для відображення тільки коментарів з поміткою про спойлер.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Фільтр за ID користувача, який залишив коментар. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: 'Тип об''єкта, до якого відноситься коментар (App\Models\Movie, App\Models\Episode, App\Models\Selection).'
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: "ID об'єкта, до якого відноситься коментар."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: 'Фільтр для відображення тільки кореневих коментарів (не відповідей).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Фільтр за ID батьківського коментаря (для відображення відповідей). The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      is_spoiler: false
      user_id: ''
      commentable_type: App\Models\Movie
      commentable_id: ''
      is_root: false
      parent_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 3 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"commentable_id":["\u041f\u043e\u043b\u0435 commentable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"parent_id":["\u041f\u043e\u043b\u0435 parent id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01jtzyp12fb2k0by6vv4j1dh1e","body":"Praesentium qui hic possimus doloribus sint voluptate aut. Aut sed distinctio soluta at.","is_spoiler":false,"is_reply":false,"parent_id":null,"user_id":"01jtzynww5k8wqjz5jd13jn6eh","commentable_type":"App\\Models\\Movie","commentable_id":"01jtzynza8g6wpnaddm53y3wyy","commentable_type_label":"\u0424\u0456\u043b\u044c\u043c","likes_count":11,"replies_count":0,"user":{"id":"01jtzynww5k8wqjz5jd13jn6eh","name":"pavluk.anastasia","email":"wkravcenko@example.org","role":"user","gender":"other","avatar":"https:\/\/via.placeholder.com\/300x300.png\/0022ee?text=people+non","backdrop":null,"description":null,"birthday":"1989-04-01","allow_adult":false,"is_auto_next":true,"is_auto_play":true,"is_auto_skip_intro":false,"is_private_favorites":false,"is_banned":false,"email_verified_at":"2025-05-11T15:16:04.000000Z","last_seen_at":"2025-04-22T13:53:16.000000Z","created_at":"2025-05-11T15:16:08.000000Z","updated_at":"2025-05-11T15:16:08.000000Z","age":36,"is_online":false,"formatted_last_seen":"22.04.2025 13:53"},"parent":null,"commentable":{"id":"01jtzynza8g6wpnaddm53y3wyy","name":"Omnis id quaerat soluta.","slug":"omnis-id-quaerat-soluta-oiduow","description":"Modi fugit quidem nisi qui. Quis alias sunt magnam qui ea. Facere veritatis eos natus eos dolor sint eveniet. Consequatur est eaque quod quo dolor ab magnam dolor. Numquam porro ut sed et architecto praesentium in.","image_name":"https:\/\/via.placeholder.com\/640x480.png\/0099bb?text=movies+Movie+Poster+id","poster":"https:\/\/via.placeholder.com\/300x450.png\/00bb66?text=movies+Poster+sed","kind":"movie","status":"anons","release_year":"2023","imdb_score":4.64,"aliases":["laborum","aut","libero"],"countries":["UA"],"average_rating":5.7,"main_genre":null,"created_at":"2025-05-11T15:16:10.000000Z","updated_at":"2025-05-11T15:16:10.000000Z"},"created_at":"2025-05-11T15:16:12.000000Z","updated_at":"2025-05-11T15:16:12.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{comment_id}/replies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get replies to a specific comment'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації коментарів за текстом. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (created_at - за датою створення, likes_count - за кількістю вподобань).'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Фільтр для відображення тільки коментарів з поміткою про спойлер.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Фільтр за ID користувача, який залишив коментар. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: 'Тип об''єкта, до якого відноситься коментар (App\Models\Movie, App\Models\Episode, App\Models\Selection).'
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: "ID об'єкта, до якого відноситься коментар."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: 'Фільтр для відображення тільки кореневих коментарів (не відповідей).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Фільтр за ID батьківського коментаря (для відображення відповідей). The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      is_spoiler: false
      user_id: ''
      commentable_type: App\Models\Movie
      commentable_id: ''
      is_root: false
      parent_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442. (\u0442\u0430 \u0449\u0435 3 \u043f\u043e\u043c\u0438\u043b\u043a\u0438)","errors":{"q":["\u041f\u043e\u043b\u0435 q \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"user_id":["\u041f\u043e\u043b\u0435 user id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"commentable_id":["\u041f\u043e\u043b\u0435 commentable id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."],"parent_id":["\u041f\u043e\u043b\u0435 parent id \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0456\u0441\u0442\u0438\u0442\u0438 \u0442\u0435\u043a\u0441\u0442."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/kinds
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie kinds with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"movie","label":"\u0424\u0456\u043b\u044c\u043c","color":"danger","icon":"heroicon-o-film","seo":{"meta_title":"\u0424\u0456\u043b\u044c\u043c\u0438 \u043e\u043d\u043b\u0430\u0439\u043d | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u044c\u0442\u0435 \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u043e\u043d\u043b\u0430\u0439\u043d, \u0432\u0456\u0434 \u043a\u043b\u0430\u0441\u0438\u043a\u0438 \u0434\u043e \u043d\u043e\u0432\u0438\u043d\u043e\u043a \u043a\u0456\u043d\u043e\u0456\u043d\u0434\u0443\u0441\u0442\u0440\u0456\u0457.","meta_image":"\/images\/seo\/movie.jpg"}},{"value":"tv_series","label":"\u0422\u0412 \u0441\u0435\u0440\u0456\u0430\u043b","color":"primary","icon":"heroicon-o-tv","seo":{"meta_title":"\u0422\u0412 \u0441\u0435\u0440\u0456\u0430\u043b\u0438 \u043e\u043d\u043b\u0430\u0439\u043d | Netflix","meta_description":"\u041e\u0437\u043d\u0430\u0439\u043e\u043c\u0442\u0435\u0441\u044f \u0437 \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u0438\u043c\u0438 \u0422\u0412 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u043c\u0438 \u043e\u043d\u043b\u0430\u0439\u043d, \u0432\u0456\u0434 \u043a\u043e\u043c\u0435\u0434\u0456\u0439 \u0434\u043e \u0434\u0440\u0430\u043c.","meta_image":"\/images\/seo\/tv-series.jpg"}},{"value":"animated_movie","label":"\u041c\u0443\u043b\u044c\u0442\u0444\u0456\u043b\u044c\u043c","color":"success","icon":"heroicon-o-sparkles","seo":{"meta_title":"\u041c\u0443\u043b\u044c\u0442\u0444\u0456\u043b\u044c\u043c\u0438 \u043e\u043d\u043b\u0430\u0439\u043d | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u044c\u0442\u0435 \u0430\u043d\u0456\u043c\u0430\u0446\u0456\u0439\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438, \u0449\u043e \u0437\u0430\u0445\u043e\u043f\u043b\u044e\u044e\u0442\u044c \u0441\u0432\u043e\u0454\u044e \u0433\u0440\u0430\u0444\u0456\u043a\u043e\u044e \u0442\u0430 \u0441\u044e\u0436\u0435\u0442\u0430\u043c\u0438.","meta_image":"\/images\/seo\/animated-movie.jpg"}},{"value":"animated_series","label":"\u041c\u0443\u043b\u044c\u0442\u0441\u0435\u0440\u0456\u0430\u043b","color":"info","icon":"heroicon-o-play","seo":{"meta_title":"\u041c\u0443\u043b\u044c\u0442\u0441\u0435\u0440\u0456\u0430\u043b\u0438 \u043e\u043d\u043b\u0430\u0439\u043d | Netflix","meta_description":"\u0414\u0438\u0432\u0456\u0442\u044c\u0441\u044f \u043c\u0443\u043b\u044c\u0442\u0441\u0435\u0440\u0456\u0430\u043b\u0438 \u0434\u043b\u044f \u0432\u0441\u0456\u0445 \u0432\u0456\u043a\u043e\u0432\u0438\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0456\u0439 \u043e\u043d\u043b\u0430\u0439\u043d.","meta_image":"\/images\/seo\/animated-series.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/kinds/{kind}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie kind with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      kind:
        name: kind
        description: 'The kind of the movie.'
        required: true
        example: 'movie, tv_series, animated_movie, animated_series'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      kind: 'movie, tv_series, animated_movie, animated_series'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid kind value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/statuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie statuses with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"anons","label":"\u0410\u043d\u043e\u043d\u0441","color":"info","icon":"heroicon-o-megaphone","seo":{"meta_title":"\u0410\u043d\u043e\u043d\u0441\u043e\u0432\u0430\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0441\u043a\u043e\u0440\u043e \u0432\u0438\u0439\u0434\u0443\u0442\u044c","meta_image":"\/images\/seo\/status-anons.jpg"}},{"value":"ongoing","label":"\u0412\u0438\u0445\u043e\u0434\u0438\u0442\u044c","color":"success","icon":"heroicon-o-play","seo":{"meta_title":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u0449\u043e \u0432\u0438\u0445\u043e\u0434\u044f\u0442\u044c | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0437\u0430\u0440\u0430\u0437 \u0432\u0438\u0445\u043e\u0434\u044f\u0442\u044c","meta_image":"\/images\/seo\/status-ongoing.jpg"}},{"value":"released","label":"\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e","color":"primary","icon":"heroicon-o-check-badge","seo":{"meta_title":"\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0436\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0456","meta_image":"\/images\/seo\/status-released.jpg"}},{"value":"canceled","label":"\u0421\u043a\u0430\u0441\u043e\u0432\u0430\u043d\u043e","color":"danger","icon":"heroicon-o-x-circle","seo":{"meta_title":"\u0421\u043a\u0430\u0441\u043e\u0432\u0430\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0431\u0443\u043b\u0438 \u0441\u043a\u0430\u0441\u043e\u0432\u0430\u043d\u0456","meta_image":"\/images\/seo\/status-canceled.jpg"}},{"value":"rumored","label":"\u0427\u0443\u0442\u043a\u0438","color":"gray","icon":"heroicon-o-chat-bubble-left-ellipsis","seo":{"meta_title":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438 \u0432 \u0447\u0443\u0442\u043a\u0430\u0445 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u043f\u0440\u043e \u044f\u043a\u0456 \u0445\u043e\u0434\u044f\u0442\u044c \u0447\u0443\u0442\u043a\u0438","meta_image":"\/images\/seo\/status-rumored.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/statuses/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie status with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status of the movie.'
        required: true
        example: 'draft, published, deleted'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      status: 'draft, published, deleted'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid status value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/person-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all person types with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"actor","label":"\u0410\u043a\u0442\u043e\u0440","color":"primary","icon":"heroicon-o-user","seo":{"meta_title":"\u0410\u043a\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u0410\u043a\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u0437\u043d\u0456\u043c\u0430\u044e\u0442\u044c\u0441\u044f \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-actor.jpg"}},{"value":"character","label":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436","color":"info","icon":"heroicon-o-user-circle","seo":{"meta_title":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456 | Netflix","meta_description":"\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-character.jpg"}},{"value":"director","label":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440","color":"danger","icon":"heroicon-o-video-camera","seo":{"meta_title":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u0420\u0435\u0436\u0438\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-director.jpg"}},{"value":"producer","label":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440","color":"success","icon":"heroicon-o-currency-dollar","seo":{"meta_title":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u041f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0444\u0456\u043d\u0430\u043d\u0441\u0443\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-producer.jpg"}},{"value":"writer","label":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442","color":"warning","icon":"heroicon-o-document-text","seo":{"meta_title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442\u0438 | Netflix","meta_description":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0441\u0442\u0438, \u044f\u043a\u0456 \u043f\u0438\u0448\u0443\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u0457 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-writer.jpg"}},{"value":"editor","label":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440","color":"gray","icon":"heroicon-o-scissors","seo":{"meta_title":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440\u0438 | Netflix","meta_description":"\u041c\u043e\u043d\u0442\u0430\u0436\u0435\u0440\u0438, \u044f\u043a\u0456 \u043c\u043e\u043d\u0442\u0443\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-editor.jpg"}},{"value":"cinematographer","label":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440","color":"info","icon":"heroicon-o-camera","seo":{"meta_title":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u041e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u0437\u043d\u0456\u043c\u0430\u044e\u0442\u044c \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/person-cinematographer.jpg"}},{"value":"composer","label":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440","color":"primary","icon":"heroicon-o-musical-note","seo":{"meta_title":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438 | Netflix","meta_description":"\u041a\u043e\u043c\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438, \u044f\u043a\u0456 \u043f\u0438\u0448\u0443\u0442\u044c \u043c\u0443\u0437\u0438\u043a\u0443 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-composer.jpg"}},{"value":"art_director","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a","color":"success","icon":"heroicon-o-paint-brush","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0438\u043b\u044c \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-art-director.jpg"}},{"value":"sound_designer","label":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440","color":"warning","icon":"heroicon-o-speaker-wave","seo":{"meta_title":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0438 | Netflix","meta_description":"\u0417\u0432\u0443\u043a\u043e\u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0437\u0432\u0443\u043a\u043e\u0432\u0435 \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u043d\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-sound-designer.jpg"}},{"value":"costume_designer","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445","color":"info","icon":"heroicon-o-speaker-wave","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438 \u043f\u043e \u043a\u043e\u0441\u0442\u044e\u043c\u0430\u0445, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u043a\u043e\u0441\u0442\u044e\u043c\u0438 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-costume-designer.jpg"}},{"value":"makeup_artist","label":"\u0413\u0440\u0438\u043c\u0435\u0440","color":"primary","icon":"heroicon-o-face-smile","seo":{"meta_title":"\u0413\u0440\u0438\u043c\u0435\u0440\u0438 | Netflix","meta_description":"\u0413\u0440\u0438\u043c\u0435\u0440\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0433\u0440\u0438\u043c \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-makeup-artist.jpg"}},{"value":"voice_actor","label":"\u0410\u043a\u0442\u043e\u0440 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f","color":"success","icon":"heroicon-o-microphone","seo":{"meta_title":"\u0410\u043a\u0442\u043e\u0440\u0438 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f | Netflix","meta_description":"\u0410\u043a\u0442\u043e\u0440\u0438 \u043e\u0437\u0432\u0443\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u043e\u0437\u0432\u0443\u0447\u0443\u044e\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0456\u0432 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-voice-actor.jpg"}},{"value":"stunt_performer","label":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440","color":"danger","icon":"heroicon-o-bolt","seo":{"meta_title":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440\u0438 | Netflix","meta_description":"\u041a\u0430\u0441\u043a\u0430\u0434\u0435\u0440\u0438, \u044f\u043a\u0456 \u0432\u0438\u043a\u043e\u043d\u0443\u044e\u0442\u044c \u0442\u0440\u044e\u043a\u0438 \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-stunt-performer.jpg"}},{"value":"assistant_director","label":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430","color":"warning","icon":"heroicon-o-user-plus","seo":{"meta_title":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430 | Netflix","meta_description":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430, \u044f\u043a\u0456 \u0434\u043e\u043f\u043e\u043c\u0430\u0433\u0430\u044e\u0442\u044c \u0440\u0435\u0436\u0438\u0441\u0435\u0440\u0430\u043c \u0443 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-assistant-director.jpg"}},{"value":"producer_assistant","label":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430","color":"gray","icon":"heroicon-o-user-plus","seo":{"meta_title":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430 | Netflix","meta_description":"\u041f\u043e\u043c\u0456\u0447\u043d\u0438\u043a\u0438 \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430, \u044f\u043a\u0456 \u0434\u043e\u043f\u043e\u043c\u0430\u0433\u0430\u044e\u0442\u044c \u043f\u0440\u043e\u0434\u044e\u0441\u0435\u0440\u0430\u043c \u0443 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-producer-assistant.jpg"}},{"value":"script_supervisor","label":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e","color":"info","icon":"heroicon-o-clipboard-document-check","seo":{"meta_title":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e | Netflix","meta_description":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e, \u044f\u043a\u0456 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044e\u044e\u0442\u044c \u0434\u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0441\u0446\u0435\u043d\u0430\u0440\u0456\u044e \u0443 \u0444\u0456\u043b\u044c\u043c\u0430\u0445 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0430\u0445","meta_image":"\/images\/seo\/person-script-supervisor.jpg"}},{"value":"production_designer","label":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a","color":"primary","icon":"heroicon-o-paint-brush","seo":{"meta_title":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438 | Netflix","meta_description":"\u0425\u0443\u0434\u043e\u0436\u043d\u0438\u043a\u0438-\u043f\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043d\u0438\u043a\u0438, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0438\u043b\u044c \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-production-designer.jpg"}},{"value":"visual_effects_supervisor","label":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432","color":"success","icon":"heroicon-o-sparkles","seo":{"meta_title":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432 | Netflix","meta_description":"\u0421\u0443\u043f\u0435\u0440\u0432\u0430\u0439\u0437\u0435\u0440\u0438 \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u0435\u0444\u0435\u043a\u0442\u0456\u0432, \u044f\u043a\u0456 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c \u0432\u0456\u0437\u0443\u0430\u043b\u044c\u043d\u0456 \u0435\u0444\u0435\u043a\u0442\u0438 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/person-visual-effects-supervisor.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/person-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific person type with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the person.'
        required: true
        example: 'actor, director, writer'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'actor, director, writer'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid person type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/user-list-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all user list types with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"favorite","label":"\u0423\u043b\u044e\u0431\u043b\u0435\u043d\u0435","color":"danger","icon":"heroicon-o-heart","seo":{"meta_title":"\u0423\u043b\u044e\u0431\u043b\u0435\u043d\u0435 | Netflix","meta_description":"\u0412\u0430\u0448\u0456 \u0443\u043b\u044e\u0431\u043b\u0435\u043d\u0456 \u0444\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438","meta_image":"\/images\/seo\/list-favorite.jpg"}},{"value":"not_watching","label":"\u041d\u0435 \u0434\u0438\u0432\u043b\u044e\u0441\u044f","color":"gray","icon":"heroicon-o-x-mark","seo":{"meta_title":"\u041d\u0435 \u0434\u0438\u0432\u043b\u044e\u0441\u044f | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043d\u0435 \u0434\u0438\u0432\u0438\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-not-watching.jpg"}},{"value":"watching","label":"\u0414\u0438\u0432\u043b\u044e\u0441\u044f","color":"success","icon":"heroicon-o-play","seo":{"meta_title":"\u0414\u0438\u0432\u043b\u044e\u0441\u044f | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u0437\u0430\u0440\u0430\u0437 \u0434\u0438\u0432\u0438\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-watching.jpg"}},{"value":"planned","label":"\u0412 \u043f\u043b\u0430\u043d\u0430\u0445","color":"info","icon":"heroicon-o-clock","seo":{"meta_title":"\u0412 \u043f\u043b\u0430\u043d\u0430\u0445 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u043b\u0430\u043d\u0443\u0454\u0442\u0435 \u043f\u043e\u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c","meta_image":"\/images\/seo\/list-planned.jpg"}},{"value":"stopped","label":"\u0417\u0430\u043a\u0438\u043d\u0443\u0432","color":"warning","icon":"heroicon-o-stop","seo":{"meta_title":"\u0417\u0430\u043a\u0438\u043d\u0443\u0432 | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043b\u0438 \u0434\u0438\u0432\u0438\u0442\u0438\u0441\u044c","meta_image":"\/images\/seo\/list-stopped.jpg"}},{"value":"rewatching","label":"\u041f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u044e\u0441\u044c","color":"primary","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u044e\u0441\u044c | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u043f\u0435\u0440\u0435\u0434\u0438\u0432\u043b\u044f\u0454\u0442\u0435\u0441\u044c","meta_image":"\/images\/seo\/list-rewatching.jpg"}},{"value":"watched","label":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u0442\u043e","color":"success","icon":"heroicon-o-check","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u0442\u043e | Netflix","meta_description":"\u0424\u0456\u043b\u044c\u043c\u0438 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0438, \u044f\u043a\u0456 \u0432\u0438 \u0432\u0436\u0435 \u043f\u0435\u0440\u0435\u0433\u043b\u044f\u043d\u0443\u043b\u0438","meta_image":"\/images\/seo\/list-watched.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/user-list-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific user list type with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the user list.'
        required: true
        example: 'favorite, watching'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'favorite, watching'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid user list type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/video-qualities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all video qualities with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"sd","label":"SD","color":"gray","icon":"heroicon-o-eye","seo":{"meta_title":"SD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (SD)","meta_image":"\/images\/seo\/quality-sd.jpg"}},{"value":"hd","label":"HD","color":"info","icon":"heroicon-o-eye","seo":{"meta_title":"HD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 \u0432\u0438\u0441\u043e\u043a\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (HD)","meta_image":"\/images\/seo\/quality-hd.jpg"}},{"value":"full_hd","label":"Full HD","color":"success","icon":"heroicon-o-eye","seo":{"meta_title":"Full HD \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 Full HD \u044f\u043a\u043e\u0441\u0442\u0456","meta_image":"\/images\/seo\/quality-full-hd.jpg"}},{"value":"uhd","label":"UHD (4K)","color":"primary","icon":"heroicon-o-eye","seo":{"meta_title":"UHD (4K) \u044f\u043a\u0456\u0441\u0442\u044c \u0432\u0456\u0434\u0435\u043e | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0433\u043b\u044f\u0434 \u0432\u0456\u0434\u0435\u043e \u0443 \u043d\u0430\u0434\u0432\u0438\u0441\u043e\u043a\u0456\u0439 \u044f\u043a\u043e\u0441\u0442\u0456 (UHD\/4K)","meta_image":"\/images\/seo\/quality-uhd.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/video-qualities/{quality}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific video quality with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      quality:
        name: quality
        description: 'The quality of the video.'
        required: true
        example: 'sd, hd, full_hd, uhd'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      quality: 'sd, hd, full_hd, uhd'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid video quality value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/genders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all genders with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"male","label":"\u0427\u043e\u043b\u043e\u0432\u0456\u0447\u0430","color":"info","icon":"heroicon-o-user","seo":{"meta_title":"\u0427\u043e\u043b\u043e\u0432\u0456\u0447\u0430 \u0441\u0442\u0430\u0442\u044c | Netflix","meta_description":"\u041a\u043e\u043d\u0442\u0435\u043d\u0442 \u0434\u043b\u044f \u0447\u043e\u043b\u043e\u0432\u0456\u0447\u043e\u0457 \u0430\u0443\u0434\u0438\u0442\u043e\u0440\u0456\u0457","meta_image":"\/images\/seo\/gender-male.jpg"}},{"value":"female","label":"\u0416\u0456\u043d\u043e\u0447\u0430","color":"pink","icon":"heroicon-o-user","seo":{"meta_title":"\u0416\u0456\u043d\u043e\u0447\u0430 \u0441\u0442\u0430\u0442\u044c | Netflix","meta_description":"\u041a\u043e\u043d\u0442\u0435\u043d\u0442 \u0434\u043b\u044f \u0436\u0456\u043d\u043e\u0447\u043e\u0457 \u0430\u0443\u0434\u0438\u0442\u043e\u0440\u0456\u0457","meta_image":"\/images\/seo\/gender-female.jpg"}},{"value":"other","label":"\u0406\u043d\u0448\u0430","color":"gray","icon":"heroicon-o-user","seo":{"meta_title":"\u0406\u043d\u0448\u0430 \u0441\u0442\u0430\u0442\u044c | Netflix","meta_description":"\u041a\u043e\u043d\u0442\u0435\u043d\u0442 \u0434\u043b\u044f \u0432\u0441\u0456\u0445","meta_image":"\/images\/seo\/gender-other.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/genders/{gender}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific gender with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gender:
        name: gender
        description: 'The gender.'
        required: true
        example: 'male, female, other'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      gender: 'male, female, other'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid gender value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/comment-report-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all comment report types with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"insult","label":"\u041e\u0431\u0440\u0430\u0437\u0430","color":"danger","icon":"heroicon-o-face-frown","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043e\u0431\u0440\u0430\u0437\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043e\u0431\u0440\u0430\u0437\u043b\u0438\u0432\u0456 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456","meta_image":"\/images\/seo\/report-insult.jpg"}},{"value":"flood_offtop_meaningless","label":"\u0424\u043b\u0443\u0434\/\u041e\u0444\u0444\u0442\u043e\u043f\/\u0411\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456\u0441\u0442\u044c","color":"gray","icon":"heroicon-o-chat-bubble-oval-left-ellipsis","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0444\u043b\u0443\u0434\/\u043e\u0444\u0444\u0442\u043e\u043f | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0444\u043b\u0443\u0434, \u043e\u0444\u0444\u0442\u043e\u043f \u0442\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456","meta_image":"\/images\/seo\/report-flood.jpg"}},{"value":"ad_spam","label":"\u0420\u0435\u043a\u043b\u0430\u043c\u0430\/\u0421\u043f\u0430\u043c","color":"warning","icon":"heroicon-o-megaphone","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u0443\/\u0441\u043f\u0430\u043c | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u0443 \u0442\u0430 \u0441\u043f\u0430\u043c \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-spam.jpg"}},{"value":"spoiler","label":"\u0421\u043f\u043e\u0439\u043b\u0435\u0440","color":"info","icon":"heroicon-o-eye-slash","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0441\u043f\u043e\u0439\u043b\u0435\u0440\u0438 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-spoiler.jpg"}},{"value":"provocation_conflict","label":"\u041f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u044f\/\u041a\u043e\u043d\u0444\u043b\u0456\u043a\u0442","color":"danger","icon":"heroicon-o-fire","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u0457 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043f\u0440\u043e\u0432\u043e\u043a\u0430\u0446\u0456\u0457 \u0442\u0430 \u043a\u043e\u043d\u0444\u043b\u0456\u043a\u0442\u0438 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-provocation.jpg"}},{"value":"inappropriate_language","label":"\u041d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0430 \u043b\u0435\u043a\u0441\u0438\u043a\u0430","color":"warning","icon":"heroicon-o-no-symbol","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443 \u043b\u0435\u043a\u0441\u0438\u043a\u0443 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u043d\u0435\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443 \u043b\u0435\u043a\u0441\u0438\u043a\u0443 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-language.jpg"}},{"value":"forbidden_unnecessary_content","label":"\u0417\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439\/\u041d\u0435\u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442","color":"danger","icon":"heroicon-o-shield-exclamation","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u0435\u043d\u0438\u0439 \u0442\u0430 \u043d\u0435\u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0438\u0439 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0443 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u044f\u0445","meta_image":"\/images\/seo\/report-forbidden.jpg"}},{"value":"meaningless_empty_topic","label":"\u0411\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0430\/\u041f\u043e\u0440\u043e\u0436\u043d\u044f \u0442\u0435\u043c\u0430","color":"gray","icon":"heroicon-o-document-text","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u0442\u0435\u043c\u0438 | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0431\u0435\u0437\u0437\u043c\u0456\u0441\u0442\u043e\u0432\u043d\u0456 \u0442\u0430 \u043f\u043e\u0440\u043e\u0436\u043d\u0456 \u0442\u0435\u043c\u0438","meta_image":"\/images\/seo\/report-meaningless.jpg"}},{"value":"duplicate_topic","label":"\u0414\u0443\u0431\u043b\u0456\u043a\u0430\u0442 \u0442\u0435\u043c\u0438","color":"primary","icon":"heroicon-o-document-duplicate","seo":{"meta_title":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0434\u0443\u0431\u043b\u0456\u043a\u0430\u0442\u0438 \u0442\u0435\u043c | Netflix","meta_description":"\u0421\u043a\u0430\u0440\u0433\u0438 \u043d\u0430 \u0434\u0443\u0431\u043b\u0456\u043a\u0430\u0442\u0438 \u0442\u0435\u043c","meta_image":"\/images\/seo\/report-duplicate.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/comment-report-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific comment report type with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the comment report.'
        required: true
        example: 'insult, flood_offtop_meaningless, ad_spam, spoiler, provocation_conflict, inappropriate_language, forbidden_unnecessary_content, meaningless_empty_topic, duplicate_topic'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'insult, flood_offtop_meaningless, ad_spam, spoiler, provocation_conflict, inappropriate_language, forbidden_unnecessary_content, meaningless_empty_topic, duplicate_topic'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid comment report type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/movie-relate-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all movie relate types with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"season","label":"\u0421\u0435\u0437\u043e\u043d","color":"info","icon":"heroicon-o-calendar","seo":{"meta_title":"\u0421\u0435\u0437\u043e\u043d\u0438 | Netflix","meta_description":"\u0421\u0435\u0437\u043e\u043d\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-season.jpg"}},{"value":"source","label":"\u0414\u0436\u0435\u0440\u0435\u043b\u043e","color":"gray","icon":"heroicon-o-book-open","seo":{"meta_title":"\u0414\u0436\u0435\u0440\u0435\u043b\u0430 | Netflix","meta_description":"\u0414\u0436\u0435\u0440\u0435\u043b\u0430 \u0434\u043b\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-source.jpg"}},{"value":"sequel","label":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f","color":"success","icon":"heroicon-o-arrow-right","seo":{"meta_title":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f | Netflix","meta_description":"\u041f\u0440\u043e\u0434\u043e\u0432\u0436\u0435\u043d\u043d\u044f \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-sequel.jpg"}},{"value":"side_story","label":"\u041f\u043e\u0431\u0456\u0447\u043d\u0430 \u0456\u0441\u0442\u043e\u0440\u0456\u044f","color":"primary","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u043e\u0431\u0456\u0447\u043d\u0456 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 | Netflix","meta_description":"\u041f\u043e\u0431\u0456\u0447\u043d\u0456 \u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-side-story.jpg"}},{"value":"summary","label":"\u041f\u0456\u0434\u0441\u0443\u043c\u043e\u043a","color":"warning","icon":"heroicon-o-document-text","seo":{"meta_title":"\u041f\u0456\u0434\u0441\u0443\u043c\u043a\u0438 | Netflix","meta_description":"\u041f\u0456\u0434\u0441\u0443\u043c\u043a\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-summary.jpg"}},{"value":"other","label":"\u0406\u043d\u0448\u0435","color":"gray","icon":"heroicon-o-ellipsis-horizontal","seo":{"meta_title":"\u0406\u043d\u0448\u0456 \u0437\u0432''\u044f\u0437\u043a\u0438 | Netflix","meta_description":"\u0406\u043d\u0448\u0456 \u0437\u0432''\u044f\u0437\u043a\u0438 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-other.jpg"}},{"value":"adaptation","label":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u044f","color":"orange","icon":"heroicon-o-film","seo":{"meta_title":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u0457 | Netflix","meta_description":"\u0410\u0434\u0430\u043f\u0442\u0430\u0446\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-adaptation.jpg"}},{"value":"alternative","label":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0430","color":"pink","icon":"heroicon-o-arrows-right-left","seo":{"meta_title":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0438 | Netflix","meta_description":"\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u0456 \u0432\u0435\u0440\u0441\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-alternative.jpg"}},{"value":"prequel","label":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u044f","color":"danger","icon":"heroicon-o-arrow-left","seo":{"meta_title":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u0457 | Netflix","meta_description":"\u041f\u0435\u0440\u0435\u0434\u0456\u0441\u0442\u043e\u0440\u0456\u0457 \u0444\u0456\u043b\u044c\u043c\u0456\u0432 \u0442\u0430 \u0441\u0435\u0440\u0456\u0430\u043b\u0456\u0432","meta_image":"\/images\/seo\/relate-prequel.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/movie-relate-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific movie relate type with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the movie relate.'
        required: true
        example: 'season, source, sequel, side_story, summary, other, adaptation, alternative, prequel'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'season, source, sequel, side_story, summary, other, adaptation, alternative, prequel'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid movie relate type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/payment-statuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all payment statuses with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"pending","label":"\u0412 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456","color":"warning","icon":"heroicon-o-clock","seo":{"meta_title":"\u041f\u043b\u0430\u0442\u0456\u0436 \u0432 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456 | Netflix","meta_description":"\u0412\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0432 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043d\u043d\u0456 \u043f\u0456\u0434\u0442\u0432\u0435\u0440\u0434\u0436\u0435\u043d\u043d\u044f","meta_image":"\/images\/seo\/payment-pending.jpg"}},{"value":"success","label":"\u0423\u0441\u043f\u0456\u0448\u043d\u043e","color":"success","icon":"heroicon-o-check-circle","seo":{"meta_title":"\u0423\u0441\u043f\u0456\u0448\u043d\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u0412\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0443\u0441\u043f\u0456\u0448\u043d\u043e \u043e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e","meta_image":"\/images\/seo\/payment-success.jpg"}},{"value":"failed","label":"\u041d\u0435\u0432\u0434\u0430\u043b\u043e","color":"danger","icon":"heroicon-o-x-circle","seo":{"meta_title":"\u041d\u0435\u0432\u0434\u0430\u043b\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u0412\u0438\u043d\u0438\u043a\u043b\u0430 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u0440\u043e\u0431\u0446\u0456 \u0432\u0430\u0448\u043e\u0433\u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0443","meta_image":"\/images\/seo\/payment-failed.jpg"}},{"value":"refunded","label":"\u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u043e","color":"info","icon":"heroicon-o-arrow-path","seo":{"meta_title":"\u041f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0439 \u043f\u043b\u0430\u0442\u0456\u0436 | Netflix","meta_description":"\u041a\u043e\u0448\u0442\u0438 \u0437\u0430 \u0432\u0430\u0448 \u043f\u043b\u0430\u0442\u0456\u0436 \u0431\u0443\u043b\u043e \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u043e","meta_image":"\/images\/seo\/payment-refunded.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/payment-statuses/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific payment status with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status of the payment.'
        required: true
        example: 'pending, success, failed, refunded'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      status: 'pending, success, failed, refunded'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid payment status value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/api-source-names
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all API source names with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"tmdb","label":"TMDB","color":"success","icon":"heroicon-o-film","seo":{"meta_title":"TMDB API | Netflix","meta_description":"\u0414\u0430\u043d\u0456 \u0437 The Movie Database API","meta_image":"\/images\/seo\/api-tmdb.jpg"}},{"value":"shiki","label":"Shikimori","color":"primary","icon":"heroicon-o-sun","seo":{"meta_title":"Shikimori API | Netflix","meta_description":"\u0414\u0430\u043d\u0456 \u0437 Shikimori API","meta_image":"\/images\/seo\/api-shiki.jpg"}},{"value":"imdb","label":"IMDB","color":"warning","icon":"heroicon-o-star","seo":{"meta_title":"IMDB API | Netflix","meta_description":"\u0414\u0430\u043d\u0456 \u0437 Internet Movie Database API","meta_image":"\/images\/seo\/api-imdb.jpg"}},{"value":"anilist","label":"AniList","color":"info","icon":"heroicon-o-book-open","seo":{"meta_title":"AniList API | Netflix","meta_description":"\u0414\u0430\u043d\u0456 \u0437 AniList API","meta_image":"\/images\/seo\/api-anilist.jpg"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/api-source-names/{source}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific API source name with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      source:
        name: source
        description: 'The name of the API source.'
        required: true
        example: 'tmdb, shiki, imdb, anilist'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      source: 'tmdb, shiki, imdb, anilist'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid API source name value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/enums/attachment-types
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all attachment types with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"value":"trailer","label":"\u0422\u0440\u0435\u0439\u043b\u0435\u0440","color":"danger","icon":"heroicon-o-film","seo":{"meta_title":"enums.attachment_type.meta_title.trailer","meta_description":"enums.attachment_type.meta_description.trailer","meta_image":"enums.attachment_type.meta_image.trailer"}},{"value":"teaser","label":"\u0422\u0438\u0437\u0435\u0440","color":"warning","icon":"heroicon-o-eye","seo":{"meta_title":"enums.attachment_type.meta_title.teaser","meta_description":"enums.attachment_type.meta_description.teaser","meta_image":"enums.attachment_type.meta_image.teaser"}},{"value":"behind_the_scenes","label":"\u0417\u0430 \u043b\u0430\u0448\u0442\u0443\u043d\u043a\u0430\u043c\u0438","color":"info","icon":"heroicon-o-camera","seo":{"meta_title":"enums.attachment_type.meta_title.behind_the_scenes","meta_description":"enums.attachment_type.meta_description.behind_the_scenes","meta_image":"enums.attachment_type.meta_image.behind_the_scenes"}},{"value":"interview","label":"\u0406\u043d\u0442\u0435\u0440\u0432''\u044e","color":"success","icon":"heroicon-o-microphone","seo":{"meta_title":"enums.attachment_type.meta_title.interview","meta_description":"enums.attachment_type.meta_description.interview","meta_image":"enums.attachment_type.meta_image.interview"}},{"value":"clip","label":"\u041a\u043b\u0456\u043f","color":"primary","icon":"heroicon-o-play","seo":{"meta_title":"enums.attachment_type.meta_title.clip","meta_description":"enums.attachment_type.meta_description.clip","meta_image":"enums.attachment_type.meta_image.clip"}},{"value":"deleted_scene","label":"\u0412\u0438\u0434\u0430\u043b\u0435\u043d\u0430 \u0441\u0446\u0435\u043d\u0430","color":"gray","icon":"heroicon-o-trash","seo":{"meta_title":"enums.attachment_type.meta_title.deleted_scene","meta_description":"enums.attachment_type.meta_description.deleted_scene","meta_image":"enums.attachment_type.meta_image.deleted_scene"}},{"value":"blooper","label":"\u041d\u0435\u0432\u0434\u0430\u043b\u0456 \u0434\u0443\u0431\u043b\u0456","color":"pink","icon":"heroicon-o-face-smile","seo":{"meta_title":"enums.attachment_type.meta_title.blooper","meta_description":"enums.attachment_type.meta_description.blooper","meta_image":"enums.attachment_type.meta_image.blooper"}},{"value":"featurette","label":"\u0424\u0456\u0447\u0443\u0440\u0435\u0442\u043a\u0430","color":"orange","icon":"heroicon-o-star","seo":{"meta_title":"enums.attachment_type.meta_title.featurette","meta_description":"enums.attachment_type.meta_description.featurette","meta_image":"enums.attachment_type.meta_image.featurette"}},{"value":"picture","label":"\u0417\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f","color":"indigo","icon":"heroicon-o-photo","seo":{"meta_title":"enums.attachment_type.meta_title.picture","meta_description":"enums.attachment_type.meta_description.picture","meta_image":"enums.attachment_type.meta_image.picture"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/enums/attachment-types/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific attachment type with SEO data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of the attachment.'
        required: true
        example: 'trailer, teaser, behind_the_scenes, interview, clip, deleted_scene, blooper, featurette, picture'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: 'trailer, teaser, behind_the_scenes, interview, clip, deleted_scene, blooper, featurette, picture'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      locale:
        name: locale
        description: 'Мова для локалізації енумерацій (en - англійська, uk - українська).'
        required: false
        example: uk
        type: string
        enumValues:
          - en
          - uk
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      locale: uk
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Invalid attachment type value"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/verify-email/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Mark the authenticated user's email address as verified."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      hash: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/email/verification-notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy an authenticated session.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recommendations
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommended movies.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recommendations/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommended movies.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recommendations/series
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommended series.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/recommendations/similar/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of similar movies to the given movie.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/recommendations/because-you-watched/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommended movies based on a movie the user watched.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/recommendations/continue-watching
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Display a listing of movies the user was watching but hasn't finished."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Ім'я користувача. Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Іван Петренко'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Електронна пошта користувача. Поле value повинне містити коректну електронну адресу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Новий пароль користувача.'
        required: false
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Роль користувача (тільки для адміністраторів).'
        required: false
        example: user
        type: string
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Стать користувача.'
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: 'Аватар користувача (URL або файл).'
        required: false
        example: 'https://example.com/avatar.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: 'Фонове зображення профілю користувача (URL або файл).'
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Опис профілю користувача. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Люблю дивитися фільми та серіали'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Дата народження користувача. Поле value не є датою.'
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allow_adult:
        name: allow_adult
        description: 'Дозволити контент для дорослих.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_next:
        name: is_auto_next
        description: 'Автоматично переходити до наступного епізоду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_play:
        name: is_auto_play
        description: 'Автоматично відтворювати трейлери.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_skip_intro:
        name: is_auto_skip_intro
        description: 'Автоматично пропускати вступ.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_private_favorites:
        name: is_private_favorites
        description: 'Зробити список улюблених приватним.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: 'Заблокувати користувача (тільки для адміністраторів).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Іван Петренко'
      email: user@example.com
      password: password123
      role: user
      gender: male
      avatar: 'https://example.com/avatar.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      description: 'Люблю дивитися фільми та серіали'
      birthday: '1990-01-01'
      allow_adult: false
      is_auto_next: false
      is_auto_play: false
      is_auto_skip_intro: false
      is_private_favorites: false
      is_banned: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Partially update the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Ім'я користувача. Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Іван Петренко'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Електронна пошта користувача. Поле value повинне містити коректну електронну адресу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Новий пароль користувача.'
        required: false
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Роль користувача (тільки для адміністраторів).'
        required: false
        example: user
        type: string
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Стать користувача.'
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: 'Аватар користувача (URL або файл).'
        required: false
        example: 'https://example.com/avatar.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: 'Фонове зображення профілю користувача (URL або файл).'
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Опис профілю користувача. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Люблю дивитися фільми та серіали'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Дата народження користувача. Поле value не є датою.'
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allow_adult:
        name: allow_adult
        description: 'Дозволити контент для дорослих.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_next:
        name: is_auto_next
        description: 'Автоматично переходити до наступного епізоду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_play:
        name: is_auto_play
        description: 'Автоматично відтворювати трейлери.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_skip_intro:
        name: is_auto_skip_intro
        description: 'Автоматично пропускати вступ.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_private_favorites:
        name: is_private_favorites
        description: 'Зробити список улюблених приватним.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: 'Заблокувати користувача (тільки для адміністраторів).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Іван Петренко'
      email: user@example.com
      password: password123
      role: user
      gender: male
      avatar: 'https://example.com/avatar.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      description: 'Люблю дивитися фільми та серіали'
      birthday: '1990-01-01'
      allow_adult: false
      is_auto_next: false
      is_auto_play: false
      is_auto_skip_intro: false
      is_private_favorites: false
      is_banned: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}/subscriptions'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscriptions for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user-lists
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'Тип списку користувача (FAVORITES, WATCH_LATER, тощо).'
        required: true
        example: FAVORITES
        type: string
        enumValues:
          - favorite
          - not_watching
          - watching
          - planned
          - stopped
          - rewatching
          - watched
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_type:
        name: listable_type
        description: "Тип об'єкта, який додається до списку."
        required: true
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Person
          - App\Models\Tag
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      listable_id:
        name: listable_id
        description: "ID об'єкта, який додається до списку."
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: FAVORITES
      listable_type: App\Models\Movie
      listable_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user-lists/{userList_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userList_id:
        name: userList_id
        description: 'The ID of the userList.'
        required: true
        example: 01jtzyp0cwct50984sxvzeagjr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userList_id: 01jtzyp0cwct50984sxvzeagjr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'ID фільму, якому виставляється рейтинг. The <code>id</code> of an existing record in the movies table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Числовий рейтинг від 1 до 10. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'Текстовий відгук про фільм (необов’язково). Текст в полі value повинен мати довжину не більшу за 2000.'
        required: false
        example: 'Дуже цікавий фільм з чудовою грою акторів та захоплюючим сюжетом.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      number: 8
      review: 'Дуже цікавий фільм з чудовою грою акторів та захоплюючим сюжетом.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jtzynzhj72x1a5wzkwctfz1x
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jtzynzhj72x1a5wzkwctfz1x
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      number:
        name: number
        description: 'Числовий рейтинг від 1 до 10. Поле value повинне бути не менше 1. Поле value має бути не більше 10.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      review:
        name: review
        description: 'Текстовий відгук про фільм (необов’язково). Текст в полі value повинен мати довжину не більшу за 2000.'
        required: false
        example: 'Після повторного перегляду я змінив свою думку про цей фільм. Він ще кращий, ніж я думав спочатку.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      number: 9
      review: 'Після повторного перегляду я змінив свою думку про цей фільм. Він ще кращий, ніж я думав спочатку.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/ratings/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified rating'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 01jtzynzhj72x1a5wzkwctfz1x
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      rating_id: 01jtzynzhj72x1a5wzkwctfz1x
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Текст коментаря. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: true
        example: 'Дуже цікавий фільм! Особливо сподобалась гра головного актора.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Чи містить коментар спойлери.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'ID батьківського коментаря, якщо це відповідь. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: "Тип об'єкта, до якого додається коментар."
        required: true
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: "ID об'єкта, до якого додається коментар."
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: 'Дуже цікавий фільм! Особливо сподобалась гра головного актора.'
      is_spoiler: false
      parent_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      commentable_type: App\Models\Movie
      commentable_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Новий текст коментаря. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: true
        example: 'Оновлений коментар: фільм дійсно чудовий, рекомендую всім!'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Чи містить коментар спойлери.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: 'Оновлений коментар: фільм дійсно чудовий, рекомендую всім!'
      is_spoiler: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comments for a specific user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації коментарів за текстом. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів (created_at - за датою створення, likes_count - за кількістю вподобань).'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - likes_count
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc - за зростанням, desc - за спаданням).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_spoiler:
        name: is_spoiler
        description: 'Фільтр для відображення тільки коментарів з поміткою про спойлер.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Фільтр за ID користувача, який залишив коментар. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_type:
        name: commentable_type
        description: 'Тип об''єкта, до якого відноситься коментар (App\Models\Movie, App\Models\Episode, App\Models\Selection).'
        required: false
        example: App\Models\Movie
        type: string
        enumValues:
          - App\Models\Movie
          - App\Models\Episode
          - App\Models\Selection
        exampleWasSpecified: false
        nullable: false
        custom: []
      commentable_id:
        name: commentable_id
        description: "ID об'єкта, до якого відноситься коментар."
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_root:
        name: is_root
        description: 'Фільтр для відображення тільки кореневих коментарів (не відповідей).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Фільтр за ID батьківського коментаря (для відображення відповідей). The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: ''
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      is_spoiler: false
      user_id: ''
      commentable_type: App\Models\Movie
      commentable_id: ''
      is_root: false
      parent_id: ''
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comment-likes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря, якому ставиться лайк/дизлайк. The <code>id</code> of an existing record in the comments table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: 'Тип реакції (true - лайк, false - дизлайк).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_liked: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-likes/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get likes by a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації лайків. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації лайків. The <code>id</code> of an existing record in the users table.'
        required: false
        example: ''
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_liked:
        name: is_liked
        description: 'Фільтрувати за типом лайка (true - лайк, false - дизлайк).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: ''
      user_id: ''
      is_liked: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jtzyp1s8bwhfx5p2fzsyymmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jtzyp1s8bwhfx5p2fzsyymmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_liked:
        name: is_liked
        description: 'Новий тип реакції (true - лайк, false - дизлайк).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      is_liked: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comment-likes/{commentLike_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment like'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentLike_id:
        name: commentLike_id
        description: 'The ID of the commentLike.'
        required: true
        example: 01jtzyp1s8bwhfx5p2fzsyymmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentLike_id: 01jtzyp1s8bwhfx5p2fzsyymmj
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comment-reports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря, на який подається скарга. The <code>id</code> of an existing record in the comments table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип скарги (SPAM, HARASSMENT, HATE_SPEECH, тощо).'
        required: true
        example: SPAM
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      body:
        name: body
        description: 'Додатковий текст скарги (необов’язково). Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Цей коментар містить рекламу та не стосується фільму.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      comment_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      type: SPAM
      body: 'Цей коментар містить рекламу та не стосується фільму.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comment-reports/comment/{comment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get reports for a specific comment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      comment_id:
        name: comment_id
        description: 'The ID of the comment.'
        required: true
        example: 01jtzyp12fb2k0by6vv4j1dh1e
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      comment_id: 01jtzyp12fb2k0by6vv4j1dh1e
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації скарг. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, який подав скарги. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип скарги для фільтрації.'
        required: false
        example: SPAM
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: 'Фільтрувати за статусом перегляду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      type: SPAM
      is_viewed: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of user subscriptions with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації підписок. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу для фільтрації підписок. The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Фільтрувати за статусом активності.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: 'Фільтрувати за автоматичним продовженням.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Початкова дата для фільтрації за датою початку. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Кінцева дата для фільтрації за датою початку. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>start_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Початкова дата для фільтрації за датою закінчення. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Кінцева дата для фільтрації за датою закінчення. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>end_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: start_date
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_active: false
      auto_renew: false
      start_date_from: '2023-01-01'
      start_date_to: '2023-12-31'
      end_date_from: '2023-01-01'
      end_date_to: '2023-12-31'
      page: 1
      per_page: 15
      sort: start_date
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user-subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user subscription'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'ID користувача, якому призначається підписка (якщо не вказано, використовується поточний користувач). The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу, який підключається. The <code>id</code> of an existing record in the tariffs table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Дата початку підписки (якщо не вказано, використовується поточна дата). Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Дата закінчення підписки (якщо не вказано, розраховується автоматично на основі тривалості тарифу). Поле value не є датою. Поле value має містити дату не раніше <code>start_date</code>.'
        required: false
        example: '2023-02-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Чи є підписка активною (за замовчуванням true).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: 'Чи автоматично продовжувати підписку (за замовчуванням false).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      start_date: '2023-01-01'
      end_date: '2023-02-01'
      is_active: false
      auto_renew: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user-subscriptions/active
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get active subscriptions for the authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації підписок. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу для фільтрації підписок. The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Фільтрувати за статусом активності.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: 'Фільтрувати за автоматичним продовженням.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Початкова дата для фільтрації за датою початку. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Кінцева дата для фільтрації за датою початку. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>start_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Початкова дата для фільтрації за датою закінчення. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Кінцева дата для фільтрації за датою закінчення. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>end_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: start_date
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_active: false
      auto_renew: false
      start_date_from: '2023-01-01'
      start_date_to: '2023-12-31'
      end_date_from: '2023-01-01'
      end_date_to: '2023-12-31'
      page: 1
      per_page: 15
      sort: start_date
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-subscriptions/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscriptions for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації підписок. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу для фільтрації підписок. The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Фільтрувати за статусом активності.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      auto_renew:
        name: auto_renew
        description: 'Фільтрувати за автоматичним продовженням.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_from:
        name: start_date_from
        description: 'Початкова дата для фільтрації за датою початку. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date_to:
        name: start_date_to
        description: 'Кінцева дата для фільтрації за датою початку. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>start_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_from:
        name: end_date_from
        description: 'Початкова дата для фільтрації за датою закінчення. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date_to:
        name: end_date_to
        description: 'Кінцева дата для фільтрації за датою закінчення. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>end_date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: start_date
        type: string
        enumValues:
          - created_at
          - updated_at
          - start_date
          - end_date
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_active: false
      auto_renew: false
      start_date_from: '2023-01-01'
      start_date_to: '2023-12-31'
      end_date_from: '2023-01-01'
      end_date_to: '2023-12-31'
      page: 1
      per_page: 15
      sort: start_date
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user-subscriptions/{userSubscription_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific user subscription'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userSubscription_id:
        name: userSubscription_id
        description: 'The ID of the userSubscription.'
        required: true
        example: 01jtzyp59bz1xvmzrk3ap94fyy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      userSubscription_id: 01jtzyp59bz1xvmzrk3ap94fyy
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of payments with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації платежів. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу для фільтрації платежів. The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус платежу для фільтрації.'
        required: false
        example: COMPLETED
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Метод оплати для фільтрації. Текст в полі value повинен мати довжину не більшу за 50.'
        required: false
        example: credit_card
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_amount:
        name: min_amount
        description: 'Мінімальна сума платежу для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_amount:
        name: max_amount
        description: 'Максимальна сума платежу для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 500.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Валюта платежу для фільтрації. Текст у полі value повинен містити 3 символів.'
        required: false
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'Початкова дата для фільтрації платежів. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'Кінцева дата для фільтрації платежів. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: amount
        type: string
        enumValues:
          - created_at
          - updated_at
          - amount
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      status: COMPLETED
      payment_method: credit_card
      min_amount: 100.0
      max_amount: 500.0
      currency: UAH
      date_from: '2023-01-01'
      date_to: '2023-12-31'
      page: 1
      per_page: 15
      sort: amount
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created payment and create a subscription if payment is successful'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'ID користувача, який здійснює платіж (якщо не вказано, використовується поточний користувач). The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу, за який здійснюється оплата. The <code>id</code> of an existing record in the tariffs table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Сума платежу. Поле value повинне бути не менше 0.'
        required: true
        example: 199.99
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Валюта платежу (3 символи). Текст у полі value повинен містити 3 символів.'
        required: true
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Метод оплати. Текст в полі value повинен мати довжину не більшу за 50.'
        required: true
        example: credit_card
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_id:
        name: transaction_id
        description: 'Унікальний ідентифікатор транзакції (необов’язково). Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: txn_12345678
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус платежу (за замовчуванням PENDING).'
        required: false
        example: COMPLETED
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      liqpay_data:
        name: liqpay_data
        description: 'Додаткові дані від LiqPay (необов’язково).'
        required: false
        example:
          payment_id: '123456789'
          status: success
          paytype: card
          card_token: token123
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      amount: 199.99
      currency: UAH
      payment_method: credit_card
      transaction_id: txn_12345678
      status: COMPLETED
      liqpay_data:
        payment_id: '123456789'
        status: success
        paytype: card
        card_token: token123
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/payments/{payment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific payment'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      payment_id:
        name: payment_id
        description: 'The ID of the payment.'
        required: true
        example: 01jtzyp5c2tr0w7dbdexfqptxt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      payment_id: 01jtzyp5c2tr0w7dbdexfqptxt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payment:
        name: payment
        description: 'The <code>id</code> of an existing record in the payments table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      payment: architecto
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/payments/user/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get payments for a specific user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters:
      user_id:
        name: user_id
        description: 'ID користувача для фільтрації платежів. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tariff_id:
        name: tariff_id
        description: 'ID тарифу для фільтрації платежів. The <code>id</code> of an existing record in the tariffs table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус платежу для фільтрації.'
        required: false
        example: COMPLETED
        type: string
        enumValues:
          - pending
          - success
          - failed
          - refunded
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: 'Метод оплати для фільтрації. Текст в полі value повинен мати довжину не більшу за 50.'
        required: false
        example: credit_card
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_amount:
        name: min_amount
        description: 'Мінімальна сума платежу для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_amount:
        name: max_amount
        description: 'Максимальна сума платежу для фільтрації. Поле value повинне бути не менше 0.'
        required: false
        example: 500.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Валюта платежу для фільтрації. Текст у полі value повинен містити 3 символів.'
        required: false
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_from:
        name: date_from
        description: 'Початкова дата для фільтрації платежів. Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date_to:
        name: date_to
        description: 'Кінцева дата для фільтрації платежів. Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>date_from</code>.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: amount
        type: string
        enumValues:
          - created_at
          - updated_at
          - amount
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      tariff_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      status: COMPLETED
      payment_method: credit_card
      min_amount: 100.0
      max_amount: 500.0
      currency: UAH
      date_from: '2023-01-01'
      date_to: '2023-12-31'
      page: 1
      per_page: 15
      sort: amount
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of users with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      q:
        name: q
        description: 'Пошуковий запит для фільтрації користувачів. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: john
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - email
          - created_at
          - last_seen_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      roles:
        name: roles
        description: ''
        required: false
        example:
          - moderator
        type: 'string[]'
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      genders:
        name: genders
        description: ''
        required: false
        example:
          - other
        type: 'string[]'
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: 'Фільтрація за статусом блокування.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_verified:
        name: is_verified
        description: 'Фільтрація за статусом верифікації електронної пошти.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_seen_after:
        name: last_seen_after
        description: 'Фільтрація за датою останнього візиту (після вказаної дати). Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_seen_before:
        name: last_seen_before
        description: 'Фільтрація за датою останнього візиту (до вказаної дати). Поле value не є датою.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_after:
        name: created_after
        description: 'Фільтрація за датою створення (після вказаної дати). Поле value не є датою.'
        required: false
        example: '2023-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      created_before:
        name: created_before
        description: 'Фільтрація за датою створення (до вказаної дати). Поле value не є датою.'
        required: false
        example: '2023-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      q: john
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
      roles:
        - moderator
      genders:
        - other
      is_banned: false
      is_verified: false
      last_seen_after: '2023-01-01'
      last_seen_before: '2023-12-31'
      created_after: '2023-01-01'
      created_before: '2023-12-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Ім''\u044f користувача. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Електронна пошта користувача (має бути унікальною). Поле value повинне містити коректну електронну адресу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Пароль користувача.'
        required: true
        example: StrongPassword123!
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Роль користувача.'
        required: true
        example: USER
        type: string
        enumValues:
          - user
          - admin
          - moderator
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: "Стать користувача (необов'язково)."
        required: false
        example: MALE
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: "Аватар користувача (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/avatar.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: "Фонове зображення користувача (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: "Опис профілю користувача (необов'язково). Текст в полі value повинен мати довжину не більшу за 1000."
        required: false
        example: 'Люблю дивитись фільми та серіали у вільний час.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: "Дата народження користувача (необов'язково). Поле value не є датою."
        required: false
        example: '1990-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allow_adult:
        name: allow_adult
        description: 'Чи дозволений контент для дорослих.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_next:
        name: is_auto_next
        description: 'Чи автоматично переходити до наступного епізоду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_play:
        name: is_auto_play
        description: 'Чи автоматично відтворювати відео.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_auto_skip_intro:
        name: is_auto_skip_intro
        description: 'Чи автоматично пропускати інтро.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_private_favorites:
        name: is_private_favorites
        description: 'Чи є список улюблених приватним.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_banned:
        name: is_banned
        description: 'Чи заблокований користувач.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: StrongPassword123!
      role: USER
      gender: MALE
      avatar: 'https://example.com/avatar.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      description: 'Люблю дивитись фільми та серіали у вільний час.'
      birthday: '1990-01-01'
      allow_adult: false
      is_auto_next: false
      is_auto_play: false
      is_auto_skip_intro: false
      is_private_favorites: false
      is_banned: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/users/{user_id}/ban'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ban the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Причина блокування користувача (необов’язково). Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Порушення правил користування сервісом.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: 'Порушення правил користування сервісом.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/users/{id}/unban'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unban the specified user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 01jtzynww0da7ybsp8m063acmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 01jtzynww0da7ybsp8m063acmc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Причина блокування користувача (необов’язково). Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Порушення правил користування сервісом.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: 'Порушення правил користування сервісом.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/movies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва фільму або серіалу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: Інтерстеллар
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис фільму або серіалу.'
        required: true
        example: 'Фільм про подорож групи дослідників у космосі...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: 'Тип контенту (MOVIE - фільм, TV_SERIES - серіал, тощо).'
        required: true
        example: MOVIE
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус контенту (RELEASED - випущено, IN_PRODUCTION - у виробництві, тощо).'
        required: true
        example: RELEASED
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: "ID студії, яка створила фільм (необов'язково). The <code>id</code> of an existing record in the studios table."
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: "Постер фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/poster.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: "Фонове зображення фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: "Зображення з назвою фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/title.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Текст в полі value повинен мати довжину не більшу за 2.'
        required: false
        example:
          - bn
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - g
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Дата першого виходу в ефір. Поле value не є датою.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Дата останнього виходу в ефір (для серіалів). Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>first_air_date</code>.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Тривалість фільму в хвилинах. Поле value повинне бути не менше 1.'
        required: false
        example: 169
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Рейтинг IMDb від 0 до 10. Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 8.6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: 'Чи опублікований фільм на сайті.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: 'Масив відеоплеєрів та трейлерів.'
        required: false
        example:
          -
            type: TRAILER
            url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
            title: 'Офіційний трейлер'
            duration: 145
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: "Масив пов'язаних фільмів з вказанням типу зв'язку."
        required: false
        example:
          -
            movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
            type: SEQUEL
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: 'Масив джерел даних з API.'
        required: false
        example:
          -
            source: TMDB
            id: '157336'
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: interstellar
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Інтерстеллар (2014) - Дивитись онлайн'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/meta-image.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Текст в полі value повинен мати довжину не більшу за 2048.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Поле value повинне бути не менше 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Інтерстеллар
      description: 'Фільм про подорож групи дослідників у космосі...'
      kind: MOVIE
      status: RELEASED
      studio_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      poster: 'https://example.com/poster.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      image_name: 'https://example.com/title.jpg'
      countries:
        - bn
      aliases:
        - g
      first_air_date: '2014-11-07'
      last_air_date: '2014-11-07'
      duration: 169
      imdb_score: 8.6
      is_published: false
      attachments:
        -
          type: TRAILER
          url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
          title: 'Офіційний трейлер'
          duration: 145
      related:
        -
          movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
          type: SEQUEL
      similars:
        - architecto
      api_sources:
        -
          source: TMDB
          id: '157336'
      tag_ids:
        - architecto
      slug: interstellar
      meta_title: 'Інтерстеллар (2014) - Дивитись онлайн'
      meta_description: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
      meta_image: 'https://example.com/meta-image.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва фільму або серіалу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: Інтерстеллар
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис фільму або серіалу.'
        required: false
        example: 'Фільм про подорож групи дослідників у космосі...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: 'Тип контенту (MOVIE - фільм, TV_SERIES - серіал, тощо).'
        required: false
        example: MOVIE
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус контенту (RELEASED - випущено, IN_PRODUCTION - у виробництві, тощо).'
        required: false
        example: RELEASED
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: "ID студії, яка створила фільм (необов'язково). The <code>id</code> of an existing record in the studios table."
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: "Постер фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/poster.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: "Фонове зображення фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: "Зображення з назвою фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/title.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Текст в полі value повинен мати довжину не більшу за 2.'
        required: false
        example:
          - bn
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - g
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Дата першого виходу в ефір. Поле value не є датою.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Дата останнього виходу в ефір (для серіалів). Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>first_air_date</code>.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Тривалість фільму в хвилинах. Поле value повинне бути не менше 1.'
        required: false
        example: 169
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Рейтинг IMDb від 0 до 10. Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 8.6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: 'Чи опублікований фільм на сайті.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: 'Масив відеоплеєрів та трейлерів.'
        required: false
        example:
          -
            type: TRAILER
            url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
            title: 'Офіційний трейлер'
            duration: 145
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: "Масив пов'язаних фільмів з вказанням типу зв'язку."
        required: false
        example:
          -
            movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
            type: SEQUEL
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: 'Масив джерел даних з API.'
        required: false
        example:
          -
            source: TMDB
            id: '157336'
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: interstellar
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Інтерстеллар (2014) - Дивитись онлайн'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/meta-image.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Текст в полі value повинен мати довжину не більшу за 2048.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Поле value повинне бути не менше 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Інтерстеллар
      description: 'Фільм про подорож групи дослідників у космосі...'
      kind: MOVIE
      status: RELEASED
      studio_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      poster: 'https://example.com/poster.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      image_name: 'https://example.com/title.jpg'
      countries:
        - bn
      aliases:
        - g
      first_air_date: '2014-11-07'
      last_air_date: '2014-11-07'
      duration: 169
      imdb_score: 8.6
      is_published: false
      attachments:
        -
          type: TRAILER
          url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
          title: 'Офіційний трейлер'
          duration: 145
      related:
        -
          movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
          type: SEQUEL
      similars:
        - architecto
      api_sources:
        -
          source: TMDB
          id: '157336'
      tag_ids:
        - architecto
      slug: interstellar
      meta_title: 'Інтерстеллар (2014) - Дивитись онлайн'
      meta_description: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
      meta_image: 'https://example.com/meta-image.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update specific fields of the movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва фільму або серіалу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: Інтерстеллар
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис фільму або серіалу.'
        required: false
        example: 'Фільм про подорож групи дослідників у космосі...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      kind:
        name: kind
        description: 'Тип контенту (MOVIE - фільм, TV_SERIES - серіал, тощо).'
        required: false
        example: MOVIE
        type: string
        enumValues:
          - movie
          - tv_series
          - animated_movie
          - animated_series
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Статус контенту (RELEASED - випущено, IN_PRODUCTION - у виробництві, тощо).'
        required: false
        example: RELEASED
        type: string
        enumValues:
          - anons
          - ongoing
          - released
          - canceled
          - rumored
        exampleWasSpecified: false
        nullable: false
        custom: []
      studio_id:
        name: studio_id
        description: "ID студії, яка створила фільм (необов'язково). The <code>id</code> of an existing record in the studios table."
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      poster:
        name: poster
        description: "Постер фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/poster.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      backdrop:
        name: backdrop
        description: "Фонове зображення фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/backdrop.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image_name:
        name: image_name
        description: "Зображення з назвою фільму (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/title.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      countries:
        name: countries
        description: 'Текст в полі value повинен мати довжину не більшу за 2.'
        required: false
        example:
          - bn
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - g
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_air_date:
        name: first_air_date
        description: 'Дата першого виходу в ефір. Поле value не є датою.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      last_air_date:
        name: last_air_date
        description: 'Дата останнього виходу в ефір (для серіалів). Поле value не є датою. Поле value має містити дату не раніше, або дорівнюватися <code>first_air_date</code>.'
        required: false
        example: '2014-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      duration:
        name: duration
        description: 'Тривалість фільму в хвилинах. Поле value повинне бути не менше 1.'
        required: false
        example: 169
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imdb_score:
        name: imdb_score
        description: 'Рейтинг IMDb від 0 до 10. Поле value повинне бути не менше 0. Поле value має бути не більше 10.'
        required: false
        example: 8.6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_published:
        name: is_published
        description: 'Чи опублікований фільм на сайті.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: 'Масив відеоплеєрів та трейлерів.'
        required: false
        example:
          -
            type: TRAILER
            url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
            title: 'Офіційний трейлер'
            duration: 145
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      related:
        name: related
        description: "Масив пов'язаних фільмів з вказанням типу зв'язку."
        required: false
        example:
          -
            movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
            type: SEQUEL
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      similars:
        name: similars
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      api_sources:
        name: api_sources
        description: 'Масив джерел даних з API.'
        required: false
        example:
          -
            source: TMDB
            id: '157336'
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tag_ids:
        name: tag_ids
        description: 'The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: interstellar
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Інтерстеллар (2014) - Дивитись онлайн'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/meta-image.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'attachments[].type':
        name: 'attachments[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - trailer
          - teaser
          - behind_the_scenes
          - interview
          - clip
          - deleted_scene
          - blooper
          - featurette
          - picture
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].url':
        name: 'attachments[].url'
        description: 'Must be a valid URL. Текст в полі value повинен мати довжину не більшу за 2048.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].title':
        name: 'attachments[].title'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attachments[].duration':
        name: 'attachments[].duration'
        description: 'Поле value повинне бути не менше 1.'
        required: true
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].movie_id':
        name: 'related[].movie_id'
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'related[].type':
        name: 'related[].type'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - season
          - source
          - sequel
          - side_story
          - summary
          - other
          - adaptation
          - alternative
          - prequel
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].source':
        name: 'api_sources[].source'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - tmdb
          - shiki
          - imdb
          - anilist
        exampleWasSpecified: false
        nullable: false
        custom: []
      'api_sources[].id':
        name: 'api_sources[].id'
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Інтерстеллар
      description: 'Фільм про подорож групи дослідників у космосі...'
      kind: MOVIE
      status: RELEASED
      studio_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      poster: 'https://example.com/poster.jpg'
      backdrop: 'https://example.com/backdrop.jpg'
      image_name: 'https://example.com/title.jpg'
      countries:
        - bn
      aliases:
        - g
      first_air_date: '2014-11-07'
      last_air_date: '2014-11-07'
      duration: 169
      imdb_score: 8.6
      is_published: false
      attachments:
        -
          type: TRAILER
          url: 'https://www.youtube.com/watch?v=zSWdZVtXT7E'
          title: 'Офіційний трейлер'
          duration: 145
      related:
        -
          movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
          type: SEQUEL
      similars:
        - architecto
      api_sources:
        -
          source: TMDB
          id: '157336'
      tag_ids:
        - architecto
      slug: interstellar
      meta_title: 'Інтерстеллар (2014) - Дивитись онлайн'
      meta_description: 'Дивіться Інтерстеллар (2014) онлайн безкоштовно в HD якості.'
      meta_image: 'https://example.com/meta-image.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/movies/{movie_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified movie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      movie_slug:
        name: movie_slug
        description: 'The slug of the movie.'
        required: true
        example: omnis-id-quaerat-soluta-oiduow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      movie_slug: omnis-id-quaerat-soluta-oiduow
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/episodes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'ID фільму, до якого належить епізод. The <code>id</code> of an existing record in the movies table.'
        required: true
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Номер епізоду. Поле value повинне бути не менше 1.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Назва епізоду. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'Пілотний епізод'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис епізоду.'
        required: true
        example: 'У цьому епізоді головний герой зустрічає свого найлютішого ворога...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'Тривалість епізоду в хвилинах. Поле value повинне бути не менше 1.'
        required: false
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      air_date:
        name: air_date
        description: 'Дата виходу епізоду. Поле value не є датою.'
        required: false
        example: '2023-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_filler:
        name: is_filler
        description: 'Чи є епізод філером (не важливим для сюжету).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pictures:
        name: pictures
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      video_players:
        name: video_players
        description: 'Масив відеоплеєрів для епізоду.'
        required: false
        example:
          -
            name: YOUTUBE
            url: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
            file_url: null
            dubbing: Українська
            quality: HD
            locale_code: uk
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор епізоду для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: pilot-episode
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Пілотний епізод - Назва серіалу'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться пілотний епізод серіалу онлайн безкоштовно в HD якості.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення.'
        required: false
        example: 'https://example.com/images/episode-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].name':
        name: 'video_players[].name'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - kodik
          - aloha
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].url':
        name: 'video_players[].url'
        description: 'Текст в полі value повинен мати довжину не більшу за 2048.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].file_url':
        name: 'video_players[].file_url'
        description: 'Текст в полі value повинен мати довжину не більшу за 2048.'
        required: false
        example: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].dubbing':
        name: 'video_players[].dubbing'
        description: 'Текст в полі value повинен мати довжину не більшу за 50.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].quality':
        name: 'video_players[].quality'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - sd
          - hd
          - full_hd
          - uhd
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].locale_code':
        name: 'video_players[].locale_code'
        description: 'Текст в полі value повинен мати довжину не більшу за 10.'
        required: false
        example: ngzmiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      number: 1
      name: 'Пілотний епізод'
      description: 'У цьому епізоді головний герой зустрічає свого найлютішого ворога...'
      duration: 45
      air_date: '2023-01-15'
      is_filler: false
      video_players:
        -
          name: YOUTUBE
          url: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
          file_url: null
          dubbing: Українська
          quality: HD
          locale_code: uk
      slug: pilot-episode
      meta_title: 'Пілотний епізод - Назва серіалу'
      meta_description: 'Дивіться пілотний епізод серіалу онлайн безкоштовно в HD якості.'
      meta_image: 'https://example.com/images/episode-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: quidem-sunt-aliquam-id-hgwstn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: quidem-sunt-aliquam-id-hgwstn
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      movie_id:
        name: movie_id
        description: 'ID фільму, до якого належить епізод. The <code>id</code> of an existing record in the movies table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      number:
        name: number
        description: 'Номер епізоду. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Назва епізоду. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Пілотний епізод'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис епізоду.'
        required: false
        example: 'У цьому епізоді головний герой зустрічає свого найлютішого ворога...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'Тривалість епізоду в хвилинах. Поле value повинне бути не менше 1.'
        required: false
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      air_date:
        name: air_date
        description: 'Дата виходу епізоду. Поле value не є датою.'
        required: false
        example: '2023-01-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_filler:
        name: is_filler
        description: 'Чи є епізод філером (не важливим для сюжету).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pictures:
        name: pictures
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      video_players:
        name: video_players
        description: 'Масив відеоплеєрів для епізоду.'
        required: false
        example:
          -
            name: YOUTUBE
            url: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
            file_url: null
            dubbing: Українська
            quality: HD
            locale_code: uk
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор епізоду для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: pilot-episode
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Пілотний епізод - Назва серіалу'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться пілотний епізод серіалу онлайн безкоштовно в HD якості.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення.'
        required: false
        example: 'https://example.com/images/episode-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].name':
        name: 'video_players[].name'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - kodik
          - aloha
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].url':
        name: 'video_players[].url'
        description: 'Текст в полі value повинен мати довжину не більшу за 2048.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].file_url':
        name: 'video_players[].file_url'
        description: 'Текст в полі value повинен мати довжину не більшу за 2048.'
        required: false
        example: 'http://rempel.com/sunt-nihil-accusantium-harum-mollitia'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].dubbing':
        name: 'video_players[].dubbing'
        description: 'Текст в полі value повинен мати довжину не більшу за 50.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'video_players[].quality':
        name: 'video_players[].quality'
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - sd
          - hd
          - full_hd
          - uhd
        exampleWasSpecified: false
        nullable: false
        custom: []
      'video_players[].locale_code':
        name: 'video_players[].locale_code'
        description: 'Текст в полі value повинен мати довжину не більшу за 10.'
        required: false
        example: ngzmiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      movie_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      number: 1
      name: 'Пілотний епізод'
      description: 'У цьому епізоді головний герой зустрічає свого найлютішого ворога...'
      duration: 45
      air_date: '2023-01-15'
      is_filler: false
      video_players:
        -
          name: YOUTUBE
          url: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
          file_url: null
          dubbing: Українська
          quality: HD
          locale_code: uk
      slug: pilot-episode
      meta_title: 'Пілотний епізод - Назва серіалу'
      meta_description: 'Дивіться пілотний епізод серіалу онлайн безкоштовно в HD якості.'
      meta_image: 'https://example.com/images/episode-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/episodes/{episode_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified episode'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      episode_slug:
        name: episode_slug
        description: 'The slug of the episode.'
        required: true
        example: quidem-sunt-aliquam-id-hgwstn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      episode_slug: quidem-sunt-aliquam-id-hgwstn
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/people
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Ім''\u044f персони. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'Крістофер Нолан'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип персони (ACTOR - актор, DIRECTOR - режисер, тощо).'
        required: true
        example: DIRECTOR
        type: string
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      original_name:
        name: original_name
        description: "Оригінальне ім'\\u044f персони (необов'язково). Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Christopher Nolan'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gender:
        name: gender
        description: "Стать персони (необов'язково)."
        required: false
        example: MALE
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: "Зображення персони (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/nolan.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: "Опис персони (необов'язково)."
        required: false
        example: 'Британсько-американський кінорежисер, сценарист і продюсер...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: "Дата народження персони (необов'язково). Поле value не є датою. Поле value має містити дату не пізніше, або дорівнюватися <code>today</code>."
        required: false
        example: '1970-07-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthplace:
        name: birthplace
        description: "Місце народження персони (необов'язково). Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Лондон, Великобританія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор персони для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: christopher-nolan
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Крістофер Нолан - фільми та біографія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дізнайтеся більше про Крістофера Нолана, його фільми та біографію.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/nolan-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Крістофер Нолан'
      type: DIRECTOR
      original_name: 'Christopher Nolan'
      gender: MALE
      image: 'https://example.com/images/nolan.jpg'
      description: 'Британсько-американський кінорежисер, сценарист і продюсер...'
      birthday: '1970-07-30'
      birthplace: 'Лондон, Великобританія'
      slug: christopher-nolan
      meta_title: 'Крістофер Нолан - фільми та біографія'
      meta_description: 'Дізнайтеся більше про Крістофера Нолана, його фільми та біографію.'
      meta_image: 'https://example.com/images/nolan-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: denis-jevgenovic-brovarenko-0u81ve
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: denis-jevgenovic-brovarenko-0u81ve
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Ім''\u044f персони. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Крістофер Нолан'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип персони (ACTOR - актор, DIRECTOR - режисер, тощо).'
        required: false
        example: DIRECTOR
        type: string
        enumValues:
          - actor
          - character
          - director
          - producer
          - writer
          - editor
          - cinematographer
          - composer
          - art_director
          - sound_designer
          - costume_designer
          - makeup_artist
          - voice_actor
          - stunt_performer
          - assistant_director
          - producer_assistant
          - script_supervisor
          - production_designer
          - visual_effects_supervisor
        exampleWasSpecified: false
        nullable: false
        custom: []
      original_name:
        name: original_name
        description: "Оригінальне ім'\\u044f персони (необов'язково). Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Christopher Nolan'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gender:
        name: gender
        description: "Стать персони (необов'язково)."
        required: false
        example: MALE
        type: string
        enumValues:
          - male
          - female
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: "Зображення персони (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/nolan.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: "Опис персони (необов'язково)."
        required: false
        example: 'Британсько-американський кінорежисер, сценарист і продюсер...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: "Дата народження персони (необов'язково). Поле value не є датою. Поле value має містити дату не пізніше, або дорівнюватися <code>today</code>."
        required: false
        example: '1970-07-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthplace:
        name: birthplace
        description: "Місце народження персони (необов'язково). Текст в полі value повинен мати довжину не більшу за 255."
        required: false
        example: 'Лондон, Великобританія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор персони для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: christopher-nolan
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Крістофер Нолан - фільми та біографія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дізнайтеся більше про Крістофера Нолана, його фільми та біографію.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/nolan-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Крістофер Нолан'
      type: DIRECTOR
      original_name: 'Christopher Nolan'
      gender: MALE
      image: 'https://example.com/images/nolan.jpg'
      description: 'Британсько-американський кінорежисер, сценарист і продюсер...'
      birthday: '1970-07-30'
      birthplace: 'Лондон, Великобританія'
      slug: christopher-nolan
      meta_title: 'Крістофер Нолан - фільми та біографія'
      meta_description: 'Дізнайтеся більше про Крістофера Нолана, його фільми та біографію.'
      meta_image: 'https://example.com/images/nolan-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/people/{person_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      person_slug:
        name: person_slug
        description: 'The slug of the person.'
        required: true
        example: denis-jevgenovic-brovarenko-0u81ve
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      person_slug: denis-jevgenovic-brovarenko-0u81ve
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/studios
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва студії. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'Warner Bros. Pictures'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис студії. Текст в полі value повинен мати довжину не більшу за 512.'
        required: true
        example: 'Американська кіностудія, одна з найбільших у світі...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "Логотип студії (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/warner-bros.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор студії для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: warner-bros-pictures
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Warner Bros. Pictures - фільми та історія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 192.'
        required: false
        example: 'Дізнайтеся більше про Warner Bros. Pictures, її фільми та історію.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/warner-bros-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Warner Bros. Pictures'
      description: 'Американська кіностудія, одна з найбільших у світі...'
      image: 'https://example.com/images/warner-bros.jpg'
      aliases:
        - b
      slug: warner-bros-pictures
      meta_title: 'Warner Bros. Pictures - фільми та історія'
      meta_description: 'Дізнайтеся більше про Warner Bros. Pictures, її фільми та історію.'
      meta_image: 'https://example.com/images/warner-bros-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: laika-1649-ahsumy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: laika-1649-ahsumy
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва студії. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Warner Bros. Pictures'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис студії. Текст в полі value повинен мати довжину не більшу за 512.'
        required: false
        example: 'Американська кіностудія, одна з найбільших у світі...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "Логотип студії (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/warner-bros.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор студії для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: warner-bros-pictures
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Warner Bros. Pictures - фільми та історія'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 192.'
        required: false
        example: 'Дізнайтеся більше про Warner Bros. Pictures, її фільми та історію.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/warner-bros-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Warner Bros. Pictures'
      description: 'Американська кіностудія, одна з найбільших у світі...'
      image: 'https://example.com/images/warner-bros.jpg'
      aliases:
        - b
      slug: warner-bros-pictures
      meta_title: 'Warner Bros. Pictures - фільми та історія'
      meta_description: 'Дізнайтеся більше про Warner Bros. Pictures, її фільми та історію.'
      meta_image: 'https://example.com/images/warner-bros-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/studios/{studio_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified studio'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studio_slug:
        name: studio_slug
        description: 'The slug of the studio.'
        required: true
        example: laika-1649-ahsumy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studio_slug: laika-1649-ahsumy
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва тегу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: Фантастика
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис тегу. Текст в полі value повинен мати довжину не більшу за 512.'
        required: true
        example: 'Жанр кіно, що використовує фантастичні елементи...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: 'Чи є тег жанром.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "Зображення тегу (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/fantasy.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор тегу для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: fantasy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Фантастика - фільми та серіали'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 192.'
        required: false
        example: 'Дивіться найкращі фільми та серіали в жанрі фантастики.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/fantasy-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Фантастика
      description: 'Жанр кіно, що використовує фантастичні елементи...'
      is_genre: false
      image: 'https://example.com/images/fantasy.jpg'
      aliases:
        - b
      slug: fantasy
      meta_title: 'Фантастика - фільми та серіали'
      meta_description: 'Дивіться найкращі фільми та серіали в жанрі фантастики.'
      meta_image: 'https://example.com/images/fantasy-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: parody-197-rwdbt3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: parody-197-rwdbt3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва тегу. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: Фантастика
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис тегу. Текст в полі value повинен мати довжину не більшу за 512.'
        required: false
        example: 'Жанр кіно, що використовує фантастичні елементи...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_genre:
        name: is_genre
        description: 'Чи є тег жанром.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: "Зображення тегу (файл або URL, необов'язково)."
        required: false
        example: 'https://example.com/images/fantasy.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      aliases:
        name: aliases
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор тегу для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: fantasy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Фантастика - фільми та серіали'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 192.'
        required: false
        example: 'Дивіться найкращі фільми та серіали в жанрі фантастики.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/fantasy-meta.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Фантастика
      description: 'Жанр кіно, що використовує фантастичні елементи...'
      is_genre: false
      image: 'https://example.com/images/fantasy.jpg'
      aliases:
        - b
      slug: fantasy
      meta_title: 'Фантастика - фільми та серіали'
      meta_description: 'Дивіться найкращі фільми та серіали в жанрі фантастики.'
      meta_image: 'https://example.com/images/fantasy-meta.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tags/{tag_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified tag'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tag_slug:
        name: tag_slug
        description: 'The slug of the tag.'
        required: true
        example: parody-197-rwdbt3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tag_slug: parody-197-rwdbt3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/selections
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва підбірки. Текст в полі value повинен мати довжину не більшу за 255.'
        required: true
        example: 'Найкращі фільми 2023 року'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис підбірки. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: true
        example: 'Збірка найкращих фільмів, які вийшли в 2023 році...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: "ID користувача, який створив підбірку (необов'язково). The <code>id</code> of an existing record in the users table."
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: 'Чи опублікована підбірка.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор підбірки для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: best-movies-2023
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Найкращі фільми 2023 року - Топ підбірка'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться найкращі фільми 2023 року в нашій топ-підбірці.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/best-movies-2023.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Найкращі фільми 2023 року'
      description: 'Збірка найкращих фільмів, які вийшли в 2023 році...'
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_published: false
      movie_ids:
        - architecto
      person_ids:
        - architecto
      slug: best-movies-2023
      meta_title: 'Найкращі фільми 2023 року - Топ підбірка'
      meta_description: 'Дивіться найкращі фільми 2023 року в нашій топ-підбірці.'
      meta_image: 'https://example.com/images/best-movies-2023.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: tempore-voluptates-dolorem-ut-waobdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: tempore-voluptates-dolorem-ut-waobdu
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва підбірки. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Найкращі фільми 2023 року'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис підбірки. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Збірка найкращих фільмів, які вийшли в 2023 році...'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: "ID користувача, який створив підбірку (необов'язково). The <code>id</code> of an existing record in the users table."
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_published:
        name: is_published
        description: 'Чи опублікована підбірка.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movie_ids:
        name: movie_ids
        description: 'The <code>id</code> of an existing record in the movies table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      person_ids:
        name: person_ids
        description: 'The <code>id</code> of an existing record in the people table.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор підбірки для URL. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: best-movies-2023
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок. Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example: 'Найкращі фільми 2023 року - Топ підбірка'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис. Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Дивіться найкращі фільми 2023 року в нашій топ-підбірці.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'SEO зображення (файл або URL).'
        required: false
        example: 'https://example.com/images/best-movies-2023.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Найкращі фільми 2023 року'
      description: 'Збірка найкращих фільмів, які вийшли в 2023 році...'
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      is_published: false
      movie_ids:
        - architecto
      person_ids:
        - architecto
      slug: best-movies-2023
      meta_title: 'Найкращі фільми 2023 року - Топ підбірка'
      meta_description: 'Дивіться найкращі фільми 2023 року в нашій топ-підбірці.'
      meta_image: 'https://example.com/images/best-movies-2023.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/selections/{selection_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified selection'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      selection_slug:
        name: selection_slug
        description: 'The slug of the selection.'
        required: true
        example: tempore-voluptates-dolorem-ut-waobdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      selection_slug: tempore-voluptates-dolorem-ut-waobdu
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/comment-reports
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of comment reports with filtering, sorting and pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації скарг. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, який подав скарги. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип скарги для фільтрації.'
        required: false
        example: SPAM
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: 'Фільтрувати за статусом перегляду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      type: SPAM
      is_viewed: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/comment-reports/unviewed
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get unviewed reports'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      comment_id:
        name: comment_id
        description: 'ID коментаря для фільтрації скарг. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'ID користувача, який подав скарги. The <code>id</code> of an existing record in the users table.'
        required: false
        example: 01HN5PXMEH6SDMF0KAVSW1DYTY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип скарги для фільтрації.'
        required: false
        example: SPAM
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_viewed:
        name: is_viewed
        description: 'Фільтрувати за статусом перегляду.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Номер сторінки для пагінації. Поле value повинне бути не менше 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Кількість елементів на сторінці. Поле value повинне бути не менше 1. Поле value має бути не більше 100.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Поле для сортування результатів.'
        required: false
        example: created_at
        type: string
        enumValues:
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      direction:
        name: direction
        description: 'Напрямок сортування (asc або desc).'
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      comment_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      user_id: 01HN5PXMEH6SDMF0KAVSW1DYTY
      type: SPAM
      is_viewed: false
      page: 1
      per_page: 15
      sort: created_at
      direction: desc
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get detailed information about a specific comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jtzyp51fj7ggxtjba8zkkz29
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jtzyp51fj7ggxtjba8zkkz29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jtzyp51fj7ggxtjba8zkkz29
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jtzyp51fj7ggxtjba8zkkz29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_viewed:
        name: is_viewed
        description: 'Статус перегляду скарги.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Тип скарги (SPAM, HARASSMENT, HATE_SPEECH, тощо).'
        required: false
        example: HATE_SPEECH
        type: string
        enumValues:
          - insult
          - flood_offtop_meaningless
          - ad_spam
          - spoiler
          - provocation_conflict
          - inappropriate_language
          - forbidden_unnecessary_content
          - meaningless_empty_topic
          - duplicate_topic
        exampleWasSpecified: false
        nullable: false
        custom: []
      body:
        name: body
        description: 'Додатковий текст скарги (необов’язково). Текст в полі value повинен мати довжину не більшу за 1000.'
        required: false
        example: 'Після перевірки виявлено, що це не спам, а мова ненависті.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      is_viewed: false
      type: HATE_SPEECH
      body: 'Після перевірки виявлено, що це не спам, а мова ненависті.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/comment-reports/{commentReport_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment report'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      commentReport_id:
        name: commentReport_id
        description: 'The ID of the commentReport.'
        required: true
        example: 01jtzyp51fj7ggxtjba8zkkz29
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      commentReport_id: 01jtzyp51fj7ggxtjba8zkkz29
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tariffs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва тарифу. Текст в полі value повинен мати довжину не більшу за 128.'
        required: true
        example: Преміум
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис тарифу.'
        required: true
        example: 'Повний доступ до всіх фільмів та серіалів без реклами.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Ціна тарифу. Поле value повинне бути не менше 0.'
        required: true
        example: 199.99
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Валюта тарифу (3 символи). Текст у полі value повинен містити 3 символів.'
        required: true
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Тривалість тарифу в днях. Поле value повинне бути не менше 1.'
        required: true
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      features:
        name: features
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Чи є тариф активним.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор тарифу для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: true
        example: premium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок (необов’язково). Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Преміум тариф - Netflix'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис (необов’язково). Текст в полі value повинен мати довжину не більшу за 376.'
        required: false
        example: 'Отримайте повний доступ до всіх фільмів та серіалів без реклами з нашим преміум тарифом.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'URL зображення для SEO (необов’язково). Текст в полі value повинен мати довжину не більшу за 2048. Must be a valid URL.'
        required: false
        example: 'https://example.com/images/premium-tariff.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Преміум
      description: 'Повний доступ до всіх фільмів та серіалів без реклами.'
      price: 199.99
      currency: UAH
      duration_days: 30
      features:
        - b
      is_active: false
      slug: premium
      meta_title: 'Преміум тариф - Netflix'
      meta_description: 'Отримайте повний доступ до всіх фільмів та серіалів без реклами з нашим преміум тарифом.'
      meta_image: 'https://example.com/images/premium-tariff.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/admin/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Назва тарифу. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Преміум Плюс'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Опис тарифу.'
        required: false
        example: 'Повний доступ до всіх фільмів та серіалів без реклами та з можливістю завантаження.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'Ціна тарифу. Поле value повинне бути не менше 0.'
        required: false
        example: 249.99
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'Валюта тарифу (3 символи). Текст у полі value повинен містити 3 символів.'
        required: false
        example: UAH
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration_days:
        name: duration_days
        description: 'Тривалість тарифу в днях. Поле value повинне бути не менше 1.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      features:
        name: features
        description: 'Текст в полі value повинен мати довжину не більшу за 255.'
        required: false
        example:
          - b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Чи є тариф активним.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'Унікальний ідентифікатор тарифу для URL. Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: premium-plus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meta_title:
        name: meta_title
        description: 'SEO заголовок (необов’язково). Текст в полі value повинен мати довжину не більшу за 128.'
        required: false
        example: 'Преміум Плюс тариф - Netflix'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_description:
        name: meta_description
        description: 'SEO опис (необов’язково). Текст в полі value повинен мати довжину не більшу за 376.'
        required: false
        example: 'Отримайте повний доступ до всіх фільмів та серіалів без реклами та з можливістю завантаження.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      meta_image:
        name: meta_image
        description: 'URL зображення для SEO (необов’язково). Текст в полі value повинен мати довжину не більшу за 2048. Must be a valid URL.'
        required: false
        example: 'https://example.com/images/premium-plus-tariff.jpg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Преміум Плюс'
      description: 'Повний доступ до всіх фільмів та серіалів без реклами та з можливістю завантаження.'
      price: 249.99
      currency: UAH
      duration_days: 30
      features:
        - b
      is_active: false
      slug: premium-plus
      meta_title: 'Преміум Плюс тариф - Netflix'
      meta_description: 'Отримайте повний доступ до всіх фільмів та серіалів без реклами та з можливістю завантаження.'
      meta_image: 'https://example.com/images/premium-plus-tariff.jpg'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/tariffs/{tariff_slug}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified tariff'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tariff_slug:
        name: tariff_slug
        description: 'The slug of the tariff.'
        required: true
        example: basic
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      tariff_slug: basic
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      days:
        name: days
        description: 'Кількість днів для відображення статистики. Поле value повинне бути не менше 1. Поле value має бути не більше 365.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      days: 30
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/content
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get content statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      days:
        name: days
        description: 'Кількість днів для відображення статистики. Поле value повинне бути не менше 1. Поле value має бути не більше 365.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      days: 30
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/subscriptions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subscription statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      days:
        name: days
        description: 'Кількість днів для відображення статистики. Поле value повинне бути не менше 1. Поле value має бути не більше 365.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      days: 30
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/stats/payments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get payment statistics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      days:
        name: days
        description: 'Кількість днів для відображення статистики. Поле value повинне бути не менше 1. Поле value має бути не більше 365.'
        required: false
        example: 30
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      days: 30
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
